Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ERRO

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> ListaDefinicoes
Rule 2     ListaDefinicoes -> ListaDefinicoes Definicao
Rule 3     ListaDefinicoes -> empty
Rule 4     Definicao -> DefinicaoClasse
Rule 5     Definicao -> DefinicaoFuncao
Rule 6     DefinicaoClasse -> CLASS IDENT DOISP IDENT ABRECV ListaMembros FECHACV
Rule 7     DefinicaoClasse -> CLASS IDENT ABRECV ListaMembros FECHACV
Rule 8     ListaMembros -> ListaMembros DefinicaoMembro
Rule 9     ListaMembros -> empty
Rule 10    DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV
Rule 11    DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV
Rule 12    ModificadorOpcional -> STATIC
Rule 13    ModificadorOpcional -> empty
Rule 14    ListaVariaveis -> ListaVariaveis VIRG Variavel
Rule 15    ListaVariaveis -> Variavel
Rule 16    Variavel -> IDENT
Rule 17    Variavel -> IDENT ABRECOL INT FECHACOL
Rule 18    ListaArgsFormaisOpcional -> ListaArgsFormais
Rule 19    ListaArgsFormaisOpcional -> empty
Rule 20    ListaArgsFormais -> ListaArgsFormais VIRG IDENT
Rule 21    ListaArgsFormais -> IDENT
Rule 22    DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco
Rule 23    DefinicaoFuncao -> DEF IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco
Rule 24    ListaParametrosOpcionais -> ListaArgsFormaisOpcional ListaTemporariosOpcionais
Rule 25    ListaTemporariosOpcionais -> PONTOV ListaArgsFormais
Rule 26    ListaTemporariosOpcionais -> empty
Rule 27    Bloco -> ABRECV ListaComandos FECHACV
Rule 28    ListaComandos -> ListaComandos Comando
Rule 29    ListaComandos -> empty
Rule 30    Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
Rule 31    Comando -> IF ABREPAR ExpOpc FECHAPAR Comando
Rule 32    Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando
Rule 33    Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
Rule 34    Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
Rule 35    Comando -> FOREACH IDENT IN IDENT Comando
Rule 36    Comando -> BREAK PONTOV
Rule 37    Comando -> CONTINUE PONTOV
Rule 38    Comando -> RETURN ExpOpc PONTOV
Rule 39    Comando -> ExpOpc PONTOV
Rule 40    Comando -> Bloco
Rule 41    ExpOpc -> Exp
Rule 42    ExpOpc -> empty
Rule 43    Exp -> EsqVal ATRIB Exp
Rule 44    Exp -> EsqVal ATRIBCOMP Exp
Rule 45    Exp -> EsqVal MENOSCOMP Exp
Rule 46    Exp -> EsqVal MULTCOMP Exp
Rule 47    Exp -> EsqVal DIVCOMP Exp
Rule 48    Exp -> Exp COND Exp DOISP Exp
Rule 49    Exp -> Exp OULOG Exp
Rule 50    Exp -> Exp ELOG Exp
Rule 51    Exp -> Exp OU Exp
Rule 52    Exp -> Exp E Exp
Rule 53    Exp -> Exp DESLESQ Exp
Rule 54    Exp -> Exp DESLDIR Exp
Rule 55    Exp -> Exp IGUAL Exp
Rule 56    Exp -> Exp DIFER Exp
Rule 57    Exp -> Exp MAIORIGUAL Exp
Rule 58    Exp -> Exp MENORIGUAL Exp
Rule 59    Exp -> Exp MAIOR Exp
Rule 60    Exp -> Exp MENOR Exp
Rule 61    Exp -> Exp MAIS Exp
Rule 62    Exp -> Exp MENOS Exp
Rule 63    Exp -> Exp MULT Exp
Rule 64    Exp -> Exp DIV Exp
Rule 65    Exp -> Exp MOD Exp
Rule 66    Exp -> ABREPAR Exp FECHAPAR
Rule 67    Exp -> DECREM EsqVal
Rule 68    Exp -> INCREMEN EsqVal
Rule 69    Exp -> EsqVal DECREM
Rule 70    Exp -> EsqVal INCREMEN
Rule 71    Exp -> NAO Exp
Rule 72    Exp -> COMPLEM Exp
Rule 73    Exp -> MENOS Exp
Rule 74    Exp -> MAIS Exp
Rule 75    Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
Rule 76    Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR
Rule 77    Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
Rule 78    Exp -> IDENT
Rule 79    Exp -> IDENT ABRECOL Exp FECHACOL
Rule 80    Exp -> FLOAT
Rule 81    Exp -> INT
Rule 82    Exp -> STRING
Rule 83    Exp -> NIL
Rule 84    ArgumentosOpcionais -> Argumentos
Rule 85    ArgumentosOpcionais -> empty
Rule 86    Argumentos -> Argumentos VIRG Exp
Rule 87    Argumentos -> Exp
Rule 88    EsqVal -> IDENT
Rule 89    EsqVal -> IDENT ABRECOL Exp FECHACOL
Rule 90    empty -> <empty>

Terminals, with rules where they appear

ABRECOL              : 17 79 89
ABRECV               : 6 7 27
ABREPAR              : 11 22 23 30 31 32 33 34 66 75 76 77
ATRIB                : 43
ATRIBCOMP            : 44
BREAK                : 36
CLASS                : 6 7
COMPLEM              : 72
COND                 : 48
CONTINUE             : 37
DECREM               : 67 69
DEF                  : 11 22 23
DESLDIR              : 54
DESLESQ              : 53
DIFER                : 56
DIV                  : 64
DIVCOMP              : 47
DO                   : 33
DOISP                : 6 48
E                    : 52
ELOG                 : 50
ELSE                 : 30
ERRO                 : 
FECHACOL             : 17 79 89
FECHACV              : 6 7 27
FECHAPAR             : 11 22 23 30 31 32 33 34 66 75 76 77
FLOAT                : 80
FOR                  : 34
FOREACH              : 35
IDENT                : 6 6 7 11 16 17 20 21 22 22 23 35 35 75 76 77 78 79 88 89
IF                   : 30 31
IGUAL                : 55
IN                   : 35
INCREMEN             : 68 70
INT                  : 17 81
MAIOR                : 59
MAIORIGUAL           : 57
MAIS                 : 61 74
MENOR                : 60
MENORIGUAL           : 58
MENOS                : 62 73
MENOSCOMP            : 45
MOD                  : 65
MULT                 : 63
MULTCOMP             : 46
NAO                  : 71
NEW                  : 75
NIL                  : 83
OPESCOPO             : 22
OU                   : 51
OULOG                : 49
PONTEIRO             : 77
PONTOV               : 10 11 25 33 34 34 36 37 38 39
RETURN               : 38
STATIC               : 12
STRING               : 82
VAR                  : 10
VIRG                 : 14 20 86
WHILE                : 32 33
error                : 

Nonterminals, with rules where they appear

Argumentos           : 84 86
ArgumentosOpcionais  : 75 76 77
Bloco                : 22 23 40
Comando              : 28 30 30 31 32 33 34 35
Definicao            : 2
DefinicaoClasse      : 4
DefinicaoFuncao      : 5
DefinicaoMembro      : 8
EsqVal               : 43 44 45 46 47 67 68 69 70
Exp                  : 41 43 44 45 46 47 48 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 71 72 73 74 77 79 86 87 89
ExpOpc               : 30 31 32 33 34 34 34 38 39
ListaArgsFormais     : 18 20 25
ListaArgsFormaisOpcional : 11 24
ListaComandos        : 27 28
ListaDefinicoes      : 1 2
ListaMembros         : 6 7 8
ListaParametrosOpcionais : 22 23
ListaTemporariosOpcionais : 24
ListaVariaveis       : 10 14
ModificadorOpcional  : 10 11
Programa             : 0
Variavel             : 14 15
empty                : 3 9 13 19 26 29 42 85

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . ListaDefinicoes
    (2) ListaDefinicoes -> . ListaDefinicoes Definicao
    (3) ListaDefinicoes -> . empty
    (90) empty -> .

    CLASS           reduce using rule 90 (empty -> .)
    DEF             reduce using rule 90 (empty -> .)
    $end            reduce using rule 90 (empty -> .)

    Programa                       shift and go to state 1
    ListaDefinicoes                shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> ListaDefinicoes .
    (2) ListaDefinicoes -> ListaDefinicoes . Definicao
    (4) Definicao -> . DefinicaoClasse
    (5) Definicao -> . DefinicaoFuncao
    (6) DefinicaoClasse -> . CLASS IDENT DOISP IDENT ABRECV ListaMembros FECHACV
    (7) DefinicaoClasse -> . CLASS IDENT ABRECV ListaMembros FECHACV
    (22) DefinicaoFuncao -> . DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco
    (23) DefinicaoFuncao -> . DEF IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    $end            reduce using rule 1 (Programa -> ListaDefinicoes .)
    CLASS           shift and go to state 7
    DEF             shift and go to state 8

    Definicao                      shift and go to state 4
    DefinicaoClasse                shift and go to state 5
    DefinicaoFuncao                shift and go to state 6

state 3

    (3) ListaDefinicoes -> empty .

    CLASS           reduce using rule 3 (ListaDefinicoes -> empty .)
    DEF             reduce using rule 3 (ListaDefinicoes -> empty .)
    $end            reduce using rule 3 (ListaDefinicoes -> empty .)


state 4

    (2) ListaDefinicoes -> ListaDefinicoes Definicao .

    CLASS           reduce using rule 2 (ListaDefinicoes -> ListaDefinicoes Definicao .)
    DEF             reduce using rule 2 (ListaDefinicoes -> ListaDefinicoes Definicao .)
    $end            reduce using rule 2 (ListaDefinicoes -> ListaDefinicoes Definicao .)


state 5

    (4) Definicao -> DefinicaoClasse .

    CLASS           reduce using rule 4 (Definicao -> DefinicaoClasse .)
    DEF             reduce using rule 4 (Definicao -> DefinicaoClasse .)
    $end            reduce using rule 4 (Definicao -> DefinicaoClasse .)


state 6

    (5) Definicao -> DefinicaoFuncao .

    CLASS           reduce using rule 5 (Definicao -> DefinicaoFuncao .)
    DEF             reduce using rule 5 (Definicao -> DefinicaoFuncao .)
    $end            reduce using rule 5 (Definicao -> DefinicaoFuncao .)


state 7

    (6) DefinicaoClasse -> CLASS . IDENT DOISP IDENT ABRECV ListaMembros FECHACV
    (7) DefinicaoClasse -> CLASS . IDENT ABRECV ListaMembros FECHACV

    IDENT           shift and go to state 9


state 8

    (22) DefinicaoFuncao -> DEF . IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco
    (23) DefinicaoFuncao -> DEF . IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    IDENT           shift and go to state 10


state 9

    (6) DefinicaoClasse -> CLASS IDENT . DOISP IDENT ABRECV ListaMembros FECHACV
    (7) DefinicaoClasse -> CLASS IDENT . ABRECV ListaMembros FECHACV

    DOISP           shift and go to state 11
    ABRECV          shift and go to state 12


state 10

    (22) DefinicaoFuncao -> DEF IDENT . OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco
    (23) DefinicaoFuncao -> DEF IDENT . ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    OPESCOPO        shift and go to state 13
    ABREPAR         shift and go to state 14


state 11

    (6) DefinicaoClasse -> CLASS IDENT DOISP . IDENT ABRECV ListaMembros FECHACV

    IDENT           shift and go to state 15


state 12

    (7) DefinicaoClasse -> CLASS IDENT ABRECV . ListaMembros FECHACV
    (8) ListaMembros -> . ListaMembros DefinicaoMembro
    (9) ListaMembros -> . empty
    (90) empty -> .

    FECHACV         reduce using rule 90 (empty -> .)
    STATIC          reduce using rule 90 (empty -> .)
    VAR             reduce using rule 90 (empty -> .)
    DEF             reduce using rule 90 (empty -> .)

    ListaMembros                   shift and go to state 16
    empty                          shift and go to state 17

state 13

    (22) DefinicaoFuncao -> DEF IDENT OPESCOPO . IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    IDENT           shift and go to state 18


state 14

    (23) DefinicaoFuncao -> DEF IDENT ABREPAR . ListaParametrosOpcionais FECHAPAR Bloco
    (24) ListaParametrosOpcionais -> . ListaArgsFormaisOpcional ListaTemporariosOpcionais
    (18) ListaArgsFormaisOpcional -> . ListaArgsFormais
    (19) ListaArgsFormaisOpcional -> . empty
    (20) ListaArgsFormais -> . ListaArgsFormais VIRG IDENT
    (21) ListaArgsFormais -> . IDENT
    (90) empty -> .

    IDENT           shift and go to state 19
    PONTOV          reduce using rule 90 (empty -> .)
    FECHAPAR        reduce using rule 90 (empty -> .)

    ListaParametrosOpcionais       shift and go to state 20
    ListaArgsFormaisOpcional       shift and go to state 21
    ListaArgsFormais               shift and go to state 22
    empty                          shift and go to state 23

state 15

    (6) DefinicaoClasse -> CLASS IDENT DOISP IDENT . ABRECV ListaMembros FECHACV

    ABRECV          shift and go to state 24


state 16

    (7) DefinicaoClasse -> CLASS IDENT ABRECV ListaMembros . FECHACV
    (8) ListaMembros -> ListaMembros . DefinicaoMembro
    (10) DefinicaoMembro -> . ModificadorOpcional VAR ListaVariaveis PONTOV
    (11) DefinicaoMembro -> . ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV
    (12) ModificadorOpcional -> . STATIC
    (13) ModificadorOpcional -> . empty
    (90) empty -> .

    FECHACV         shift and go to state 25
    STATIC          shift and go to state 28
    VAR             reduce using rule 90 (empty -> .)
    DEF             reduce using rule 90 (empty -> .)

    DefinicaoMembro                shift and go to state 26
    ModificadorOpcional            shift and go to state 27
    empty                          shift and go to state 29

state 17

    (9) ListaMembros -> empty .

    FECHACV         reduce using rule 9 (ListaMembros -> empty .)
    STATIC          reduce using rule 9 (ListaMembros -> empty .)
    VAR             reduce using rule 9 (ListaMembros -> empty .)
    DEF             reduce using rule 9 (ListaMembros -> empty .)


state 18

    (22) DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT . ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    ABREPAR         shift and go to state 30


state 19

    (21) ListaArgsFormais -> IDENT .

    VIRG            reduce using rule 21 (ListaArgsFormais -> IDENT .)
    PONTOV          reduce using rule 21 (ListaArgsFormais -> IDENT .)
    FECHAPAR        reduce using rule 21 (ListaArgsFormais -> IDENT .)


state 20

    (23) DefinicaoFuncao -> DEF IDENT ABREPAR ListaParametrosOpcionais . FECHAPAR Bloco

    FECHAPAR        shift and go to state 31


state 21

    (24) ListaParametrosOpcionais -> ListaArgsFormaisOpcional . ListaTemporariosOpcionais
    (25) ListaTemporariosOpcionais -> . PONTOV ListaArgsFormais
    (26) ListaTemporariosOpcionais -> . empty
    (90) empty -> .

    PONTOV          shift and go to state 33
    FECHAPAR        reduce using rule 90 (empty -> .)

    ListaTemporariosOpcionais      shift and go to state 32
    empty                          shift and go to state 34

state 22

    (18) ListaArgsFormaisOpcional -> ListaArgsFormais .
    (20) ListaArgsFormais -> ListaArgsFormais . VIRG IDENT

    PONTOV          reduce using rule 18 (ListaArgsFormaisOpcional -> ListaArgsFormais .)
    FECHAPAR        reduce using rule 18 (ListaArgsFormaisOpcional -> ListaArgsFormais .)
    VIRG            shift and go to state 35


state 23

    (19) ListaArgsFormaisOpcional -> empty .

    PONTOV          reduce using rule 19 (ListaArgsFormaisOpcional -> empty .)
    FECHAPAR        reduce using rule 19 (ListaArgsFormaisOpcional -> empty .)


state 24

    (6) DefinicaoClasse -> CLASS IDENT DOISP IDENT ABRECV . ListaMembros FECHACV
    (8) ListaMembros -> . ListaMembros DefinicaoMembro
    (9) ListaMembros -> . empty
    (90) empty -> .

    FECHACV         reduce using rule 90 (empty -> .)
    STATIC          reduce using rule 90 (empty -> .)
    VAR             reduce using rule 90 (empty -> .)
    DEF             reduce using rule 90 (empty -> .)

    ListaMembros                   shift and go to state 36
    empty                          shift and go to state 17

state 25

    (7) DefinicaoClasse -> CLASS IDENT ABRECV ListaMembros FECHACV .

    CLASS           reduce using rule 7 (DefinicaoClasse -> CLASS IDENT ABRECV ListaMembros FECHACV .)
    DEF             reduce using rule 7 (DefinicaoClasse -> CLASS IDENT ABRECV ListaMembros FECHACV .)
    $end            reduce using rule 7 (DefinicaoClasse -> CLASS IDENT ABRECV ListaMembros FECHACV .)


state 26

    (8) ListaMembros -> ListaMembros DefinicaoMembro .

    FECHACV         reduce using rule 8 (ListaMembros -> ListaMembros DefinicaoMembro .)
    STATIC          reduce using rule 8 (ListaMembros -> ListaMembros DefinicaoMembro .)
    VAR             reduce using rule 8 (ListaMembros -> ListaMembros DefinicaoMembro .)
    DEF             reduce using rule 8 (ListaMembros -> ListaMembros DefinicaoMembro .)


state 27

    (10) DefinicaoMembro -> ModificadorOpcional . VAR ListaVariaveis PONTOV
    (11) DefinicaoMembro -> ModificadorOpcional . DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV

    VAR             shift and go to state 37
    DEF             shift and go to state 38


state 28

    (12) ModificadorOpcional -> STATIC .

    VAR             reduce using rule 12 (ModificadorOpcional -> STATIC .)
    DEF             reduce using rule 12 (ModificadorOpcional -> STATIC .)


state 29

    (13) ModificadorOpcional -> empty .

    VAR             reduce using rule 13 (ModificadorOpcional -> empty .)
    DEF             reduce using rule 13 (ModificadorOpcional -> empty .)


state 30

    (22) DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR . ListaParametrosOpcionais FECHAPAR Bloco
    (24) ListaParametrosOpcionais -> . ListaArgsFormaisOpcional ListaTemporariosOpcionais
    (18) ListaArgsFormaisOpcional -> . ListaArgsFormais
    (19) ListaArgsFormaisOpcional -> . empty
    (20) ListaArgsFormais -> . ListaArgsFormais VIRG IDENT
    (21) ListaArgsFormais -> . IDENT
    (90) empty -> .

    IDENT           shift and go to state 19
    PONTOV          reduce using rule 90 (empty -> .)
    FECHAPAR        reduce using rule 90 (empty -> .)

    ListaParametrosOpcionais       shift and go to state 39
    ListaArgsFormaisOpcional       shift and go to state 21
    ListaArgsFormais               shift and go to state 22
    empty                          shift and go to state 23

state 31

    (23) DefinicaoFuncao -> DEF IDENT ABREPAR ListaParametrosOpcionais FECHAPAR . Bloco
    (27) Bloco -> . ABRECV ListaComandos FECHACV

    ABRECV          shift and go to state 41

    Bloco                          shift and go to state 40

state 32

    (24) ListaParametrosOpcionais -> ListaArgsFormaisOpcional ListaTemporariosOpcionais .

    FECHAPAR        reduce using rule 24 (ListaParametrosOpcionais -> ListaArgsFormaisOpcional ListaTemporariosOpcionais .)


state 33

    (25) ListaTemporariosOpcionais -> PONTOV . ListaArgsFormais
    (20) ListaArgsFormais -> . ListaArgsFormais VIRG IDENT
    (21) ListaArgsFormais -> . IDENT

    IDENT           shift and go to state 19

    ListaArgsFormais               shift and go to state 42

state 34

    (26) ListaTemporariosOpcionais -> empty .

    FECHAPAR        reduce using rule 26 (ListaTemporariosOpcionais -> empty .)


state 35

    (20) ListaArgsFormais -> ListaArgsFormais VIRG . IDENT

    IDENT           shift and go to state 43


state 36

    (6) DefinicaoClasse -> CLASS IDENT DOISP IDENT ABRECV ListaMembros . FECHACV
    (8) ListaMembros -> ListaMembros . DefinicaoMembro
    (10) DefinicaoMembro -> . ModificadorOpcional VAR ListaVariaveis PONTOV
    (11) DefinicaoMembro -> . ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV
    (12) ModificadorOpcional -> . STATIC
    (13) ModificadorOpcional -> . empty
    (90) empty -> .

    FECHACV         shift and go to state 44
    STATIC          shift and go to state 28
    VAR             reduce using rule 90 (empty -> .)
    DEF             reduce using rule 90 (empty -> .)

    DefinicaoMembro                shift and go to state 26
    ModificadorOpcional            shift and go to state 27
    empty                          shift and go to state 29

state 37

    (10) DefinicaoMembro -> ModificadorOpcional VAR . ListaVariaveis PONTOV
    (14) ListaVariaveis -> . ListaVariaveis VIRG Variavel
    (15) ListaVariaveis -> . Variavel
    (16) Variavel -> . IDENT
    (17) Variavel -> . IDENT ABRECOL INT FECHACOL

    IDENT           shift and go to state 47

    ListaVariaveis                 shift and go to state 45
    Variavel                       shift and go to state 46

state 38

    (11) DefinicaoMembro -> ModificadorOpcional DEF . IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV

    IDENT           shift and go to state 48


state 39

    (22) DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais . FECHAPAR Bloco

    FECHAPAR        shift and go to state 49


state 40

    (23) DefinicaoFuncao -> DEF IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .

    CLASS           reduce using rule 23 (DefinicaoFuncao -> DEF IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)
    DEF             reduce using rule 23 (DefinicaoFuncao -> DEF IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)
    $end            reduce using rule 23 (DefinicaoFuncao -> DEF IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)


state 41

    (27) Bloco -> ABRECV . ListaComandos FECHACV
    (28) ListaComandos -> . ListaComandos Comando
    (29) ListaComandos -> . empty
    (90) empty -> .

    FECHACV         reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    WHILE           reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)
    FOR             reduce using rule 90 (empty -> .)
    FOREACH         reduce using rule 90 (empty -> .)
    BREAK           reduce using rule 90 (empty -> .)
    CONTINUE        reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    ABRECV          reduce using rule 90 (empty -> .)
    ABREPAR         reduce using rule 90 (empty -> .)
    DECREM          reduce using rule 90 (empty -> .)
    INCREMEN        reduce using rule 90 (empty -> .)
    NAO             reduce using rule 90 (empty -> .)
    COMPLEM         reduce using rule 90 (empty -> .)
    MENOS           reduce using rule 90 (empty -> .)
    MAIS            reduce using rule 90 (empty -> .)
    NEW             reduce using rule 90 (empty -> .)
    IDENT           reduce using rule 90 (empty -> .)
    FLOAT           reduce using rule 90 (empty -> .)
    INT             reduce using rule 90 (empty -> .)
    STRING          reduce using rule 90 (empty -> .)
    NIL             reduce using rule 90 (empty -> .)
    PONTOV          reduce using rule 90 (empty -> .)

    ListaComandos                  shift and go to state 50
    empty                          shift and go to state 51

state 42

    (25) ListaTemporariosOpcionais -> PONTOV ListaArgsFormais .
    (20) ListaArgsFormais -> ListaArgsFormais . VIRG IDENT

    FECHAPAR        reduce using rule 25 (ListaTemporariosOpcionais -> PONTOV ListaArgsFormais .)
    VIRG            shift and go to state 35


state 43

    (20) ListaArgsFormais -> ListaArgsFormais VIRG IDENT .

    VIRG            reduce using rule 20 (ListaArgsFormais -> ListaArgsFormais VIRG IDENT .)
    PONTOV          reduce using rule 20 (ListaArgsFormais -> ListaArgsFormais VIRG IDENT .)
    FECHAPAR        reduce using rule 20 (ListaArgsFormais -> ListaArgsFormais VIRG IDENT .)


state 44

    (6) DefinicaoClasse -> CLASS IDENT DOISP IDENT ABRECV ListaMembros FECHACV .

    CLASS           reduce using rule 6 (DefinicaoClasse -> CLASS IDENT DOISP IDENT ABRECV ListaMembros FECHACV .)
    DEF             reduce using rule 6 (DefinicaoClasse -> CLASS IDENT DOISP IDENT ABRECV ListaMembros FECHACV .)
    $end            reduce using rule 6 (DefinicaoClasse -> CLASS IDENT DOISP IDENT ABRECV ListaMembros FECHACV .)


state 45

    (10) DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis . PONTOV
    (14) ListaVariaveis -> ListaVariaveis . VIRG Variavel

    PONTOV          shift and go to state 52
    VIRG            shift and go to state 53


state 46

    (15) ListaVariaveis -> Variavel .

    PONTOV          reduce using rule 15 (ListaVariaveis -> Variavel .)
    VIRG            reduce using rule 15 (ListaVariaveis -> Variavel .)


state 47

    (16) Variavel -> IDENT .
    (17) Variavel -> IDENT . ABRECOL INT FECHACOL

    PONTOV          reduce using rule 16 (Variavel -> IDENT .)
    VIRG            reduce using rule 16 (Variavel -> IDENT .)
    ABRECOL         shift and go to state 54


state 48

    (11) DefinicaoMembro -> ModificadorOpcional DEF IDENT . ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV

    ABREPAR         shift and go to state 55


state 49

    (22) DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR . Bloco
    (27) Bloco -> . ABRECV ListaComandos FECHACV

    ABRECV          shift and go to state 41

    Bloco                          shift and go to state 56

state 50

    (27) Bloco -> ABRECV ListaComandos . FECHACV
    (28) ListaComandos -> ListaComandos . Comando
    (30) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (32) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (33) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (34) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (35) Comando -> . FOREACH IDENT IN IDENT Comando
    (36) Comando -> . BREAK PONTOV
    (37) Comando -> . CONTINUE PONTOV
    (38) Comando -> . RETURN ExpOpc PONTOV
    (39) Comando -> . ExpOpc PONTOV
    (40) Comando -> . Bloco
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (27) Bloco -> . ABRECV ListaComandos FECHACV
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHACV         shift and go to state 57
    IF              shift and go to state 59
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    ABRECV          shift and go to state 41
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    Comando                        shift and go to state 58
    ExpOpc                         shift and go to state 61
    Bloco                          shift and go to state 70
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 51

    (29) ListaComandos -> empty .

    FECHACV         reduce using rule 29 (ListaComandos -> empty .)
    IF              reduce using rule 29 (ListaComandos -> empty .)
    WHILE           reduce using rule 29 (ListaComandos -> empty .)
    DO              reduce using rule 29 (ListaComandos -> empty .)
    FOR             reduce using rule 29 (ListaComandos -> empty .)
    FOREACH         reduce using rule 29 (ListaComandos -> empty .)
    BREAK           reduce using rule 29 (ListaComandos -> empty .)
    CONTINUE        reduce using rule 29 (ListaComandos -> empty .)
    RETURN          reduce using rule 29 (ListaComandos -> empty .)
    ABRECV          reduce using rule 29 (ListaComandos -> empty .)
    ABREPAR         reduce using rule 29 (ListaComandos -> empty .)
    DECREM          reduce using rule 29 (ListaComandos -> empty .)
    INCREMEN        reduce using rule 29 (ListaComandos -> empty .)
    NAO             reduce using rule 29 (ListaComandos -> empty .)
    COMPLEM         reduce using rule 29 (ListaComandos -> empty .)
    MENOS           reduce using rule 29 (ListaComandos -> empty .)
    MAIS            reduce using rule 29 (ListaComandos -> empty .)
    NEW             reduce using rule 29 (ListaComandos -> empty .)
    IDENT           reduce using rule 29 (ListaComandos -> empty .)
    FLOAT           reduce using rule 29 (ListaComandos -> empty .)
    INT             reduce using rule 29 (ListaComandos -> empty .)
    STRING          reduce using rule 29 (ListaComandos -> empty .)
    NIL             reduce using rule 29 (ListaComandos -> empty .)
    PONTOV          reduce using rule 29 (ListaComandos -> empty .)


state 52

    (10) DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .

    FECHACV         reduce using rule 10 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)
    STATIC          reduce using rule 10 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)
    VAR             reduce using rule 10 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)
    DEF             reduce using rule 10 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)


state 53

    (14) ListaVariaveis -> ListaVariaveis VIRG . Variavel
    (16) Variavel -> . IDENT
    (17) Variavel -> . IDENT ABRECOL INT FECHACOL

    IDENT           shift and go to state 47

    Variavel                       shift and go to state 85

state 54

    (17) Variavel -> IDENT ABRECOL . INT FECHACOL

    INT             shift and go to state 86


state 55

    (11) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR . ListaArgsFormaisOpcional FECHAPAR PONTOV
    (18) ListaArgsFormaisOpcional -> . ListaArgsFormais
    (19) ListaArgsFormaisOpcional -> . empty
    (20) ListaArgsFormais -> . ListaArgsFormais VIRG IDENT
    (21) ListaArgsFormais -> . IDENT
    (90) empty -> .

    IDENT           shift and go to state 19
    FECHAPAR        reduce using rule 90 (empty -> .)

    ListaArgsFormaisOpcional       shift and go to state 87
    ListaArgsFormais               shift and go to state 22
    empty                          shift and go to state 23

state 56

    (22) DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .

    CLASS           reduce using rule 22 (DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)
    DEF             reduce using rule 22 (DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)
    $end            reduce using rule 22 (DefinicaoFuncao -> DEF IDENT OPESCOPO IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)


state 57

    (27) Bloco -> ABRECV ListaComandos FECHACV .

    CLASS           reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    DEF             reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    $end            reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    FECHACV         reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    IF              reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    WHILE           reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    DO              reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    FOR             reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    FOREACH         reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    BREAK           reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    CONTINUE        reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    RETURN          reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    ABRECV          reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    ABREPAR         reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    DECREM          reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    INCREMEN        reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    NAO             reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    COMPLEM         reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    MENOS           reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    MAIS            reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    NEW             reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    IDENT           reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    FLOAT           reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    INT             reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    STRING          reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    NIL             reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    PONTOV          reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)
    ELSE            reduce using rule 27 (Bloco -> ABRECV ListaComandos FECHACV .)


state 58

    (28) ListaComandos -> ListaComandos Comando .

    FECHACV         reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    IF              reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    WHILE           reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    DO              reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    FOR             reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    FOREACH         reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    BREAK           reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    CONTINUE        reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    RETURN          reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    ABRECV          reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    ABREPAR         reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    DECREM          reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    INCREMEN        reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    NAO             reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    COMPLEM         reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    MENOS           reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    MAIS            reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    NEW             reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    IDENT           reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    FLOAT           reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    INT             reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    STRING          reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    NIL             reduce using rule 28 (ListaComandos -> ListaComandos Comando .)
    PONTOV          reduce using rule 28 (ListaComandos -> ListaComandos Comando .)


state 59

    (30) Comando -> IF . ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> IF . ABREPAR ExpOpc FECHAPAR Comando

    ABREPAR         shift and go to state 88


state 60

    (66) Exp -> ABREPAR . Exp FECHAPAR
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 89
    EsqVal                         shift and go to state 73

state 61

    (39) Comando -> ExpOpc . PONTOV

    PONTOV          shift and go to state 90


state 62

    (32) Comando -> WHILE . ABREPAR ExpOpc FECHAPAR Comando

    ABREPAR         shift and go to state 91


state 63

    (33) Comando -> DO . Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (30) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (32) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (33) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (34) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (35) Comando -> . FOREACH IDENT IN IDENT Comando
    (36) Comando -> . BREAK PONTOV
    (37) Comando -> . CONTINUE PONTOV
    (38) Comando -> . RETURN ExpOpc PONTOV
    (39) Comando -> . ExpOpc PONTOV
    (40) Comando -> . Bloco
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (27) Bloco -> . ABRECV ListaComandos FECHACV
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 59
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    ABRECV          shift and go to state 41
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    Comando                        shift and go to state 92
    ExpOpc                         shift and go to state 61
    Bloco                          shift and go to state 70
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 64

    (34) Comando -> FOR . ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando

    ABREPAR         shift and go to state 93


state 65

    (35) Comando -> FOREACH . IDENT IN IDENT Comando

    IDENT           shift and go to state 94


state 66

    (76) Exp -> IDENT . ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> IDENT .
    (79) Exp -> IDENT . ABRECOL Exp FECHACOL
    (88) EsqVal -> IDENT .
    (89) EsqVal -> IDENT . ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 95
    COND            reduce using rule 78 (Exp -> IDENT .)
    OULOG           reduce using rule 78 (Exp -> IDENT .)
    ELOG            reduce using rule 78 (Exp -> IDENT .)
    OU              reduce using rule 78 (Exp -> IDENT .)
    E               reduce using rule 78 (Exp -> IDENT .)
    DESLESQ         reduce using rule 78 (Exp -> IDENT .)
    DESLDIR         reduce using rule 78 (Exp -> IDENT .)
    IGUAL           reduce using rule 78 (Exp -> IDENT .)
    DIFER           reduce using rule 78 (Exp -> IDENT .)
    MAIORIGUAL      reduce using rule 78 (Exp -> IDENT .)
    MENORIGUAL      reduce using rule 78 (Exp -> IDENT .)
    MAIOR           reduce using rule 78 (Exp -> IDENT .)
    MENOR           reduce using rule 78 (Exp -> IDENT .)
    MAIS            reduce using rule 78 (Exp -> IDENT .)
    MENOS           reduce using rule 78 (Exp -> IDENT .)
    MULT            reduce using rule 78 (Exp -> IDENT .)
    DIV             reduce using rule 78 (Exp -> IDENT .)
    MOD             reduce using rule 78 (Exp -> IDENT .)
    PONTEIRO        reduce using rule 78 (Exp -> IDENT .)
    PONTOV          reduce using rule 78 (Exp -> IDENT .)
    FECHAPAR        reduce using rule 78 (Exp -> IDENT .)
    VIRG            reduce using rule 78 (Exp -> IDENT .)
    FECHACOL        reduce using rule 78 (Exp -> IDENT .)
    DOISP           reduce using rule 78 (Exp -> IDENT .)
    ABRECOL         shift and go to state 96
    ATRIB           reduce using rule 88 (EsqVal -> IDENT .)
    ATRIBCOMP       reduce using rule 88 (EsqVal -> IDENT .)
    MENOSCOMP       reduce using rule 88 (EsqVal -> IDENT .)
    MULTCOMP        reduce using rule 88 (EsqVal -> IDENT .)
    DIVCOMP         reduce using rule 88 (EsqVal -> IDENT .)
    DECREM          reduce using rule 88 (EsqVal -> IDENT .)
    INCREMEN        reduce using rule 88 (EsqVal -> IDENT .)


state 67

    (36) Comando -> BREAK . PONTOV

    PONTOV          shift and go to state 97


state 68

    (37) Comando -> CONTINUE . PONTOV

    PONTOV          shift and go to state 98


state 69

    (38) Comando -> RETURN . ExpOpc PONTOV
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 99
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 70

    (40) Comando -> Bloco .

    FECHACV         reduce using rule 40 (Comando -> Bloco .)
    IF              reduce using rule 40 (Comando -> Bloco .)
    WHILE           reduce using rule 40 (Comando -> Bloco .)
    DO              reduce using rule 40 (Comando -> Bloco .)
    FOR             reduce using rule 40 (Comando -> Bloco .)
    FOREACH         reduce using rule 40 (Comando -> Bloco .)
    BREAK           reduce using rule 40 (Comando -> Bloco .)
    CONTINUE        reduce using rule 40 (Comando -> Bloco .)
    RETURN          reduce using rule 40 (Comando -> Bloco .)
    ABRECV          reduce using rule 40 (Comando -> Bloco .)
    ABREPAR         reduce using rule 40 (Comando -> Bloco .)
    DECREM          reduce using rule 40 (Comando -> Bloco .)
    INCREMEN        reduce using rule 40 (Comando -> Bloco .)
    NAO             reduce using rule 40 (Comando -> Bloco .)
    COMPLEM         reduce using rule 40 (Comando -> Bloco .)
    MENOS           reduce using rule 40 (Comando -> Bloco .)
    MAIS            reduce using rule 40 (Comando -> Bloco .)
    NEW             reduce using rule 40 (Comando -> Bloco .)
    IDENT           reduce using rule 40 (Comando -> Bloco .)
    FLOAT           reduce using rule 40 (Comando -> Bloco .)
    INT             reduce using rule 40 (Comando -> Bloco .)
    STRING          reduce using rule 40 (Comando -> Bloco .)
    NIL             reduce using rule 40 (Comando -> Bloco .)
    PONTOV          reduce using rule 40 (Comando -> Bloco .)
    ELSE            reduce using rule 40 (Comando -> Bloco .)


state 71

    (41) ExpOpc -> Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 41 (ExpOpc -> Exp .)
    FECHAPAR        reduce using rule 41 (ExpOpc -> Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118


state 72

    (42) ExpOpc -> empty .

    PONTOV          reduce using rule 42 (ExpOpc -> empty .)
    FECHAPAR        reduce using rule 42 (ExpOpc -> empty .)


state 73

    (43) Exp -> EsqVal . ATRIB Exp
    (44) Exp -> EsqVal . ATRIBCOMP Exp
    (45) Exp -> EsqVal . MENOSCOMP Exp
    (46) Exp -> EsqVal . MULTCOMP Exp
    (47) Exp -> EsqVal . DIVCOMP Exp
    (69) Exp -> EsqVal . DECREM
    (70) Exp -> EsqVal . INCREMEN

    ATRIB           shift and go to state 119
    ATRIBCOMP       shift and go to state 120
    MENOSCOMP       shift and go to state 121
    MULTCOMP        shift and go to state 122
    DIVCOMP         shift and go to state 123
    DECREM          shift and go to state 124
    INCREMEN        shift and go to state 125


state 74

    (74) Exp -> MAIS . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 126
    EsqVal                         shift and go to state 73

state 75

    (73) Exp -> MENOS . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 127
    EsqVal                         shift and go to state 73

state 76

    (67) Exp -> DECREM . EsqVal
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IDENT           shift and go to state 129

    EsqVal                         shift and go to state 128

state 77

    (68) Exp -> INCREMEN . EsqVal
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IDENT           shift and go to state 129

    EsqVal                         shift and go to state 130

state 78

    (71) Exp -> NAO . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 131
    EsqVal                         shift and go to state 73

state 79

    (72) Exp -> COMPLEM . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 132
    EsqVal                         shift and go to state 73

state 80

    (75) Exp -> NEW . IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    IDENT           shift and go to state 133


state 81

    (80) Exp -> FLOAT .

    COND            reduce using rule 80 (Exp -> FLOAT .)
    OULOG           reduce using rule 80 (Exp -> FLOAT .)
    ELOG            reduce using rule 80 (Exp -> FLOAT .)
    OU              reduce using rule 80 (Exp -> FLOAT .)
    E               reduce using rule 80 (Exp -> FLOAT .)
    DESLESQ         reduce using rule 80 (Exp -> FLOAT .)
    DESLDIR         reduce using rule 80 (Exp -> FLOAT .)
    IGUAL           reduce using rule 80 (Exp -> FLOAT .)
    DIFER           reduce using rule 80 (Exp -> FLOAT .)
    MAIORIGUAL      reduce using rule 80 (Exp -> FLOAT .)
    MENORIGUAL      reduce using rule 80 (Exp -> FLOAT .)
    MAIOR           reduce using rule 80 (Exp -> FLOAT .)
    MENOR           reduce using rule 80 (Exp -> FLOAT .)
    MAIS            reduce using rule 80 (Exp -> FLOAT .)
    MENOS           reduce using rule 80 (Exp -> FLOAT .)
    MULT            reduce using rule 80 (Exp -> FLOAT .)
    DIV             reduce using rule 80 (Exp -> FLOAT .)
    MOD             reduce using rule 80 (Exp -> FLOAT .)
    PONTEIRO        reduce using rule 80 (Exp -> FLOAT .)
    PONTOV          reduce using rule 80 (Exp -> FLOAT .)
    FECHAPAR        reduce using rule 80 (Exp -> FLOAT .)
    VIRG            reduce using rule 80 (Exp -> FLOAT .)
    FECHACOL        reduce using rule 80 (Exp -> FLOAT .)
    DOISP           reduce using rule 80 (Exp -> FLOAT .)


state 82

    (81) Exp -> INT .

    COND            reduce using rule 81 (Exp -> INT .)
    OULOG           reduce using rule 81 (Exp -> INT .)
    ELOG            reduce using rule 81 (Exp -> INT .)
    OU              reduce using rule 81 (Exp -> INT .)
    E               reduce using rule 81 (Exp -> INT .)
    DESLESQ         reduce using rule 81 (Exp -> INT .)
    DESLDIR         reduce using rule 81 (Exp -> INT .)
    IGUAL           reduce using rule 81 (Exp -> INT .)
    DIFER           reduce using rule 81 (Exp -> INT .)
    MAIORIGUAL      reduce using rule 81 (Exp -> INT .)
    MENORIGUAL      reduce using rule 81 (Exp -> INT .)
    MAIOR           reduce using rule 81 (Exp -> INT .)
    MENOR           reduce using rule 81 (Exp -> INT .)
    MAIS            reduce using rule 81 (Exp -> INT .)
    MENOS           reduce using rule 81 (Exp -> INT .)
    MULT            reduce using rule 81 (Exp -> INT .)
    DIV             reduce using rule 81 (Exp -> INT .)
    MOD             reduce using rule 81 (Exp -> INT .)
    PONTEIRO        reduce using rule 81 (Exp -> INT .)
    PONTOV          reduce using rule 81 (Exp -> INT .)
    FECHAPAR        reduce using rule 81 (Exp -> INT .)
    VIRG            reduce using rule 81 (Exp -> INT .)
    FECHACOL        reduce using rule 81 (Exp -> INT .)
    DOISP           reduce using rule 81 (Exp -> INT .)


state 83

    (82) Exp -> STRING .

    COND            reduce using rule 82 (Exp -> STRING .)
    OULOG           reduce using rule 82 (Exp -> STRING .)
    ELOG            reduce using rule 82 (Exp -> STRING .)
    OU              reduce using rule 82 (Exp -> STRING .)
    E               reduce using rule 82 (Exp -> STRING .)
    DESLESQ         reduce using rule 82 (Exp -> STRING .)
    DESLDIR         reduce using rule 82 (Exp -> STRING .)
    IGUAL           reduce using rule 82 (Exp -> STRING .)
    DIFER           reduce using rule 82 (Exp -> STRING .)
    MAIORIGUAL      reduce using rule 82 (Exp -> STRING .)
    MENORIGUAL      reduce using rule 82 (Exp -> STRING .)
    MAIOR           reduce using rule 82 (Exp -> STRING .)
    MENOR           reduce using rule 82 (Exp -> STRING .)
    MAIS            reduce using rule 82 (Exp -> STRING .)
    MENOS           reduce using rule 82 (Exp -> STRING .)
    MULT            reduce using rule 82 (Exp -> STRING .)
    DIV             reduce using rule 82 (Exp -> STRING .)
    MOD             reduce using rule 82 (Exp -> STRING .)
    PONTEIRO        reduce using rule 82 (Exp -> STRING .)
    PONTOV          reduce using rule 82 (Exp -> STRING .)
    FECHAPAR        reduce using rule 82 (Exp -> STRING .)
    VIRG            reduce using rule 82 (Exp -> STRING .)
    FECHACOL        reduce using rule 82 (Exp -> STRING .)
    DOISP           reduce using rule 82 (Exp -> STRING .)


state 84

    (83) Exp -> NIL .

    COND            reduce using rule 83 (Exp -> NIL .)
    OULOG           reduce using rule 83 (Exp -> NIL .)
    ELOG            reduce using rule 83 (Exp -> NIL .)
    OU              reduce using rule 83 (Exp -> NIL .)
    E               reduce using rule 83 (Exp -> NIL .)
    DESLESQ         reduce using rule 83 (Exp -> NIL .)
    DESLDIR         reduce using rule 83 (Exp -> NIL .)
    IGUAL           reduce using rule 83 (Exp -> NIL .)
    DIFER           reduce using rule 83 (Exp -> NIL .)
    MAIORIGUAL      reduce using rule 83 (Exp -> NIL .)
    MENORIGUAL      reduce using rule 83 (Exp -> NIL .)
    MAIOR           reduce using rule 83 (Exp -> NIL .)
    MENOR           reduce using rule 83 (Exp -> NIL .)
    MAIS            reduce using rule 83 (Exp -> NIL .)
    MENOS           reduce using rule 83 (Exp -> NIL .)
    MULT            reduce using rule 83 (Exp -> NIL .)
    DIV             reduce using rule 83 (Exp -> NIL .)
    MOD             reduce using rule 83 (Exp -> NIL .)
    PONTEIRO        reduce using rule 83 (Exp -> NIL .)
    PONTOV          reduce using rule 83 (Exp -> NIL .)
    FECHAPAR        reduce using rule 83 (Exp -> NIL .)
    VIRG            reduce using rule 83 (Exp -> NIL .)
    FECHACOL        reduce using rule 83 (Exp -> NIL .)
    DOISP           reduce using rule 83 (Exp -> NIL .)


state 85

    (14) ListaVariaveis -> ListaVariaveis VIRG Variavel .

    PONTOV          reduce using rule 14 (ListaVariaveis -> ListaVariaveis VIRG Variavel .)
    VIRG            reduce using rule 14 (ListaVariaveis -> ListaVariaveis VIRG Variavel .)


state 86

    (17) Variavel -> IDENT ABRECOL INT . FECHACOL

    FECHACOL        shift and go to state 134


state 87

    (11) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional . FECHAPAR PONTOV

    FECHAPAR        shift and go to state 135


state 88

    (30) Comando -> IF ABREPAR . ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> IF ABREPAR . ExpOpc FECHAPAR Comando
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    FECHAPAR        reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 136
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 89

    (66) Exp -> ABREPAR Exp . FECHAPAR
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    FECHAPAR        shift and go to state 137
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118


state 90

    (39) Comando -> ExpOpc PONTOV .

    FECHACV         reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    IF              reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    WHILE           reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    DO              reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    FOR             reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    FOREACH         reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    BREAK           reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    CONTINUE        reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    RETURN          reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    ABRECV          reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    ABREPAR         reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    DECREM          reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    INCREMEN        reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    NAO             reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    COMPLEM         reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    MENOS           reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    MAIS            reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    NEW             reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    IDENT           reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    FLOAT           reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    INT             reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    STRING          reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    NIL             reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    PONTOV          reduce using rule 39 (Comando -> ExpOpc PONTOV .)
    ELSE            reduce using rule 39 (Comando -> ExpOpc PONTOV .)


state 91

    (32) Comando -> WHILE ABREPAR . ExpOpc FECHAPAR Comando
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    FECHAPAR        reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 138
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 92

    (33) Comando -> DO Comando . WHILE ABREPAR ExpOpc FECHAPAR PONTOV

    WHILE           shift and go to state 139


state 93

    (34) Comando -> FOR ABREPAR . ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 140
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 94

    (35) Comando -> FOREACH IDENT . IN IDENT Comando

    IN              shift and go to state 141


state 95

    (76) Exp -> IDENT ABREPAR . ArgumentosOpcionais FECHAPAR
    (84) ArgumentosOpcionais -> . Argumentos
    (85) ArgumentosOpcionais -> . empty
    (86) Argumentos -> . Argumentos VIRG Exp
    (87) Argumentos -> . Exp
    (90) empty -> .
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHAPAR        reduce using rule 90 (empty -> .)
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    ArgumentosOpcionais            shift and go to state 142
    Argumentos                     shift and go to state 143
    empty                          shift and go to state 144
    Exp                            shift and go to state 145
    EsqVal                         shift and go to state 73

state 96

    (79) Exp -> IDENT ABRECOL . Exp FECHACOL
    (89) EsqVal -> IDENT ABRECOL . Exp FECHACOL
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 146
    EsqVal                         shift and go to state 73

state 97

    (36) Comando -> BREAK PONTOV .

    FECHACV         reduce using rule 36 (Comando -> BREAK PONTOV .)
    IF              reduce using rule 36 (Comando -> BREAK PONTOV .)
    WHILE           reduce using rule 36 (Comando -> BREAK PONTOV .)
    DO              reduce using rule 36 (Comando -> BREAK PONTOV .)
    FOR             reduce using rule 36 (Comando -> BREAK PONTOV .)
    FOREACH         reduce using rule 36 (Comando -> BREAK PONTOV .)
    BREAK           reduce using rule 36 (Comando -> BREAK PONTOV .)
    CONTINUE        reduce using rule 36 (Comando -> BREAK PONTOV .)
    RETURN          reduce using rule 36 (Comando -> BREAK PONTOV .)
    ABRECV          reduce using rule 36 (Comando -> BREAK PONTOV .)
    ABREPAR         reduce using rule 36 (Comando -> BREAK PONTOV .)
    DECREM          reduce using rule 36 (Comando -> BREAK PONTOV .)
    INCREMEN        reduce using rule 36 (Comando -> BREAK PONTOV .)
    NAO             reduce using rule 36 (Comando -> BREAK PONTOV .)
    COMPLEM         reduce using rule 36 (Comando -> BREAK PONTOV .)
    MENOS           reduce using rule 36 (Comando -> BREAK PONTOV .)
    MAIS            reduce using rule 36 (Comando -> BREAK PONTOV .)
    NEW             reduce using rule 36 (Comando -> BREAK PONTOV .)
    IDENT           reduce using rule 36 (Comando -> BREAK PONTOV .)
    FLOAT           reduce using rule 36 (Comando -> BREAK PONTOV .)
    INT             reduce using rule 36 (Comando -> BREAK PONTOV .)
    STRING          reduce using rule 36 (Comando -> BREAK PONTOV .)
    NIL             reduce using rule 36 (Comando -> BREAK PONTOV .)
    PONTOV          reduce using rule 36 (Comando -> BREAK PONTOV .)
    ELSE            reduce using rule 36 (Comando -> BREAK PONTOV .)


state 98

    (37) Comando -> CONTINUE PONTOV .

    FECHACV         reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    IF              reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    WHILE           reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    DO              reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    FOR             reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    FOREACH         reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    BREAK           reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    CONTINUE        reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    RETURN          reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    ABRECV          reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    ABREPAR         reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    DECREM          reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    INCREMEN        reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    NAO             reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    COMPLEM         reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    MENOS           reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    MAIS            reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    NEW             reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    IDENT           reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    FLOAT           reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    INT             reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    STRING          reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    NIL             reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    PONTOV          reduce using rule 37 (Comando -> CONTINUE PONTOV .)
    ELSE            reduce using rule 37 (Comando -> CONTINUE PONTOV .)


state 99

    (38) Comando -> RETURN ExpOpc . PONTOV

    PONTOV          shift and go to state 147


state 100

    (48) Exp -> Exp COND . Exp DOISP Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 148
    EsqVal                         shift and go to state 73

state 101

    (49) Exp -> Exp OULOG . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 149
    EsqVal                         shift and go to state 73

state 102

    (50) Exp -> Exp ELOG . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 150
    EsqVal                         shift and go to state 73

state 103

    (51) Exp -> Exp OU . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 151
    EsqVal                         shift and go to state 73

state 104

    (52) Exp -> Exp E . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 152
    EsqVal                         shift and go to state 73

state 105

    (53) Exp -> Exp DESLESQ . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 153
    EsqVal                         shift and go to state 73

state 106

    (54) Exp -> Exp DESLDIR . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 154
    EsqVal                         shift and go to state 73

state 107

    (55) Exp -> Exp IGUAL . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 155
    EsqVal                         shift and go to state 73

state 108

    (56) Exp -> Exp DIFER . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 156
    EsqVal                         shift and go to state 73

state 109

    (57) Exp -> Exp MAIORIGUAL . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 157
    EsqVal                         shift and go to state 73

state 110

    (58) Exp -> Exp MENORIGUAL . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 158
    EsqVal                         shift and go to state 73

state 111

    (59) Exp -> Exp MAIOR . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 159
    EsqVal                         shift and go to state 73

state 112

    (60) Exp -> Exp MENOR . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 160
    EsqVal                         shift and go to state 73

state 113

    (61) Exp -> Exp MAIS . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 161
    EsqVal                         shift and go to state 73

state 114

    (62) Exp -> Exp MENOS . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 162
    EsqVal                         shift and go to state 73

state 115

    (63) Exp -> Exp MULT . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 163
    EsqVal                         shift and go to state 73

state 116

    (64) Exp -> Exp DIV . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 164
    EsqVal                         shift and go to state 73

state 117

    (65) Exp -> Exp MOD . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 165
    EsqVal                         shift and go to state 73

state 118

    (77) Exp -> Exp PONTEIRO . IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    IDENT           shift and go to state 166


state 119

    (43) Exp -> EsqVal ATRIB . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    EsqVal                         shift and go to state 73
    Exp                            shift and go to state 167

state 120

    (44) Exp -> EsqVal ATRIBCOMP . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    EsqVal                         shift and go to state 73
    Exp                            shift and go to state 168

state 121

    (45) Exp -> EsqVal MENOSCOMP . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    EsqVal                         shift and go to state 73
    Exp                            shift and go to state 169

state 122

    (46) Exp -> EsqVal MULTCOMP . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    EsqVal                         shift and go to state 73
    Exp                            shift and go to state 170

state 123

    (47) Exp -> EsqVal DIVCOMP . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    EsqVal                         shift and go to state 73
    Exp                            shift and go to state 171

state 124

    (69) Exp -> EsqVal DECREM .

    COND            reduce using rule 69 (Exp -> EsqVal DECREM .)
    OULOG           reduce using rule 69 (Exp -> EsqVal DECREM .)
    ELOG            reduce using rule 69 (Exp -> EsqVal DECREM .)
    OU              reduce using rule 69 (Exp -> EsqVal DECREM .)
    E               reduce using rule 69 (Exp -> EsqVal DECREM .)
    DESLESQ         reduce using rule 69 (Exp -> EsqVal DECREM .)
    DESLDIR         reduce using rule 69 (Exp -> EsqVal DECREM .)
    IGUAL           reduce using rule 69 (Exp -> EsqVal DECREM .)
    DIFER           reduce using rule 69 (Exp -> EsqVal DECREM .)
    MAIORIGUAL      reduce using rule 69 (Exp -> EsqVal DECREM .)
    MENORIGUAL      reduce using rule 69 (Exp -> EsqVal DECREM .)
    MAIOR           reduce using rule 69 (Exp -> EsqVal DECREM .)
    MENOR           reduce using rule 69 (Exp -> EsqVal DECREM .)
    MAIS            reduce using rule 69 (Exp -> EsqVal DECREM .)
    MENOS           reduce using rule 69 (Exp -> EsqVal DECREM .)
    MULT            reduce using rule 69 (Exp -> EsqVal DECREM .)
    DIV             reduce using rule 69 (Exp -> EsqVal DECREM .)
    MOD             reduce using rule 69 (Exp -> EsqVal DECREM .)
    PONTEIRO        reduce using rule 69 (Exp -> EsqVal DECREM .)
    PONTOV          reduce using rule 69 (Exp -> EsqVal DECREM .)
    FECHAPAR        reduce using rule 69 (Exp -> EsqVal DECREM .)
    VIRG            reduce using rule 69 (Exp -> EsqVal DECREM .)
    FECHACOL        reduce using rule 69 (Exp -> EsqVal DECREM .)
    DOISP           reduce using rule 69 (Exp -> EsqVal DECREM .)


state 125

    (70) Exp -> EsqVal INCREMEN .

    COND            reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    OULOG           reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    ELOG            reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    OU              reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    E               reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    DESLESQ         reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    DESLDIR         reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    IGUAL           reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    DIFER           reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MAIORIGUAL      reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MENORIGUAL      reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MAIOR           reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MENOR           reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MAIS            reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MENOS           reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MULT            reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    DIV             reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    MOD             reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    PONTEIRO        reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    PONTOV          reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    FECHAPAR        reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    VIRG            reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    FECHACOL        reduce using rule 70 (Exp -> EsqVal INCREMEN .)
    DOISP           reduce using rule 70 (Exp -> EsqVal INCREMEN .)


state 126

    (74) Exp -> MAIS Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 74 (Exp -> MAIS Exp .)
    OULOG           reduce using rule 74 (Exp -> MAIS Exp .)
    ELOG            reduce using rule 74 (Exp -> MAIS Exp .)
    OU              reduce using rule 74 (Exp -> MAIS Exp .)
    E               reduce using rule 74 (Exp -> MAIS Exp .)
    DESLESQ         reduce using rule 74 (Exp -> MAIS Exp .)
    DESLDIR         reduce using rule 74 (Exp -> MAIS Exp .)
    IGUAL           reduce using rule 74 (Exp -> MAIS Exp .)
    DIFER           reduce using rule 74 (Exp -> MAIS Exp .)
    MAIORIGUAL      reduce using rule 74 (Exp -> MAIS Exp .)
    MENORIGUAL      reduce using rule 74 (Exp -> MAIS Exp .)
    MAIOR           reduce using rule 74 (Exp -> MAIS Exp .)
    MENOR           reduce using rule 74 (Exp -> MAIS Exp .)
    MAIS            reduce using rule 74 (Exp -> MAIS Exp .)
    MENOS           reduce using rule 74 (Exp -> MAIS Exp .)
    MULT            reduce using rule 74 (Exp -> MAIS Exp .)
    DIV             reduce using rule 74 (Exp -> MAIS Exp .)
    MOD             reduce using rule 74 (Exp -> MAIS Exp .)
    PONTOV          reduce using rule 74 (Exp -> MAIS Exp .)
    FECHAPAR        reduce using rule 74 (Exp -> MAIS Exp .)
    VIRG            reduce using rule 74 (Exp -> MAIS Exp .)
    FECHACOL        reduce using rule 74 (Exp -> MAIS Exp .)
    DOISP           reduce using rule 74 (Exp -> MAIS Exp .)
    PONTEIRO        shift and go to state 118

  ! PONTEIRO        [ reduce using rule 74 (Exp -> MAIS Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULT            [ shift and go to state 115 ]
  ! DIV             [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 117 ]


state 127

    (73) Exp -> MENOS Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 73 (Exp -> MENOS Exp .)
    OULOG           reduce using rule 73 (Exp -> MENOS Exp .)
    ELOG            reduce using rule 73 (Exp -> MENOS Exp .)
    OU              reduce using rule 73 (Exp -> MENOS Exp .)
    E               reduce using rule 73 (Exp -> MENOS Exp .)
    DESLESQ         reduce using rule 73 (Exp -> MENOS Exp .)
    DESLDIR         reduce using rule 73 (Exp -> MENOS Exp .)
    IGUAL           reduce using rule 73 (Exp -> MENOS Exp .)
    DIFER           reduce using rule 73 (Exp -> MENOS Exp .)
    MAIORIGUAL      reduce using rule 73 (Exp -> MENOS Exp .)
    MENORIGUAL      reduce using rule 73 (Exp -> MENOS Exp .)
    MAIOR           reduce using rule 73 (Exp -> MENOS Exp .)
    MENOR           reduce using rule 73 (Exp -> MENOS Exp .)
    MAIS            reduce using rule 73 (Exp -> MENOS Exp .)
    MENOS           reduce using rule 73 (Exp -> MENOS Exp .)
    MULT            reduce using rule 73 (Exp -> MENOS Exp .)
    DIV             reduce using rule 73 (Exp -> MENOS Exp .)
    MOD             reduce using rule 73 (Exp -> MENOS Exp .)
    PONTOV          reduce using rule 73 (Exp -> MENOS Exp .)
    FECHAPAR        reduce using rule 73 (Exp -> MENOS Exp .)
    VIRG            reduce using rule 73 (Exp -> MENOS Exp .)
    FECHACOL        reduce using rule 73 (Exp -> MENOS Exp .)
    DOISP           reduce using rule 73 (Exp -> MENOS Exp .)
    PONTEIRO        shift and go to state 118

  ! PONTEIRO        [ reduce using rule 73 (Exp -> MENOS Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULT            [ shift and go to state 115 ]
  ! DIV             [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 117 ]


state 128

    (67) Exp -> DECREM EsqVal .

    COND            reduce using rule 67 (Exp -> DECREM EsqVal .)
    OULOG           reduce using rule 67 (Exp -> DECREM EsqVal .)
    ELOG            reduce using rule 67 (Exp -> DECREM EsqVal .)
    OU              reduce using rule 67 (Exp -> DECREM EsqVal .)
    E               reduce using rule 67 (Exp -> DECREM EsqVal .)
    DESLESQ         reduce using rule 67 (Exp -> DECREM EsqVal .)
    DESLDIR         reduce using rule 67 (Exp -> DECREM EsqVal .)
    IGUAL           reduce using rule 67 (Exp -> DECREM EsqVal .)
    DIFER           reduce using rule 67 (Exp -> DECREM EsqVal .)
    MAIORIGUAL      reduce using rule 67 (Exp -> DECREM EsqVal .)
    MENORIGUAL      reduce using rule 67 (Exp -> DECREM EsqVal .)
    MAIOR           reduce using rule 67 (Exp -> DECREM EsqVal .)
    MENOR           reduce using rule 67 (Exp -> DECREM EsqVal .)
    MAIS            reduce using rule 67 (Exp -> DECREM EsqVal .)
    MENOS           reduce using rule 67 (Exp -> DECREM EsqVal .)
    MULT            reduce using rule 67 (Exp -> DECREM EsqVal .)
    DIV             reduce using rule 67 (Exp -> DECREM EsqVal .)
    MOD             reduce using rule 67 (Exp -> DECREM EsqVal .)
    PONTEIRO        reduce using rule 67 (Exp -> DECREM EsqVal .)
    PONTOV          reduce using rule 67 (Exp -> DECREM EsqVal .)
    FECHAPAR        reduce using rule 67 (Exp -> DECREM EsqVal .)
    VIRG            reduce using rule 67 (Exp -> DECREM EsqVal .)
    FECHACOL        reduce using rule 67 (Exp -> DECREM EsqVal .)
    DOISP           reduce using rule 67 (Exp -> DECREM EsqVal .)


state 129

    (88) EsqVal -> IDENT .
    (89) EsqVal -> IDENT . ABRECOL Exp FECHACOL

    COND            reduce using rule 88 (EsqVal -> IDENT .)
    OULOG           reduce using rule 88 (EsqVal -> IDENT .)
    ELOG            reduce using rule 88 (EsqVal -> IDENT .)
    OU              reduce using rule 88 (EsqVal -> IDENT .)
    E               reduce using rule 88 (EsqVal -> IDENT .)
    DESLESQ         reduce using rule 88 (EsqVal -> IDENT .)
    DESLDIR         reduce using rule 88 (EsqVal -> IDENT .)
    IGUAL           reduce using rule 88 (EsqVal -> IDENT .)
    DIFER           reduce using rule 88 (EsqVal -> IDENT .)
    MAIORIGUAL      reduce using rule 88 (EsqVal -> IDENT .)
    MENORIGUAL      reduce using rule 88 (EsqVal -> IDENT .)
    MAIOR           reduce using rule 88 (EsqVal -> IDENT .)
    MENOR           reduce using rule 88 (EsqVal -> IDENT .)
    MAIS            reduce using rule 88 (EsqVal -> IDENT .)
    MENOS           reduce using rule 88 (EsqVal -> IDENT .)
    MULT            reduce using rule 88 (EsqVal -> IDENT .)
    DIV             reduce using rule 88 (EsqVal -> IDENT .)
    MOD             reduce using rule 88 (EsqVal -> IDENT .)
    PONTEIRO        reduce using rule 88 (EsqVal -> IDENT .)
    PONTOV          reduce using rule 88 (EsqVal -> IDENT .)
    FECHAPAR        reduce using rule 88 (EsqVal -> IDENT .)
    VIRG            reduce using rule 88 (EsqVal -> IDENT .)
    FECHACOL        reduce using rule 88 (EsqVal -> IDENT .)
    DOISP           reduce using rule 88 (EsqVal -> IDENT .)
    ABRECOL         shift and go to state 172


state 130

    (68) Exp -> INCREMEN EsqVal .

    COND            reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    OULOG           reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    ELOG            reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    OU              reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    E               reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    DESLESQ         reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    DESLDIR         reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    IGUAL           reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    DIFER           reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MAIORIGUAL      reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MENORIGUAL      reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MAIOR           reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MENOR           reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MAIS            reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MENOS           reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MULT            reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    DIV             reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    MOD             reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    PONTEIRO        reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    PONTOV          reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    FECHAPAR        reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    VIRG            reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    FECHACOL        reduce using rule 68 (Exp -> INCREMEN EsqVal .)
    DOISP           reduce using rule 68 (Exp -> INCREMEN EsqVal .)


state 131

    (71) Exp -> NAO Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 71 (Exp -> NAO Exp .)
    OULOG           reduce using rule 71 (Exp -> NAO Exp .)
    ELOG            reduce using rule 71 (Exp -> NAO Exp .)
    OU              reduce using rule 71 (Exp -> NAO Exp .)
    E               reduce using rule 71 (Exp -> NAO Exp .)
    DESLESQ         reduce using rule 71 (Exp -> NAO Exp .)
    DESLDIR         reduce using rule 71 (Exp -> NAO Exp .)
    IGUAL           reduce using rule 71 (Exp -> NAO Exp .)
    DIFER           reduce using rule 71 (Exp -> NAO Exp .)
    MAIORIGUAL      reduce using rule 71 (Exp -> NAO Exp .)
    MENORIGUAL      reduce using rule 71 (Exp -> NAO Exp .)
    MAIOR           reduce using rule 71 (Exp -> NAO Exp .)
    MENOR           reduce using rule 71 (Exp -> NAO Exp .)
    MAIS            reduce using rule 71 (Exp -> NAO Exp .)
    MENOS           reduce using rule 71 (Exp -> NAO Exp .)
    MULT            reduce using rule 71 (Exp -> NAO Exp .)
    DIV             reduce using rule 71 (Exp -> NAO Exp .)
    MOD             reduce using rule 71 (Exp -> NAO Exp .)
    PONTOV          reduce using rule 71 (Exp -> NAO Exp .)
    FECHAPAR        reduce using rule 71 (Exp -> NAO Exp .)
    VIRG            reduce using rule 71 (Exp -> NAO Exp .)
    FECHACOL        reduce using rule 71 (Exp -> NAO Exp .)
    DOISP           reduce using rule 71 (Exp -> NAO Exp .)
    PONTEIRO        shift and go to state 118

  ! PONTEIRO        [ reduce using rule 71 (Exp -> NAO Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULT            [ shift and go to state 115 ]
  ! DIV             [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 117 ]


state 132

    (72) Exp -> COMPLEM Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 72 (Exp -> COMPLEM Exp .)
    OULOG           reduce using rule 72 (Exp -> COMPLEM Exp .)
    ELOG            reduce using rule 72 (Exp -> COMPLEM Exp .)
    OU              reduce using rule 72 (Exp -> COMPLEM Exp .)
    E               reduce using rule 72 (Exp -> COMPLEM Exp .)
    DESLESQ         reduce using rule 72 (Exp -> COMPLEM Exp .)
    DESLDIR         reduce using rule 72 (Exp -> COMPLEM Exp .)
    IGUAL           reduce using rule 72 (Exp -> COMPLEM Exp .)
    DIFER           reduce using rule 72 (Exp -> COMPLEM Exp .)
    MAIORIGUAL      reduce using rule 72 (Exp -> COMPLEM Exp .)
    MENORIGUAL      reduce using rule 72 (Exp -> COMPLEM Exp .)
    MAIOR           reduce using rule 72 (Exp -> COMPLEM Exp .)
    MENOR           reduce using rule 72 (Exp -> COMPLEM Exp .)
    MAIS            reduce using rule 72 (Exp -> COMPLEM Exp .)
    MENOS           reduce using rule 72 (Exp -> COMPLEM Exp .)
    MULT            reduce using rule 72 (Exp -> COMPLEM Exp .)
    DIV             reduce using rule 72 (Exp -> COMPLEM Exp .)
    MOD             reduce using rule 72 (Exp -> COMPLEM Exp .)
    PONTOV          reduce using rule 72 (Exp -> COMPLEM Exp .)
    FECHAPAR        reduce using rule 72 (Exp -> COMPLEM Exp .)
    VIRG            reduce using rule 72 (Exp -> COMPLEM Exp .)
    FECHACOL        reduce using rule 72 (Exp -> COMPLEM Exp .)
    DOISP           reduce using rule 72 (Exp -> COMPLEM Exp .)
    PONTEIRO        shift and go to state 118

  ! PONTEIRO        [ reduce using rule 72 (Exp -> COMPLEM Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULT            [ shift and go to state 115 ]
  ! DIV             [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 117 ]


state 133

    (75) Exp -> NEW IDENT . ABREPAR ArgumentosOpcionais FECHAPAR

    ABREPAR         shift and go to state 173


state 134

    (17) Variavel -> IDENT ABRECOL INT FECHACOL .

    PONTOV          reduce using rule 17 (Variavel -> IDENT ABRECOL INT FECHACOL .)
    VIRG            reduce using rule 17 (Variavel -> IDENT ABRECOL INT FECHACOL .)


state 135

    (11) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR . PONTOV

    PONTOV          shift and go to state 174


state 136

    (30) Comando -> IF ABREPAR ExpOpc . FECHAPAR Comando ELSE Comando
    (31) Comando -> IF ABREPAR ExpOpc . FECHAPAR Comando

    FECHAPAR        shift and go to state 175


state 137

    (66) Exp -> ABREPAR Exp FECHAPAR .

    COND            reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    OULOG           reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    ELOG            reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    OU              reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    E               reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    DESLESQ         reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    DESLDIR         reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    IGUAL           reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    DIFER           reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MAIORIGUAL      reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MENORIGUAL      reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MAIOR           reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MENOR           reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MAIS            reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MENOS           reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MULT            reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    DIV             reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    MOD             reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    PONTEIRO        reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    PONTOV          reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    FECHAPAR        reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    VIRG            reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    FECHACOL        reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)
    DOISP           reduce using rule 66 (Exp -> ABREPAR Exp FECHAPAR .)


state 138

    (32) Comando -> WHILE ABREPAR ExpOpc . FECHAPAR Comando

    FECHAPAR        shift and go to state 176


state 139

    (33) Comando -> DO Comando WHILE . ABREPAR ExpOpc FECHAPAR PONTOV

    ABREPAR         shift and go to state 177


state 140

    (34) Comando -> FOR ABREPAR ExpOpc . PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando

    PONTOV          shift and go to state 178


state 141

    (35) Comando -> FOREACH IDENT IN . IDENT Comando

    IDENT           shift and go to state 179


state 142

    (76) Exp -> IDENT ABREPAR ArgumentosOpcionais . FECHAPAR

    FECHAPAR        shift and go to state 180


state 143

    (84) ArgumentosOpcionais -> Argumentos .
    (86) Argumentos -> Argumentos . VIRG Exp

    FECHAPAR        reduce using rule 84 (ArgumentosOpcionais -> Argumentos .)
    VIRG            shift and go to state 181


state 144

    (85) ArgumentosOpcionais -> empty .

    FECHAPAR        reduce using rule 85 (ArgumentosOpcionais -> empty .)


state 145

    (87) Argumentos -> Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 87 (Argumentos -> Exp .)
    FECHAPAR        reduce using rule 87 (Argumentos -> Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118


state 146

    (79) Exp -> IDENT ABRECOL Exp . FECHACOL
    (89) EsqVal -> IDENT ABRECOL Exp . FECHACOL
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    FECHACOL        shift and go to state 182
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118


state 147

    (38) Comando -> RETURN ExpOpc PONTOV .

    FECHACV         reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    IF              reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    WHILE           reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    DO              reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    FOR             reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    FOREACH         reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    BREAK           reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    CONTINUE        reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    RETURN          reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    ABRECV          reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    ABREPAR         reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    DECREM          reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    INCREMEN        reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    NAO             reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    COMPLEM         reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    MENOS           reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    MAIS            reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    NEW             reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    IDENT           reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    FLOAT           reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    INT             reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    STRING          reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    NIL             reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    PONTOV          reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)
    ELSE            reduce using rule 38 (Comando -> RETURN ExpOpc PONTOV .)


state 148

    (48) Exp -> Exp COND Exp . DOISP Exp
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    DOISP           shift and go to state 183
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118


state 149

    (49) Exp -> Exp OULOG Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 49 (Exp -> Exp OULOG Exp .)
    OULOG           reduce using rule 49 (Exp -> Exp OULOG Exp .)
    PONTOV          reduce using rule 49 (Exp -> Exp OULOG Exp .)
    FECHAPAR        reduce using rule 49 (Exp -> Exp OULOG Exp .)
    VIRG            reduce using rule 49 (Exp -> Exp OULOG Exp .)
    FECHACOL        reduce using rule 49 (Exp -> Exp OULOG Exp .)
    DOISP           reduce using rule 49 (Exp -> Exp OULOG Exp .)
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! ELOG            [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! OU              [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! E               [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! DESLESQ         [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! DESLDIR         [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! IGUAL           [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! DIFER           [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MENORIGUAL      [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MAIOR           [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MENOR           [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MAIS            [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MENOS           [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MULT            [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! DIV             [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! MOD             [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! PONTEIRO        [ reduce using rule 49 (Exp -> Exp OULOG Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]


state 150

    (50) Exp -> Exp ELOG Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 50 (Exp -> Exp ELOG Exp .)
    OULOG           reduce using rule 50 (Exp -> Exp ELOG Exp .)
    ELOG            reduce using rule 50 (Exp -> Exp ELOG Exp .)
    PONTOV          reduce using rule 50 (Exp -> Exp ELOG Exp .)
    FECHAPAR        reduce using rule 50 (Exp -> Exp ELOG Exp .)
    VIRG            reduce using rule 50 (Exp -> Exp ELOG Exp .)
    FECHACOL        reduce using rule 50 (Exp -> Exp ELOG Exp .)
    DOISP           reduce using rule 50 (Exp -> Exp ELOG Exp .)
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! OU              [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! E               [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! DESLESQ         [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! DESLDIR         [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! IGUAL           [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! DIFER           [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MENORIGUAL      [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MAIOR           [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MENOR           [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MAIS            [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MENOS           [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MULT            [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! DIV             [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! MOD             [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! PONTEIRO        [ reduce using rule 50 (Exp -> Exp ELOG Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]


state 151

    (51) Exp -> Exp OU Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 51 (Exp -> Exp OU Exp .)
    OULOG           reduce using rule 51 (Exp -> Exp OU Exp .)
    ELOG            reduce using rule 51 (Exp -> Exp OU Exp .)
    OU              reduce using rule 51 (Exp -> Exp OU Exp .)
    PONTOV          reduce using rule 51 (Exp -> Exp OU Exp .)
    FECHAPAR        reduce using rule 51 (Exp -> Exp OU Exp .)
    VIRG            reduce using rule 51 (Exp -> Exp OU Exp .)
    FECHACOL        reduce using rule 51 (Exp -> Exp OU Exp .)
    DOISP           reduce using rule 51 (Exp -> Exp OU Exp .)
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! E               [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! DESLESQ         [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! DESLDIR         [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! IGUAL           [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! DIFER           [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MENORIGUAL      [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MAIOR           [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MENOR           [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MAIS            [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MENOS           [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MULT            [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! DIV             [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! MOD             [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! PONTEIRO        [ reduce using rule 51 (Exp -> Exp OU Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]


state 152

    (52) Exp -> Exp E Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 52 (Exp -> Exp E Exp .)
    OULOG           reduce using rule 52 (Exp -> Exp E Exp .)
    ELOG            reduce using rule 52 (Exp -> Exp E Exp .)
    OU              reduce using rule 52 (Exp -> Exp E Exp .)
    E               reduce using rule 52 (Exp -> Exp E Exp .)
    PONTOV          reduce using rule 52 (Exp -> Exp E Exp .)
    FECHAPAR        reduce using rule 52 (Exp -> Exp E Exp .)
    VIRG            reduce using rule 52 (Exp -> Exp E Exp .)
    FECHACOL        reduce using rule 52 (Exp -> Exp E Exp .)
    DOISP           reduce using rule 52 (Exp -> Exp E Exp .)
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! DESLESQ         [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! DESLDIR         [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! IGUAL           [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! DIFER           [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MENORIGUAL      [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MAIOR           [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MENOR           [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MAIS            [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MENOS           [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MULT            [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! DIV             [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! MOD             [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! PONTEIRO        [ reduce using rule 52 (Exp -> Exp E Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]


state 153

    (53) Exp -> Exp DESLESQ Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    OULOG           reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    ELOG            reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    OU              reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    E               reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    DESLESQ         reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    DESLDIR         reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    IGUAL           reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    DIFER           reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    MAIORIGUAL      reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    MENORIGUAL      reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    MAIOR           reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    MENOR           reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    PONTOV          reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    FECHAPAR        reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    VIRG            reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    FECHACOL        reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    DOISP           reduce using rule 53 (Exp -> Exp DESLESQ Exp .)
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! MAIS            [ reduce using rule 53 (Exp -> Exp DESLESQ Exp .) ]
  ! MENOS           [ reduce using rule 53 (Exp -> Exp DESLESQ Exp .) ]
  ! MULT            [ reduce using rule 53 (Exp -> Exp DESLESQ Exp .) ]
  ! DIV             [ reduce using rule 53 (Exp -> Exp DESLESQ Exp .) ]
  ! MOD             [ reduce using rule 53 (Exp -> Exp DESLESQ Exp .) ]
  ! PONTEIRO        [ reduce using rule 53 (Exp -> Exp DESLESQ Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]


state 154

    (54) Exp -> Exp DESLDIR Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    OULOG           reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    ELOG            reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    OU              reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    E               reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    DESLESQ         reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    DESLDIR         reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    IGUAL           reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    DIFER           reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    MAIORIGUAL      reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    MENORIGUAL      reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    MAIOR           reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    MENOR           reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    PONTOV          reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    FECHAPAR        reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    VIRG            reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    FECHACOL        reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    DOISP           reduce using rule 54 (Exp -> Exp DESLDIR Exp .)
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! MAIS            [ reduce using rule 54 (Exp -> Exp DESLDIR Exp .) ]
  ! MENOS           [ reduce using rule 54 (Exp -> Exp DESLDIR Exp .) ]
  ! MULT            [ reduce using rule 54 (Exp -> Exp DESLDIR Exp .) ]
  ! DIV             [ reduce using rule 54 (Exp -> Exp DESLDIR Exp .) ]
  ! MOD             [ reduce using rule 54 (Exp -> Exp DESLDIR Exp .) ]
  ! PONTEIRO        [ reduce using rule 54 (Exp -> Exp DESLDIR Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]


state 155

    (55) Exp -> Exp IGUAL Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    OULOG           reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    ELOG            reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    OU              reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    E               reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    IGUAL           reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    DIFER           reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    PONTOV          reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    FECHAPAR        reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    VIRG            reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    FECHACOL        reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    DOISP           reduce using rule 55 (Exp -> Exp IGUAL Exp .)
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! DESLESQ         [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! DESLDIR         [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MENORIGUAL      [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MAIOR           [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MENOR           [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MAIS            [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MENOS           [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MULT            [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! DIV             [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! MOD             [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! PONTEIRO        [ reduce using rule 55 (Exp -> Exp IGUAL Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]


state 156

    (56) Exp -> Exp DIFER Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 56 (Exp -> Exp DIFER Exp .)
    OULOG           reduce using rule 56 (Exp -> Exp DIFER Exp .)
    ELOG            reduce using rule 56 (Exp -> Exp DIFER Exp .)
    OU              reduce using rule 56 (Exp -> Exp DIFER Exp .)
    E               reduce using rule 56 (Exp -> Exp DIFER Exp .)
    IGUAL           reduce using rule 56 (Exp -> Exp DIFER Exp .)
    DIFER           reduce using rule 56 (Exp -> Exp DIFER Exp .)
    PONTOV          reduce using rule 56 (Exp -> Exp DIFER Exp .)
    FECHAPAR        reduce using rule 56 (Exp -> Exp DIFER Exp .)
    VIRG            reduce using rule 56 (Exp -> Exp DIFER Exp .)
    FECHACOL        reduce using rule 56 (Exp -> Exp DIFER Exp .)
    DOISP           reduce using rule 56 (Exp -> Exp DIFER Exp .)
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! DESLESQ         [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! DESLDIR         [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MENORIGUAL      [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MAIOR           [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MENOR           [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MAIS            [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MENOS           [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MULT            [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! DIV             [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! MOD             [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! PONTEIRO        [ reduce using rule 56 (Exp -> Exp DIFER Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]


state 157

    (57) Exp -> Exp MAIORIGUAL Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    OULOG           reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    ELOG            reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    OU              reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    E               reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    IGUAL           reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    DIFER           reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    MAIORIGUAL      reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    MENORIGUAL      reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    MAIOR           reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    MENOR           reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    PONTOV          reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    FECHAPAR        reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    VIRG            reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    FECHACOL        reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    DOISP           reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .)
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! DESLESQ         [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! DESLDIR         [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MAIS            [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MENOS           [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MULT            [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! DIV             [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MOD             [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! PONTEIRO        [ reduce using rule 57 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]


state 158

    (58) Exp -> Exp MENORIGUAL Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    OULOG           reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    ELOG            reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    OU              reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    E               reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    IGUAL           reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    DIFER           reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    MAIORIGUAL      reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    MENORIGUAL      reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    MAIOR           reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    MENOR           reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    PONTOV          reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    FECHAPAR        reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    VIRG            reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    FECHACOL        reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    DOISP           reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .)
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! DESLESQ         [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! DESLDIR         [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MAIS            [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MENOS           [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MULT            [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! DIV             [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MOD             [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! PONTEIRO        [ reduce using rule 58 (Exp -> Exp MENORIGUAL Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]


state 159

    (59) Exp -> Exp MAIOR Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    OULOG           reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    ELOG            reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    OU              reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    E               reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    IGUAL           reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    DIFER           reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    MAIORIGUAL      reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    MENORIGUAL      reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    MAIOR           reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    MENOR           reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    PONTOV          reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    FECHAPAR        reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    VIRG            reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    FECHACOL        reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    DOISP           reduce using rule 59 (Exp -> Exp MAIOR Exp .)
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! DESLESQ         [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! DESLDIR         [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! MAIS            [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! MENOS           [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! MULT            [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! DIV             [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! MOD             [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! PONTEIRO        [ reduce using rule 59 (Exp -> Exp MAIOR Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]


state 160

    (60) Exp -> Exp MENOR Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 60 (Exp -> Exp MENOR Exp .)
    OULOG           reduce using rule 60 (Exp -> Exp MENOR Exp .)
    ELOG            reduce using rule 60 (Exp -> Exp MENOR Exp .)
    OU              reduce using rule 60 (Exp -> Exp MENOR Exp .)
    E               reduce using rule 60 (Exp -> Exp MENOR Exp .)
    IGUAL           reduce using rule 60 (Exp -> Exp MENOR Exp .)
    DIFER           reduce using rule 60 (Exp -> Exp MENOR Exp .)
    MAIORIGUAL      reduce using rule 60 (Exp -> Exp MENOR Exp .)
    MENORIGUAL      reduce using rule 60 (Exp -> Exp MENOR Exp .)
    MAIOR           reduce using rule 60 (Exp -> Exp MENOR Exp .)
    MENOR           reduce using rule 60 (Exp -> Exp MENOR Exp .)
    PONTOV          reduce using rule 60 (Exp -> Exp MENOR Exp .)
    FECHAPAR        reduce using rule 60 (Exp -> Exp MENOR Exp .)
    VIRG            reduce using rule 60 (Exp -> Exp MENOR Exp .)
    FECHACOL        reduce using rule 60 (Exp -> Exp MENOR Exp .)
    DOISP           reduce using rule 60 (Exp -> Exp MENOR Exp .)
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! DESLESQ         [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! DESLDIR         [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! MAIS            [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! MENOS           [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! MULT            [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! DIV             [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! MOD             [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! PONTEIRO        [ reduce using rule 60 (Exp -> Exp MENOR Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]


state 161

    (61) Exp -> Exp MAIS Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 61 (Exp -> Exp MAIS Exp .)
    OULOG           reduce using rule 61 (Exp -> Exp MAIS Exp .)
    ELOG            reduce using rule 61 (Exp -> Exp MAIS Exp .)
    OU              reduce using rule 61 (Exp -> Exp MAIS Exp .)
    E               reduce using rule 61 (Exp -> Exp MAIS Exp .)
    DESLESQ         reduce using rule 61 (Exp -> Exp MAIS Exp .)
    DESLDIR         reduce using rule 61 (Exp -> Exp MAIS Exp .)
    IGUAL           reduce using rule 61 (Exp -> Exp MAIS Exp .)
    DIFER           reduce using rule 61 (Exp -> Exp MAIS Exp .)
    MAIORIGUAL      reduce using rule 61 (Exp -> Exp MAIS Exp .)
    MENORIGUAL      reduce using rule 61 (Exp -> Exp MAIS Exp .)
    MAIOR           reduce using rule 61 (Exp -> Exp MAIS Exp .)
    MENOR           reduce using rule 61 (Exp -> Exp MAIS Exp .)
    MAIS            reduce using rule 61 (Exp -> Exp MAIS Exp .)
    MENOS           reduce using rule 61 (Exp -> Exp MAIS Exp .)
    PONTOV          reduce using rule 61 (Exp -> Exp MAIS Exp .)
    FECHAPAR        reduce using rule 61 (Exp -> Exp MAIS Exp .)
    VIRG            reduce using rule 61 (Exp -> Exp MAIS Exp .)
    FECHACOL        reduce using rule 61 (Exp -> Exp MAIS Exp .)
    DOISP           reduce using rule 61 (Exp -> Exp MAIS Exp .)
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! MULT            [ reduce using rule 61 (Exp -> Exp MAIS Exp .) ]
  ! DIV             [ reduce using rule 61 (Exp -> Exp MAIS Exp .) ]
  ! MOD             [ reduce using rule 61 (Exp -> Exp MAIS Exp .) ]
  ! PONTEIRO        [ reduce using rule 61 (Exp -> Exp MAIS Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]


state 162

    (62) Exp -> Exp MENOS Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 62 (Exp -> Exp MENOS Exp .)
    OULOG           reduce using rule 62 (Exp -> Exp MENOS Exp .)
    ELOG            reduce using rule 62 (Exp -> Exp MENOS Exp .)
    OU              reduce using rule 62 (Exp -> Exp MENOS Exp .)
    E               reduce using rule 62 (Exp -> Exp MENOS Exp .)
    DESLESQ         reduce using rule 62 (Exp -> Exp MENOS Exp .)
    DESLDIR         reduce using rule 62 (Exp -> Exp MENOS Exp .)
    IGUAL           reduce using rule 62 (Exp -> Exp MENOS Exp .)
    DIFER           reduce using rule 62 (Exp -> Exp MENOS Exp .)
    MAIORIGUAL      reduce using rule 62 (Exp -> Exp MENOS Exp .)
    MENORIGUAL      reduce using rule 62 (Exp -> Exp MENOS Exp .)
    MAIOR           reduce using rule 62 (Exp -> Exp MENOS Exp .)
    MENOR           reduce using rule 62 (Exp -> Exp MENOS Exp .)
    MAIS            reduce using rule 62 (Exp -> Exp MENOS Exp .)
    MENOS           reduce using rule 62 (Exp -> Exp MENOS Exp .)
    PONTOV          reduce using rule 62 (Exp -> Exp MENOS Exp .)
    FECHAPAR        reduce using rule 62 (Exp -> Exp MENOS Exp .)
    VIRG            reduce using rule 62 (Exp -> Exp MENOS Exp .)
    FECHACOL        reduce using rule 62 (Exp -> Exp MENOS Exp .)
    DOISP           reduce using rule 62 (Exp -> Exp MENOS Exp .)
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! MULT            [ reduce using rule 62 (Exp -> Exp MENOS Exp .) ]
  ! DIV             [ reduce using rule 62 (Exp -> Exp MENOS Exp .) ]
  ! MOD             [ reduce using rule 62 (Exp -> Exp MENOS Exp .) ]
  ! PONTEIRO        [ reduce using rule 62 (Exp -> Exp MENOS Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]


state 163

    (63) Exp -> Exp MULT Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 63 (Exp -> Exp MULT Exp .)
    OULOG           reduce using rule 63 (Exp -> Exp MULT Exp .)
    ELOG            reduce using rule 63 (Exp -> Exp MULT Exp .)
    OU              reduce using rule 63 (Exp -> Exp MULT Exp .)
    E               reduce using rule 63 (Exp -> Exp MULT Exp .)
    DESLESQ         reduce using rule 63 (Exp -> Exp MULT Exp .)
    DESLDIR         reduce using rule 63 (Exp -> Exp MULT Exp .)
    IGUAL           reduce using rule 63 (Exp -> Exp MULT Exp .)
    DIFER           reduce using rule 63 (Exp -> Exp MULT Exp .)
    MAIORIGUAL      reduce using rule 63 (Exp -> Exp MULT Exp .)
    MENORIGUAL      reduce using rule 63 (Exp -> Exp MULT Exp .)
    MAIOR           reduce using rule 63 (Exp -> Exp MULT Exp .)
    MENOR           reduce using rule 63 (Exp -> Exp MULT Exp .)
    MAIS            reduce using rule 63 (Exp -> Exp MULT Exp .)
    MENOS           reduce using rule 63 (Exp -> Exp MULT Exp .)
    MULT            reduce using rule 63 (Exp -> Exp MULT Exp .)
    DIV             reduce using rule 63 (Exp -> Exp MULT Exp .)
    MOD             reduce using rule 63 (Exp -> Exp MULT Exp .)
    PONTOV          reduce using rule 63 (Exp -> Exp MULT Exp .)
    FECHAPAR        reduce using rule 63 (Exp -> Exp MULT Exp .)
    VIRG            reduce using rule 63 (Exp -> Exp MULT Exp .)
    FECHACOL        reduce using rule 63 (Exp -> Exp MULT Exp .)
    DOISP           reduce using rule 63 (Exp -> Exp MULT Exp .)
    PONTEIRO        shift and go to state 118

  ! PONTEIRO        [ reduce using rule 63 (Exp -> Exp MULT Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULT            [ shift and go to state 115 ]
  ! DIV             [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 117 ]


state 164

    (64) Exp -> Exp DIV Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 64 (Exp -> Exp DIV Exp .)
    OULOG           reduce using rule 64 (Exp -> Exp DIV Exp .)
    ELOG            reduce using rule 64 (Exp -> Exp DIV Exp .)
    OU              reduce using rule 64 (Exp -> Exp DIV Exp .)
    E               reduce using rule 64 (Exp -> Exp DIV Exp .)
    DESLESQ         reduce using rule 64 (Exp -> Exp DIV Exp .)
    DESLDIR         reduce using rule 64 (Exp -> Exp DIV Exp .)
    IGUAL           reduce using rule 64 (Exp -> Exp DIV Exp .)
    DIFER           reduce using rule 64 (Exp -> Exp DIV Exp .)
    MAIORIGUAL      reduce using rule 64 (Exp -> Exp DIV Exp .)
    MENORIGUAL      reduce using rule 64 (Exp -> Exp DIV Exp .)
    MAIOR           reduce using rule 64 (Exp -> Exp DIV Exp .)
    MENOR           reduce using rule 64 (Exp -> Exp DIV Exp .)
    MAIS            reduce using rule 64 (Exp -> Exp DIV Exp .)
    MENOS           reduce using rule 64 (Exp -> Exp DIV Exp .)
    MULT            reduce using rule 64 (Exp -> Exp DIV Exp .)
    DIV             reduce using rule 64 (Exp -> Exp DIV Exp .)
    MOD             reduce using rule 64 (Exp -> Exp DIV Exp .)
    PONTOV          reduce using rule 64 (Exp -> Exp DIV Exp .)
    FECHAPAR        reduce using rule 64 (Exp -> Exp DIV Exp .)
    VIRG            reduce using rule 64 (Exp -> Exp DIV Exp .)
    FECHACOL        reduce using rule 64 (Exp -> Exp DIV Exp .)
    DOISP           reduce using rule 64 (Exp -> Exp DIV Exp .)
    PONTEIRO        shift and go to state 118

  ! PONTEIRO        [ reduce using rule 64 (Exp -> Exp DIV Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULT            [ shift and go to state 115 ]
  ! DIV             [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 117 ]


state 165

    (65) Exp -> Exp MOD Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    COND            reduce using rule 65 (Exp -> Exp MOD Exp .)
    OULOG           reduce using rule 65 (Exp -> Exp MOD Exp .)
    ELOG            reduce using rule 65 (Exp -> Exp MOD Exp .)
    OU              reduce using rule 65 (Exp -> Exp MOD Exp .)
    E               reduce using rule 65 (Exp -> Exp MOD Exp .)
    DESLESQ         reduce using rule 65 (Exp -> Exp MOD Exp .)
    DESLDIR         reduce using rule 65 (Exp -> Exp MOD Exp .)
    IGUAL           reduce using rule 65 (Exp -> Exp MOD Exp .)
    DIFER           reduce using rule 65 (Exp -> Exp MOD Exp .)
    MAIORIGUAL      reduce using rule 65 (Exp -> Exp MOD Exp .)
    MENORIGUAL      reduce using rule 65 (Exp -> Exp MOD Exp .)
    MAIOR           reduce using rule 65 (Exp -> Exp MOD Exp .)
    MENOR           reduce using rule 65 (Exp -> Exp MOD Exp .)
    MAIS            reduce using rule 65 (Exp -> Exp MOD Exp .)
    MENOS           reduce using rule 65 (Exp -> Exp MOD Exp .)
    MULT            reduce using rule 65 (Exp -> Exp MOD Exp .)
    DIV             reduce using rule 65 (Exp -> Exp MOD Exp .)
    MOD             reduce using rule 65 (Exp -> Exp MOD Exp .)
    PONTOV          reduce using rule 65 (Exp -> Exp MOD Exp .)
    FECHAPAR        reduce using rule 65 (Exp -> Exp MOD Exp .)
    VIRG            reduce using rule 65 (Exp -> Exp MOD Exp .)
    FECHACOL        reduce using rule 65 (Exp -> Exp MOD Exp .)
    DOISP           reduce using rule 65 (Exp -> Exp MOD Exp .)
    PONTEIRO        shift and go to state 118

  ! PONTEIRO        [ reduce using rule 65 (Exp -> Exp MOD Exp .) ]
  ! COND            [ shift and go to state 100 ]
  ! OULOG           [ shift and go to state 101 ]
  ! ELOG            [ shift and go to state 102 ]
  ! OU              [ shift and go to state 103 ]
  ! E               [ shift and go to state 104 ]
  ! DESLESQ         [ shift and go to state 105 ]
  ! DESLDIR         [ shift and go to state 106 ]
  ! IGUAL           [ shift and go to state 107 ]
  ! DIFER           [ shift and go to state 108 ]
  ! MAIORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! MAIOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAIS            [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULT            [ shift and go to state 115 ]
  ! DIV             [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 117 ]


state 166

    (77) Exp -> Exp PONTEIRO IDENT . ABREPAR ArgumentosOpcionais FECHAPAR

    ABREPAR         shift and go to state 184


state 167

    (43) Exp -> EsqVal ATRIB Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 43 (Exp -> EsqVal ATRIB Exp .)
    FECHAPAR        reduce using rule 43 (Exp -> EsqVal ATRIB Exp .)
    VIRG            reduce using rule 43 (Exp -> EsqVal ATRIB Exp .)
    FECHACOL        reduce using rule 43 (Exp -> EsqVal ATRIB Exp .)
    DOISP           reduce using rule 43 (Exp -> EsqVal ATRIB Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! COND            [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! OULOG           [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! ELOG            [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! OU              [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! E               [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! DESLESQ         [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! DESLDIR         [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! IGUAL           [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! DIFER           [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MENORIGUAL      [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MAIOR           [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MENOR           [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MAIS            [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MENOS           [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MULT            [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! DIV             [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! MOD             [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]
  ! PONTEIRO        [ reduce using rule 43 (Exp -> EsqVal ATRIB Exp .) ]


state 168

    (44) Exp -> EsqVal ATRIBCOMP Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .)
    FECHAPAR        reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .)
    VIRG            reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .)
    FECHACOL        reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .)
    DOISP           reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! COND            [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! OULOG           [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! ELOG            [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! OU              [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! E               [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DIFER           [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MENOR           [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MAIS            [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MENOS           [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MULT            [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DIV             [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MOD             [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 44 (Exp -> EsqVal ATRIBCOMP Exp .) ]


state 169

    (45) Exp -> EsqVal MENOSCOMP Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .)
    FECHAPAR        reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .)
    VIRG            reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .)
    FECHACOL        reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .)
    DOISP           reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! COND            [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! OULOG           [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! ELOG            [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! OU              [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! E               [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DIFER           [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MENOR           [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MAIS            [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MENOS           [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MULT            [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DIV             [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MOD             [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 45 (Exp -> EsqVal MENOSCOMP Exp .) ]


state 170

    (46) Exp -> EsqVal MULTCOMP Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .)
    FECHAPAR        reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .)
    VIRG            reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .)
    FECHACOL        reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .)
    DOISP           reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! COND            [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! OULOG           [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! ELOG            [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! OU              [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! E               [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DIFER           [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MENOR           [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MAIS            [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MENOS           [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MULT            [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DIV             [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MOD             [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 46 (Exp -> EsqVal MULTCOMP Exp .) ]


state 171

    (47) Exp -> EsqVal DIVCOMP Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .)
    FECHAPAR        reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .)
    VIRG            reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .)
    FECHACOL        reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .)
    DOISP           reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! COND            [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! OULOG           [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! ELOG            [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! OU              [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! E               [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DIFER           [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MENOR           [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MAIS            [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MENOS           [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MULT            [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DIV             [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MOD             [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 47 (Exp -> EsqVal DIVCOMP Exp .) ]


state 172

    (89) EsqVal -> IDENT ABRECOL . Exp FECHACOL
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 185
    EsqVal                         shift and go to state 73

state 173

    (75) Exp -> NEW IDENT ABREPAR . ArgumentosOpcionais FECHAPAR
    (84) ArgumentosOpcionais -> . Argumentos
    (85) ArgumentosOpcionais -> . empty
    (86) Argumentos -> . Argumentos VIRG Exp
    (87) Argumentos -> . Exp
    (90) empty -> .
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHAPAR        reduce using rule 90 (empty -> .)
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    ArgumentosOpcionais            shift and go to state 186
    Argumentos                     shift and go to state 143
    empty                          shift and go to state 144
    Exp                            shift and go to state 145
    EsqVal                         shift and go to state 73

state 174

    (11) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .

    FECHACV         reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)
    STATIC          reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)
    VAR             reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)
    DEF             reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)


state 175

    (30) Comando -> IF ABREPAR ExpOpc FECHAPAR . Comando ELSE Comando
    (31) Comando -> IF ABREPAR ExpOpc FECHAPAR . Comando
    (30) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (32) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (33) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (34) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (35) Comando -> . FOREACH IDENT IN IDENT Comando
    (36) Comando -> . BREAK PONTOV
    (37) Comando -> . CONTINUE PONTOV
    (38) Comando -> . RETURN ExpOpc PONTOV
    (39) Comando -> . ExpOpc PONTOV
    (40) Comando -> . Bloco
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (27) Bloco -> . ABRECV ListaComandos FECHACV
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 59
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    ABRECV          shift and go to state 41
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 61
    Comando                        shift and go to state 187
    Bloco                          shift and go to state 70
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 176

    (32) Comando -> WHILE ABREPAR ExpOpc FECHAPAR . Comando
    (30) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (32) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (33) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (34) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (35) Comando -> . FOREACH IDENT IN IDENT Comando
    (36) Comando -> . BREAK PONTOV
    (37) Comando -> . CONTINUE PONTOV
    (38) Comando -> . RETURN ExpOpc PONTOV
    (39) Comando -> . ExpOpc PONTOV
    (40) Comando -> . Bloco
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (27) Bloco -> . ABRECV ListaComandos FECHACV
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 59
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    ABRECV          shift and go to state 41
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 61
    Comando                        shift and go to state 188
    Bloco                          shift and go to state 70
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 177

    (33) Comando -> DO Comando WHILE ABREPAR . ExpOpc FECHAPAR PONTOV
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    FECHAPAR        reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 189
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 178

    (34) Comando -> FOR ABREPAR ExpOpc PONTOV . ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 190
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 179

    (35) Comando -> FOREACH IDENT IN IDENT . Comando
    (30) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (32) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (33) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (34) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (35) Comando -> . FOREACH IDENT IN IDENT Comando
    (36) Comando -> . BREAK PONTOV
    (37) Comando -> . CONTINUE PONTOV
    (38) Comando -> . RETURN ExpOpc PONTOV
    (39) Comando -> . ExpOpc PONTOV
    (40) Comando -> . Bloco
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (27) Bloco -> . ABRECV ListaComandos FECHACV
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 59
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    ABRECV          shift and go to state 41
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    Comando                        shift and go to state 191
    ExpOpc                         shift and go to state 61
    Bloco                          shift and go to state 70
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 180

    (76) Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .

    COND            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OULOG           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    ELOG            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OU              reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    E               reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLESQ         reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLDIR         reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    IGUAL           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIFER           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIORIGUAL      reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENORIGUAL      reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIOR           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOR           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIS            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOS           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MULT            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIV             reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MOD             reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTEIRO        reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTOV          reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHAPAR        reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    VIRG            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHACOL        reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DOISP           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)


state 181

    (86) Argumentos -> Argumentos VIRG . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 192
    EsqVal                         shift and go to state 73

state 182

    (79) Exp -> IDENT ABRECOL Exp FECHACOL .
    (89) EsqVal -> IDENT ABRECOL Exp FECHACOL .

    COND            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    OULOG           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    ELOG            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    OU              reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    E               reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DESLESQ         reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DESLDIR         reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    IGUAL           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DIFER           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MAIORIGUAL      reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MENORIGUAL      reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MAIOR           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MENOR           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MAIS            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MENOS           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MULT            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DIV             reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MOD             reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    PONTEIRO        reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    PONTOV          reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    FECHAPAR        reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    VIRG            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    FECHACOL        reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DOISP           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    ATRIB           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    ATRIBCOMP       reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENOSCOMP       reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MULTCOMP        reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DIVCOMP         reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DECREM          reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    INCREMEN        reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)


state 183

    (48) Exp -> Exp COND Exp DOISP . Exp
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 193
    EsqVal                         shift and go to state 73

state 184

    (77) Exp -> Exp PONTEIRO IDENT ABREPAR . ArgumentosOpcionais FECHAPAR
    (84) ArgumentosOpcionais -> . Argumentos
    (85) ArgumentosOpcionais -> . empty
    (86) Argumentos -> . Argumentos VIRG Exp
    (87) Argumentos -> . Exp
    (90) empty -> .
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHAPAR        reduce using rule 90 (empty -> .)
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84

    Exp                            shift and go to state 145
    ArgumentosOpcionais            shift and go to state 194
    Argumentos                     shift and go to state 143
    empty                          shift and go to state 144
    EsqVal                         shift and go to state 73

state 185

    (89) EsqVal -> IDENT ABRECOL Exp . FECHACOL
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    FECHACOL        shift and go to state 195
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118


state 186

    (75) Exp -> NEW IDENT ABREPAR ArgumentosOpcionais . FECHAPAR

    FECHAPAR        shift and go to state 196


state 187

    (30) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando . ELSE Comando
    (31) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 197
    FECHACV         reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    IF              reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    WHILE           reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    DO              reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    FOR             reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    FOREACH         reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    BREAK           reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    CONTINUE        reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    RETURN          reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    ABRECV          reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    ABREPAR         reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    DECREM          reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    INCREMEN        reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    NAO             reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    COMPLEM         reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    MENOS           reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    MAIS            reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    NEW             reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    IDENT           reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    FLOAT           reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    INT             reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    STRING          reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    NIL             reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    PONTOV          reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)

  ! ELSE            [ reduce using rule 31 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .) ]


state 188

    (32) Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .

    FECHACV         reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    IF              reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    WHILE           reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    DO              reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    FOR             reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    FOREACH         reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    BREAK           reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    CONTINUE        reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    RETURN          reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    ABRECV          reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    ABREPAR         reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    DECREM          reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    INCREMEN        reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    NAO             reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    COMPLEM         reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    MENOS           reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    MAIS            reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    NEW             reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    IDENT           reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    FLOAT           reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    INT             reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    STRING          reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    NIL             reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    PONTOV          reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    ELSE            reduce using rule 32 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)


state 189

    (33) Comando -> DO Comando WHILE ABREPAR ExpOpc . FECHAPAR PONTOV

    FECHAPAR        shift and go to state 198


state 190

    (34) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc . PONTOV ExpOpc FECHAPAR Comando

    PONTOV          shift and go to state 199


state 191

    (35) Comando -> FOREACH IDENT IN IDENT Comando .

    FECHACV         reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    IF              reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    WHILE           reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    DO              reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    FOR             reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    FOREACH         reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    BREAK           reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    CONTINUE        reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    RETURN          reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    ABRECV          reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    ABREPAR         reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    DECREM          reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    INCREMEN        reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    NAO             reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    COMPLEM         reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    MENOS           reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    MAIS            reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    NEW             reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    IDENT           reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    FLOAT           reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    INT             reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    STRING          reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    NIL             reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    PONTOV          reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)
    ELSE            reduce using rule 35 (Comando -> FOREACH IDENT IN IDENT Comando .)


state 192

    (86) Argumentos -> Argumentos VIRG Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 86 (Argumentos -> Argumentos VIRG Exp .)
    FECHAPAR        reduce using rule 86 (Argumentos -> Argumentos VIRG Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118


state 193

    (48) Exp -> Exp COND Exp DOISP Exp .
    (48) Exp -> Exp . COND Exp DOISP Exp
    (49) Exp -> Exp . OULOG Exp
    (50) Exp -> Exp . ELOG Exp
    (51) Exp -> Exp . OU Exp
    (52) Exp -> Exp . E Exp
    (53) Exp -> Exp . DESLESQ Exp
    (54) Exp -> Exp . DESLDIR Exp
    (55) Exp -> Exp . IGUAL Exp
    (56) Exp -> Exp . DIFER Exp
    (57) Exp -> Exp . MAIORIGUAL Exp
    (58) Exp -> Exp . MENORIGUAL Exp
    (59) Exp -> Exp . MAIOR Exp
    (60) Exp -> Exp . MENOR Exp
    (61) Exp -> Exp . MAIS Exp
    (62) Exp -> Exp . MENOS Exp
    (63) Exp -> Exp . MULT Exp
    (64) Exp -> Exp . DIV Exp
    (65) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .)
    FECHAPAR        reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .)
    VIRG            reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .)
    FECHACOL        reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .)
    DOISP           reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .)
    COND            shift and go to state 100
    OULOG           shift and go to state 101
    ELOG            shift and go to state 102
    OU              shift and go to state 103
    E               shift and go to state 104
    DESLESQ         shift and go to state 105
    DESLDIR         shift and go to state 106
    IGUAL           shift and go to state 107
    DIFER           shift and go to state 108
    MAIORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    MAIOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAIS            shift and go to state 113
    MENOS           shift and go to state 114
    MULT            shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    PONTEIRO        shift and go to state 118

  ! COND            [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! OULOG           [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! ELOG            [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! OU              [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! E               [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DESLESQ         [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DESLDIR         [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! IGUAL           [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DIFER           [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MAIOR           [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MENOR           [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MAIS            [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MENOS           [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MULT            [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DIV             [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MOD             [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! PONTEIRO        [ reduce using rule 48 (Exp -> Exp COND Exp DOISP Exp .) ]


state 194

    (77) Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais . FECHAPAR

    FECHAPAR        shift and go to state 200


state 195

    (89) EsqVal -> IDENT ABRECOL Exp FECHACOL .

    COND            reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    OULOG           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    ELOG            reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    OU              reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    E               reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DESLESQ         reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DESLDIR         reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    IGUAL           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DIFER           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MAIORIGUAL      reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENORIGUAL      reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MAIOR           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENOR           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MAIS            reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENOS           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MULT            reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DIV             reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MOD             reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    PONTEIRO        reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    PONTOV          reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    FECHAPAR        reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    VIRG            reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    FECHACOL        reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DOISP           reduce using rule 89 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)


state 196

    (75) Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .

    COND            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OULOG           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    ELOG            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OU              reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    E               reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLESQ         reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLDIR         reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    IGUAL           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIFER           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIORIGUAL      reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENORIGUAL      reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIOR           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOR           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIS            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOS           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MULT            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIV             reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MOD             reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTEIRO        reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTOV          reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHAPAR        reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    VIRG            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHACOL        reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DOISP           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)


state 197

    (30) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE . Comando
    (30) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (32) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (33) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (34) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (35) Comando -> . FOREACH IDENT IN IDENT Comando
    (36) Comando -> . BREAK PONTOV
    (37) Comando -> . CONTINUE PONTOV
    (38) Comando -> . RETURN ExpOpc PONTOV
    (39) Comando -> . ExpOpc PONTOV
    (40) Comando -> . Bloco
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (27) Bloco -> . ABRECV ListaComandos FECHACV
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 59
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    ABRECV          shift and go to state 41
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 61
    Comando                        shift and go to state 201
    Bloco                          shift and go to state 70
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 198

    (33) Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR . PONTOV

    PONTOV          shift and go to state 202


state 199

    (34) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV . ExpOpc FECHAPAR Comando
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    FECHAPAR        reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 203
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 200

    (77) Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .

    COND            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OULOG           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    ELOG            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OU              reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    E               reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLESQ         reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLDIR         reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    IGUAL           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIFER           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIORIGUAL      reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENORIGUAL      reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIOR           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOR           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIS            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOS           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MULT            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIV             reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MOD             reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTEIRO        reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTOV          reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHAPAR        reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    VIRG            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHACOL        reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DOISP           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)


state 201

    (30) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .

    FECHACV         reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    IF              reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    WHILE           reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    DO              reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    FOR             reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    FOREACH         reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    BREAK           reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    CONTINUE        reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    RETURN          reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    ABRECV          reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    ABREPAR         reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    DECREM          reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    INCREMEN        reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    NAO             reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    COMPLEM         reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    MENOS           reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    MAIS            reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    NEW             reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    IDENT           reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    FLOAT           reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    INT             reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    STRING          reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    NIL             reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    PONTOV          reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    ELSE            reduce using rule 30 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)


state 202

    (33) Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .

    FECHACV         reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    IF              reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    WHILE           reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    DO              reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    FOR             reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    FOREACH         reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    BREAK           reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    CONTINUE        reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    RETURN          reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    ABRECV          reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    ABREPAR         reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    DECREM          reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    INCREMEN        reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    NAO             reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    COMPLEM         reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    MENOS           reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    MAIS            reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    NEW             reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    IDENT           reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    FLOAT           reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    INT             reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    STRING          reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    NIL             reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    PONTOV          reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    ELSE            reduce using rule 33 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)


state 203

    (34) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc . FECHAPAR Comando

    FECHAPAR        shift and go to state 204


state 204

    (34) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR . Comando
    (30) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (31) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (32) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (33) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (34) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (35) Comando -> . FOREACH IDENT IN IDENT Comando
    (36) Comando -> . BREAK PONTOV
    (37) Comando -> . CONTINUE PONTOV
    (38) Comando -> . RETURN ExpOpc PONTOV
    (39) Comando -> . ExpOpc PONTOV
    (40) Comando -> . Bloco
    (41) ExpOpc -> . Exp
    (42) ExpOpc -> . empty
    (27) Bloco -> . ABRECV ListaComandos FECHACV
    (43) Exp -> . EsqVal ATRIB Exp
    (44) Exp -> . EsqVal ATRIBCOMP Exp
    (45) Exp -> . EsqVal MENOSCOMP Exp
    (46) Exp -> . EsqVal MULTCOMP Exp
    (47) Exp -> . EsqVal DIVCOMP Exp
    (48) Exp -> . Exp COND Exp DOISP Exp
    (49) Exp -> . Exp OULOG Exp
    (50) Exp -> . Exp ELOG Exp
    (51) Exp -> . Exp OU Exp
    (52) Exp -> . Exp E Exp
    (53) Exp -> . Exp DESLESQ Exp
    (54) Exp -> . Exp DESLDIR Exp
    (55) Exp -> . Exp IGUAL Exp
    (56) Exp -> . Exp DIFER Exp
    (57) Exp -> . Exp MAIORIGUAL Exp
    (58) Exp -> . Exp MENORIGUAL Exp
    (59) Exp -> . Exp MAIOR Exp
    (60) Exp -> . Exp MENOR Exp
    (61) Exp -> . Exp MAIS Exp
    (62) Exp -> . Exp MENOS Exp
    (63) Exp -> . Exp MULT Exp
    (64) Exp -> . Exp DIV Exp
    (65) Exp -> . Exp MOD Exp
    (66) Exp -> . ABREPAR Exp FECHAPAR
    (67) Exp -> . DECREM EsqVal
    (68) Exp -> . INCREMEN EsqVal
    (69) Exp -> . EsqVal DECREM
    (70) Exp -> . EsqVal INCREMEN
    (71) Exp -> . NAO Exp
    (72) Exp -> . COMPLEM Exp
    (73) Exp -> . MENOS Exp
    (74) Exp -> . MAIS Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . STRING
    (83) Exp -> . NIL
    (90) empty -> .
    (88) EsqVal -> . IDENT
    (89) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 59
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    ABRECV          shift and go to state 41
    ABREPAR         shift and go to state 60
    DECREM          shift and go to state 76
    INCREMEN        shift and go to state 77
    NAO             shift and go to state 78
    COMPLEM         shift and go to state 79
    MENOS           shift and go to state 75
    MAIS            shift and go to state 74
    NEW             shift and go to state 80
    IDENT           shift and go to state 66
    FLOAT           shift and go to state 81
    INT             shift and go to state 82
    STRING          shift and go to state 83
    NIL             shift and go to state 84
    PONTOV          reduce using rule 90 (empty -> .)

    ExpOpc                         shift and go to state 61
    Comando                        shift and go to state 205
    Bloco                          shift and go to state 70
    Exp                            shift and go to state 71
    empty                          shift and go to state 72
    EsqVal                         shift and go to state 73

state 205

    (34) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .

    FECHACV         reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    IF              reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    WHILE           reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    DO              reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    FOR             reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    FOREACH         reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    BREAK           reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    CONTINUE        reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    RETURN          reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    ABRECV          reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    ABREPAR         reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    DECREM          reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    INCREMEN        reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    NAO             reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    COMPLEM         reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    MENOS           reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    MAIS            reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    NEW             reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    IDENT           reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    FLOAT           reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    INT             reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    STRING          reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    NIL             reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    PONTOV          reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    ELSE            reduce using rule 34 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 187 resolved as shift
