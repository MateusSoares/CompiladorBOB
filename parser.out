Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ERRO

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> ListaDefinicoes
Rule 2     ListaDefinicoes -> ListaDefinicoes Definicao
Rule 3     ListaDefinicoes -> empty
Rule 4     Definicao -> DefinicaoClasse
Rule 5     Definicao -> DefinicaoFuncao
Rule 6     DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional ABRECV ListaMembros FECHACV
Rule 7     ClasseBaseOpcional -> DOISP IDENT
Rule 8     ClasseBaseOpcional -> empty
Rule 9     ListaMembros -> ListaMembros DefinicaoMembro
Rule 10    ListaMembros -> empty
Rule 11    DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV
Rule 12    DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV
Rule 13    ModificadorOpcional -> STATIC
Rule 14    ModificadorOpcional -> empty
Rule 15    ListaVariaveis -> ListaVariaveis VIRG Variavel
Rule 16    ListaVariaveis -> Variavel
Rule 17    Variavel -> IDENT
Rule 18    Variavel -> IDENT ABRECOL NUMBER FECHACOL
Rule 19    ListaArgsFormaisOpcional -> ListaArgsFormais
Rule 20    ListaArgsFormaisOpcional -> empty
Rule 21    ListaArgsFormais -> ListaArgsFormais VIRG IDENT
Rule 22    ListaArgsFormais -> IDENT
Rule 23    DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco
Rule 24    ClasseEnvolucroOpcional -> IDENT OPESCOPO
Rule 25    ClasseEnvolucroOpcional -> empty
Rule 26    ListaParametrosOpcionais -> ListaArgsFormaisOpcional ListaTemporariosOpcionais
Rule 27    ListaTemporariosOpcionais -> PONTOV ListaArgsFormais
Rule 28    ListaTemporariosOpcionais -> empty
Rule 29    Bloco -> ABRECV ListaComandos FECHACV
Rule 30    ListaComandos -> ListaComandos Comando
Rule 31    ListaComandos -> empty
Rule 32    Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
Rule 33    Comando -> IF ABREPAR ExpOpc FECHAPAR Comando
Rule 34    Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando
Rule 35    Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
Rule 36    Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
Rule 37    Comando -> FOREACH IDENT IN IDENT Comando
Rule 38    Comando -> BREAK PONTOV
Rule 39    Comando -> CONTINUE PONTOV
Rule 40    Comando -> RETURN ExpOpc PONTOV
Rule 41    Comando -> ExpOpc PONTOV
Rule 42    Comando -> Bloco
Rule 43    ExpOpc -> Exp
Rule 44    ExpOpc -> empty
Rule 45    Exp -> Exp VIRG Exp
Rule 46    Exp -> EsqVal ATRIB Exp
Rule 47    Exp -> EsqVal ATRIBCOMP Exp
Rule 48    Exp -> EsqVal MENOSCOMP Exp
Rule 49    Exp -> EsqVal MULTCOMP Exp
Rule 50    Exp -> EsqVal DIVCOMP Exp
Rule 51    Exp -> Exp COND Exp DOISP Exp
Rule 52    Exp -> Exp OULOG Exp
Rule 53    Exp -> Exp ELOG Exp
Rule 54    Exp -> Exp OU Exp
Rule 55    Exp -> Exp E Exp
Rule 56    Exp -> Exp DESLESQ Exp
Rule 57    Exp -> Exp DESLDIR Exp
Rule 58    Exp -> Exp IGUAL Exp
Rule 59    Exp -> Exp DIFER Exp
Rule 60    Exp -> Exp MAIORIGUAL Exp
Rule 61    Exp -> Exp MENORIGUAL Exp
Rule 62    Exp -> Exp MAIOR Exp
Rule 63    Exp -> Exp MENOR Exp
Rule 64    Exp -> Exp MAIS Exp
Rule 65    Exp -> Exp MENOS Exp
Rule 66    Exp -> Exp MULT Exp
Rule 67    Exp -> Exp DIV Exp
Rule 68    Exp -> Exp MOD Exp
Rule 69    Exp -> DECREM EsqVal
Rule 70    Exp -> INCREMEN EsqVal
Rule 71    Exp -> EsqVal DECREM
Rule 72    Exp -> EsqVal INCREMEN
Rule 73    Exp -> NAO Exp
Rule 74    Exp -> COMPLEM Exp
Rule 75    Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
Rule 76    Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR
Rule 77    Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
Rule 78    Exp -> IDENT
Rule 79    Exp -> IDENT ABRECOL Exp FECHACOL
Rule 80    Exp -> FLOAT
Rule 81    Exp -> INT
Rule 82    Exp -> NUMBER
Rule 83    Exp -> STRING
Rule 84    Exp -> NIL
Rule 85    ArgumentosOpcionais -> Argumentos
Rule 86    ArgumentosOpcionais -> empty
Rule 87    Argumentos -> Argumentos VIRG Exp
Rule 88    Argumentos -> Exp
Rule 89    EsqVal -> IDENT
Rule 90    EsqVal -> IDENT ABRECOL Exp FECHACOL
Rule 91    empty -> <empty>

Terminals, with rules where they appear

ABRECOL              : 18 79 90
ABRECV               : 6 29
ABREPAR              : 12 23 32 33 34 35 36 75 76 77
ATRIB                : 46
ATRIBCOMP            : 47
BREAK                : 38
CLASS                : 6
COMPLEM              : 74
COND                 : 51
CONTINUE             : 39
DECREM               : 69 71
DEF                  : 12 23
DESLDIR              : 57
DESLESQ              : 56
DIFER                : 59
DIV                  : 67
DIVCOMP              : 50
DO                   : 35
DOISP                : 7 51
E                    : 55
ELOG                 : 53
ELSE                 : 32
ERRO                 : 
FECHACOL             : 18 79 90
FECHACV              : 6 29
FECHAPAR             : 12 23 32 33 34 35 36 75 76 77
FLOAT                : 80
FOR                  : 36
FOREACH              : 37
IDENT                : 6 7 12 17 18 21 22 23 24 37 37 75 76 77 78 79 89 90
IF                   : 32 33
IGUAL                : 58
IN                   : 37
INCREMEN             : 70 72
INT                  : 81
MAIOR                : 62
MAIORIGUAL           : 60
MAIS                 : 64
MENOR                : 63
MENORIGUAL           : 61
MENOS                : 65
MENOSCOMP            : 48
MOD                  : 68
MULT                 : 66
MULTCOMP             : 49
NAO                  : 73
NEW                  : 75
NIL                  : 84
NUMBER               : 18 82
OPESCOPO             : 24
OU                   : 54
OULOG                : 52
PONTEIRO             : 77
PONTOV               : 11 12 27 35 36 36 38 39 40 41
RETURN               : 40
STATIC               : 13
STRING               : 83
VAR                  : 11
VIRG                 : 15 21 45 87
WHILE                : 34 35
error                : 

Nonterminals, with rules where they appear

Argumentos           : 85 87
ArgumentosOpcionais  : 75 76 77
Bloco                : 23 42
ClasseBaseOpcional   : 6
ClasseEnvolucroOpcional : 23
Comando              : 30 32 32 33 34 35 36 37
Definicao            : 2
DefinicaoClasse      : 4
DefinicaoFuncao      : 5
DefinicaoMembro      : 9
EsqVal               : 46 47 48 49 50 69 70 71 72
Exp                  : 43 45 45 46 47 48 49 50 51 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 73 74 77 79 87 88 90
ExpOpc               : 32 33 34 35 36 36 36 40 41
ListaArgsFormais     : 19 21 27
ListaArgsFormaisOpcional : 12 26
ListaComandos        : 29 30
ListaDefinicoes      : 1 2
ListaMembros         : 6 9
ListaParametrosOpcionais : 23
ListaTemporariosOpcionais : 26
ListaVariaveis       : 11 15
ModificadorOpcional  : 11 12
Programa             : 0
Variavel             : 15 16
empty                : 3 8 10 14 20 25 28 31 44 86

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . ListaDefinicoes
    (2) ListaDefinicoes -> . ListaDefinicoes Definicao
    (3) ListaDefinicoes -> . empty
    (91) empty -> .

    CLASS           reduce using rule 91 (empty -> .)
    DEF             reduce using rule 91 (empty -> .)
    $end            reduce using rule 91 (empty -> .)

    Programa                       shift and go to state 1
    ListaDefinicoes                shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> ListaDefinicoes .
    (2) ListaDefinicoes -> ListaDefinicoes . Definicao
    (4) Definicao -> . DefinicaoClasse
    (5) Definicao -> . DefinicaoFuncao
    (6) DefinicaoClasse -> . CLASS IDENT ClasseBaseOpcional ABRECV ListaMembros FECHACV
    (23) DefinicaoFuncao -> . DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    $end            reduce using rule 1 (Programa -> ListaDefinicoes .)
    CLASS           shift and go to state 7
    DEF             shift and go to state 8

    Definicao                      shift and go to state 4
    DefinicaoClasse                shift and go to state 5
    DefinicaoFuncao                shift and go to state 6

state 3

    (3) ListaDefinicoes -> empty .

    CLASS           reduce using rule 3 (ListaDefinicoes -> empty .)
    DEF             reduce using rule 3 (ListaDefinicoes -> empty .)
    $end            reduce using rule 3 (ListaDefinicoes -> empty .)


state 4

    (2) ListaDefinicoes -> ListaDefinicoes Definicao .

    CLASS           reduce using rule 2 (ListaDefinicoes -> ListaDefinicoes Definicao .)
    DEF             reduce using rule 2 (ListaDefinicoes -> ListaDefinicoes Definicao .)
    $end            reduce using rule 2 (ListaDefinicoes -> ListaDefinicoes Definicao .)


state 5

    (4) Definicao -> DefinicaoClasse .

    CLASS           reduce using rule 4 (Definicao -> DefinicaoClasse .)
    DEF             reduce using rule 4 (Definicao -> DefinicaoClasse .)
    $end            reduce using rule 4 (Definicao -> DefinicaoClasse .)


state 6

    (5) Definicao -> DefinicaoFuncao .

    CLASS           reduce using rule 5 (Definicao -> DefinicaoFuncao .)
    DEF             reduce using rule 5 (Definicao -> DefinicaoFuncao .)
    $end            reduce using rule 5 (Definicao -> DefinicaoFuncao .)


state 7

    (6) DefinicaoClasse -> CLASS . IDENT ClasseBaseOpcional ABRECV ListaMembros FECHACV

    IDENT           shift and go to state 9


state 8

    (23) DefinicaoFuncao -> DEF . ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco
    (24) ClasseEnvolucroOpcional -> . IDENT OPESCOPO
    (25) ClasseEnvolucroOpcional -> . empty
    (91) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 11

  ! IDENT           [ reduce using rule 91 (empty -> .) ]

    ClasseEnvolucroOpcional        shift and go to state 10
    empty                          shift and go to state 12

state 9

    (6) DefinicaoClasse -> CLASS IDENT . ClasseBaseOpcional ABRECV ListaMembros FECHACV
    (7) ClasseBaseOpcional -> . DOISP IDENT
    (8) ClasseBaseOpcional -> . empty
    (91) empty -> .

    DOISP           shift and go to state 14
    ABRECV          reduce using rule 91 (empty -> .)

    ClasseBaseOpcional             shift and go to state 13
    empty                          shift and go to state 15

state 10

    (23) DefinicaoFuncao -> DEF ClasseEnvolucroOpcional . IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    IDENT           shift and go to state 16


state 11

    (24) ClasseEnvolucroOpcional -> IDENT . OPESCOPO

    OPESCOPO        shift and go to state 17


state 12

    (25) ClasseEnvolucroOpcional -> empty .

    IDENT           reduce using rule 25 (ClasseEnvolucroOpcional -> empty .)


state 13

    (6) DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional . ABRECV ListaMembros FECHACV

    ABRECV          shift and go to state 18


state 14

    (7) ClasseBaseOpcional -> DOISP . IDENT

    IDENT           shift and go to state 19


state 15

    (8) ClasseBaseOpcional -> empty .

    ABRECV          reduce using rule 8 (ClasseBaseOpcional -> empty .)


state 16

    (23) DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT . ABREPAR ListaParametrosOpcionais FECHAPAR Bloco

    ABREPAR         shift and go to state 20


state 17

    (24) ClasseEnvolucroOpcional -> IDENT OPESCOPO .

    IDENT           reduce using rule 24 (ClasseEnvolucroOpcional -> IDENT OPESCOPO .)


state 18

    (6) DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional ABRECV . ListaMembros FECHACV
    (9) ListaMembros -> . ListaMembros DefinicaoMembro
    (10) ListaMembros -> . empty
    (91) empty -> .

    FECHACV         reduce using rule 91 (empty -> .)
    STATIC          reduce using rule 91 (empty -> .)
    VAR             reduce using rule 91 (empty -> .)
    DEF             reduce using rule 91 (empty -> .)

    ListaMembros                   shift and go to state 21
    empty                          shift and go to state 22

state 19

    (7) ClasseBaseOpcional -> DOISP IDENT .

    ABRECV          reduce using rule 7 (ClasseBaseOpcional -> DOISP IDENT .)


state 20

    (23) DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR . ListaParametrosOpcionais FECHAPAR Bloco
    (26) ListaParametrosOpcionais -> . ListaArgsFormaisOpcional ListaTemporariosOpcionais
    (19) ListaArgsFormaisOpcional -> . ListaArgsFormais
    (20) ListaArgsFormaisOpcional -> . empty
    (21) ListaArgsFormais -> . ListaArgsFormais VIRG IDENT
    (22) ListaArgsFormais -> . IDENT
    (91) empty -> .

    IDENT           shift and go to state 23
    PONTOV          reduce using rule 91 (empty -> .)
    FECHAPAR        reduce using rule 91 (empty -> .)

    ListaParametrosOpcionais       shift and go to state 24
    ListaArgsFormaisOpcional       shift and go to state 25
    ListaArgsFormais               shift and go to state 26
    empty                          shift and go to state 27

state 21

    (6) DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional ABRECV ListaMembros . FECHACV
    (9) ListaMembros -> ListaMembros . DefinicaoMembro
    (11) DefinicaoMembro -> . ModificadorOpcional VAR ListaVariaveis PONTOV
    (12) DefinicaoMembro -> . ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV
    (13) ModificadorOpcional -> . STATIC
    (14) ModificadorOpcional -> . empty
    (91) empty -> .

    FECHACV         shift and go to state 28
    STATIC          shift and go to state 31
    VAR             reduce using rule 91 (empty -> .)
    DEF             reduce using rule 91 (empty -> .)

    DefinicaoMembro                shift and go to state 29
    ModificadorOpcional            shift and go to state 30
    empty                          shift and go to state 32

state 22

    (10) ListaMembros -> empty .

    FECHACV         reduce using rule 10 (ListaMembros -> empty .)
    STATIC          reduce using rule 10 (ListaMembros -> empty .)
    VAR             reduce using rule 10 (ListaMembros -> empty .)
    DEF             reduce using rule 10 (ListaMembros -> empty .)


state 23

    (22) ListaArgsFormais -> IDENT .

    VIRG            reduce using rule 22 (ListaArgsFormais -> IDENT .)
    PONTOV          reduce using rule 22 (ListaArgsFormais -> IDENT .)
    FECHAPAR        reduce using rule 22 (ListaArgsFormais -> IDENT .)


state 24

    (23) DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais . FECHAPAR Bloco

    FECHAPAR        shift and go to state 33


state 25

    (26) ListaParametrosOpcionais -> ListaArgsFormaisOpcional . ListaTemporariosOpcionais
    (27) ListaTemporariosOpcionais -> . PONTOV ListaArgsFormais
    (28) ListaTemporariosOpcionais -> . empty
    (91) empty -> .

    PONTOV          shift and go to state 35
    FECHAPAR        reduce using rule 91 (empty -> .)

    ListaTemporariosOpcionais      shift and go to state 34
    empty                          shift and go to state 36

state 26

    (19) ListaArgsFormaisOpcional -> ListaArgsFormais .
    (21) ListaArgsFormais -> ListaArgsFormais . VIRG IDENT

    PONTOV          reduce using rule 19 (ListaArgsFormaisOpcional -> ListaArgsFormais .)
    FECHAPAR        reduce using rule 19 (ListaArgsFormaisOpcional -> ListaArgsFormais .)
    VIRG            shift and go to state 37


state 27

    (20) ListaArgsFormaisOpcional -> empty .

    PONTOV          reduce using rule 20 (ListaArgsFormaisOpcional -> empty .)
    FECHAPAR        reduce using rule 20 (ListaArgsFormaisOpcional -> empty .)


state 28

    (6) DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional ABRECV ListaMembros FECHACV .

    CLASS           reduce using rule 6 (DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional ABRECV ListaMembros FECHACV .)
    DEF             reduce using rule 6 (DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional ABRECV ListaMembros FECHACV .)
    $end            reduce using rule 6 (DefinicaoClasse -> CLASS IDENT ClasseBaseOpcional ABRECV ListaMembros FECHACV .)


state 29

    (9) ListaMembros -> ListaMembros DefinicaoMembro .

    FECHACV         reduce using rule 9 (ListaMembros -> ListaMembros DefinicaoMembro .)
    STATIC          reduce using rule 9 (ListaMembros -> ListaMembros DefinicaoMembro .)
    VAR             reduce using rule 9 (ListaMembros -> ListaMembros DefinicaoMembro .)
    DEF             reduce using rule 9 (ListaMembros -> ListaMembros DefinicaoMembro .)


state 30

    (11) DefinicaoMembro -> ModificadorOpcional . VAR ListaVariaveis PONTOV
    (12) DefinicaoMembro -> ModificadorOpcional . DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV

    VAR             shift and go to state 38
    DEF             shift and go to state 39


state 31

    (13) ModificadorOpcional -> STATIC .

    VAR             reduce using rule 13 (ModificadorOpcional -> STATIC .)
    DEF             reduce using rule 13 (ModificadorOpcional -> STATIC .)


state 32

    (14) ModificadorOpcional -> empty .

    VAR             reduce using rule 14 (ModificadorOpcional -> empty .)
    DEF             reduce using rule 14 (ModificadorOpcional -> empty .)


state 33

    (23) DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR . Bloco
    (29) Bloco -> . ABRECV ListaComandos FECHACV

    ABRECV          shift and go to state 41

    Bloco                          shift and go to state 40

state 34

    (26) ListaParametrosOpcionais -> ListaArgsFormaisOpcional ListaTemporariosOpcionais .

    FECHAPAR        reduce using rule 26 (ListaParametrosOpcionais -> ListaArgsFormaisOpcional ListaTemporariosOpcionais .)


state 35

    (27) ListaTemporariosOpcionais -> PONTOV . ListaArgsFormais
    (21) ListaArgsFormais -> . ListaArgsFormais VIRG IDENT
    (22) ListaArgsFormais -> . IDENT

    IDENT           shift and go to state 23

    ListaArgsFormais               shift and go to state 42

state 36

    (28) ListaTemporariosOpcionais -> empty .

    FECHAPAR        reduce using rule 28 (ListaTemporariosOpcionais -> empty .)


state 37

    (21) ListaArgsFormais -> ListaArgsFormais VIRG . IDENT

    IDENT           shift and go to state 43


state 38

    (11) DefinicaoMembro -> ModificadorOpcional VAR . ListaVariaveis PONTOV
    (15) ListaVariaveis -> . ListaVariaveis VIRG Variavel
    (16) ListaVariaveis -> . Variavel
    (17) Variavel -> . IDENT
    (18) Variavel -> . IDENT ABRECOL NUMBER FECHACOL

    IDENT           shift and go to state 46

    ListaVariaveis                 shift and go to state 44
    Variavel                       shift and go to state 45

state 39

    (12) DefinicaoMembro -> ModificadorOpcional DEF . IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV

    IDENT           shift and go to state 47


state 40

    (23) DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .

    CLASS           reduce using rule 23 (DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)
    DEF             reduce using rule 23 (DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)
    $end            reduce using rule 23 (DefinicaoFuncao -> DEF ClasseEnvolucroOpcional IDENT ABREPAR ListaParametrosOpcionais FECHAPAR Bloco .)


state 41

    (29) Bloco -> ABRECV . ListaComandos FECHACV
    (30) ListaComandos -> . ListaComandos Comando
    (31) ListaComandos -> . empty
    (91) empty -> .

    FECHACV         reduce using rule 91 (empty -> .)
    IF              reduce using rule 91 (empty -> .)
    WHILE           reduce using rule 91 (empty -> .)
    DO              reduce using rule 91 (empty -> .)
    FOR             reduce using rule 91 (empty -> .)
    FOREACH         reduce using rule 91 (empty -> .)
    BREAK           reduce using rule 91 (empty -> .)
    CONTINUE        reduce using rule 91 (empty -> .)
    RETURN          reduce using rule 91 (empty -> .)
    ABRECV          reduce using rule 91 (empty -> .)
    DECREM          reduce using rule 91 (empty -> .)
    INCREMEN        reduce using rule 91 (empty -> .)
    NAO             reduce using rule 91 (empty -> .)
    COMPLEM         reduce using rule 91 (empty -> .)
    NEW             reduce using rule 91 (empty -> .)
    IDENT           reduce using rule 91 (empty -> .)
    FLOAT           reduce using rule 91 (empty -> .)
    INT             reduce using rule 91 (empty -> .)
    NUMBER          reduce using rule 91 (empty -> .)
    STRING          reduce using rule 91 (empty -> .)
    NIL             reduce using rule 91 (empty -> .)
    PONTOV          reduce using rule 91 (empty -> .)

    ListaComandos                  shift and go to state 48
    empty                          shift and go to state 49

state 42

    (27) ListaTemporariosOpcionais -> PONTOV ListaArgsFormais .
    (21) ListaArgsFormais -> ListaArgsFormais . VIRG IDENT

    FECHAPAR        reduce using rule 27 (ListaTemporariosOpcionais -> PONTOV ListaArgsFormais .)
    VIRG            shift and go to state 37


state 43

    (21) ListaArgsFormais -> ListaArgsFormais VIRG IDENT .

    VIRG            reduce using rule 21 (ListaArgsFormais -> ListaArgsFormais VIRG IDENT .)
    PONTOV          reduce using rule 21 (ListaArgsFormais -> ListaArgsFormais VIRG IDENT .)
    FECHAPAR        reduce using rule 21 (ListaArgsFormais -> ListaArgsFormais VIRG IDENT .)


state 44

    (11) DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis . PONTOV
    (15) ListaVariaveis -> ListaVariaveis . VIRG Variavel

    PONTOV          shift and go to state 50
    VIRG            shift and go to state 51


state 45

    (16) ListaVariaveis -> Variavel .

    PONTOV          reduce using rule 16 (ListaVariaveis -> Variavel .)
    VIRG            reduce using rule 16 (ListaVariaveis -> Variavel .)


state 46

    (17) Variavel -> IDENT .
    (18) Variavel -> IDENT . ABRECOL NUMBER FECHACOL

    PONTOV          reduce using rule 17 (Variavel -> IDENT .)
    VIRG            reduce using rule 17 (Variavel -> IDENT .)
    ABRECOL         shift and go to state 52


state 47

    (12) DefinicaoMembro -> ModificadorOpcional DEF IDENT . ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV

    ABREPAR         shift and go to state 53


state 48

    (29) Bloco -> ABRECV ListaComandos . FECHACV
    (30) ListaComandos -> ListaComandos . Comando
    (32) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (34) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (35) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (36) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (37) Comando -> . FOREACH IDENT IN IDENT Comando
    (38) Comando -> . BREAK PONTOV
    (39) Comando -> . CONTINUE PONTOV
    (40) Comando -> . RETURN ExpOpc PONTOV
    (41) Comando -> . ExpOpc PONTOV
    (42) Comando -> . Bloco
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (29) Bloco -> . ABRECV ListaComandos FECHACV
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHACV         shift and go to state 54
    IF              shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 59
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    BREAK           shift and go to state 63
    CONTINUE        shift and go to state 64
    RETURN          shift and go to state 65
    ABRECV          shift and go to state 41
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    Comando                        shift and go to state 55
    ExpOpc                         shift and go to state 57
    Bloco                          shift and go to state 66
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 49

    (31) ListaComandos -> empty .

    FECHACV         reduce using rule 31 (ListaComandos -> empty .)
    IF              reduce using rule 31 (ListaComandos -> empty .)
    WHILE           reduce using rule 31 (ListaComandos -> empty .)
    DO              reduce using rule 31 (ListaComandos -> empty .)
    FOR             reduce using rule 31 (ListaComandos -> empty .)
    FOREACH         reduce using rule 31 (ListaComandos -> empty .)
    BREAK           reduce using rule 31 (ListaComandos -> empty .)
    CONTINUE        reduce using rule 31 (ListaComandos -> empty .)
    RETURN          reduce using rule 31 (ListaComandos -> empty .)
    ABRECV          reduce using rule 31 (ListaComandos -> empty .)
    DECREM          reduce using rule 31 (ListaComandos -> empty .)
    INCREMEN        reduce using rule 31 (ListaComandos -> empty .)
    NAO             reduce using rule 31 (ListaComandos -> empty .)
    COMPLEM         reduce using rule 31 (ListaComandos -> empty .)
    NEW             reduce using rule 31 (ListaComandos -> empty .)
    IDENT           reduce using rule 31 (ListaComandos -> empty .)
    FLOAT           reduce using rule 31 (ListaComandos -> empty .)
    INT             reduce using rule 31 (ListaComandos -> empty .)
    NUMBER          reduce using rule 31 (ListaComandos -> empty .)
    STRING          reduce using rule 31 (ListaComandos -> empty .)
    NIL             reduce using rule 31 (ListaComandos -> empty .)
    PONTOV          reduce using rule 31 (ListaComandos -> empty .)


state 50

    (11) DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .

    FECHACV         reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)
    STATIC          reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)
    VAR             reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)
    DEF             reduce using rule 11 (DefinicaoMembro -> ModificadorOpcional VAR ListaVariaveis PONTOV .)


state 51

    (15) ListaVariaveis -> ListaVariaveis VIRG . Variavel
    (17) Variavel -> . IDENT
    (18) Variavel -> . IDENT ABRECOL NUMBER FECHACOL

    IDENT           shift and go to state 46

    Variavel                       shift and go to state 80

state 52

    (18) Variavel -> IDENT ABRECOL . NUMBER FECHACOL

    NUMBER          shift and go to state 81


state 53

    (12) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR . ListaArgsFormaisOpcional FECHAPAR PONTOV
    (19) ListaArgsFormaisOpcional -> . ListaArgsFormais
    (20) ListaArgsFormaisOpcional -> . empty
    (21) ListaArgsFormais -> . ListaArgsFormais VIRG IDENT
    (22) ListaArgsFormais -> . IDENT
    (91) empty -> .

    IDENT           shift and go to state 23
    FECHAPAR        reduce using rule 91 (empty -> .)

    ListaArgsFormaisOpcional       shift and go to state 82
    ListaArgsFormais               shift and go to state 26
    empty                          shift and go to state 27

state 54

    (29) Bloco -> ABRECV ListaComandos FECHACV .

    CLASS           reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    DEF             reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    $end            reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    FECHACV         reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    IF              reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    WHILE           reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    DO              reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    FOR             reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    FOREACH         reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    BREAK           reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    CONTINUE        reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    RETURN          reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    ABRECV          reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    DECREM          reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    INCREMEN        reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    NAO             reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    COMPLEM         reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    NEW             reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    IDENT           reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    FLOAT           reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    INT             reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    NUMBER          reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    STRING          reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    NIL             reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    PONTOV          reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)
    ELSE            reduce using rule 29 (Bloco -> ABRECV ListaComandos FECHACV .)


state 55

    (30) ListaComandos -> ListaComandos Comando .

    FECHACV         reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    IF              reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    WHILE           reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    DO              reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    FOR             reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    FOREACH         reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    BREAK           reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    CONTINUE        reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    RETURN          reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    ABRECV          reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    DECREM          reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    INCREMEN        reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    NAO             reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    COMPLEM         reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    NEW             reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    IDENT           reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    FLOAT           reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    INT             reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    NUMBER          reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    STRING          reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    NIL             reduce using rule 30 (ListaComandos -> ListaComandos Comando .)
    PONTOV          reduce using rule 30 (ListaComandos -> ListaComandos Comando .)


state 56

    (32) Comando -> IF . ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> IF . ABREPAR ExpOpc FECHAPAR Comando

    ABREPAR         shift and go to state 83


state 57

    (41) Comando -> ExpOpc . PONTOV

    PONTOV          shift and go to state 84


state 58

    (34) Comando -> WHILE . ABREPAR ExpOpc FECHAPAR Comando

    ABREPAR         shift and go to state 85


state 59

    (35) Comando -> DO . Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (32) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (34) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (35) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (36) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (37) Comando -> . FOREACH IDENT IN IDENT Comando
    (38) Comando -> . BREAK PONTOV
    (39) Comando -> . CONTINUE PONTOV
    (40) Comando -> . RETURN ExpOpc PONTOV
    (41) Comando -> . ExpOpc PONTOV
    (42) Comando -> . Bloco
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (29) Bloco -> . ABRECV ListaComandos FECHACV
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 59
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    BREAK           shift and go to state 63
    CONTINUE        shift and go to state 64
    RETURN          shift and go to state 65
    ABRECV          shift and go to state 41
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    Comando                        shift and go to state 86
    ExpOpc                         shift and go to state 57
    Bloco                          shift and go to state 66
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 60

    (36) Comando -> FOR . ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando

    ABREPAR         shift and go to state 87


state 61

    (37) Comando -> FOREACH . IDENT IN IDENT Comando

    IDENT           shift and go to state 88


state 62

    (76) Exp -> IDENT . ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> IDENT .
    (79) Exp -> IDENT . ABRECOL Exp FECHACOL
    (89) EsqVal -> IDENT .
    (90) EsqVal -> IDENT . ABRECOL Exp FECHACOL

    ABREPAR         shift and go to state 89
    VIRG            reduce using rule 78 (Exp -> IDENT .)
    COND            reduce using rule 78 (Exp -> IDENT .)
    OULOG           reduce using rule 78 (Exp -> IDENT .)
    ELOG            reduce using rule 78 (Exp -> IDENT .)
    OU              reduce using rule 78 (Exp -> IDENT .)
    E               reduce using rule 78 (Exp -> IDENT .)
    DESLESQ         reduce using rule 78 (Exp -> IDENT .)
    DESLDIR         reduce using rule 78 (Exp -> IDENT .)
    IGUAL           reduce using rule 78 (Exp -> IDENT .)
    DIFER           reduce using rule 78 (Exp -> IDENT .)
    MAIORIGUAL      reduce using rule 78 (Exp -> IDENT .)
    MENORIGUAL      reduce using rule 78 (Exp -> IDENT .)
    MAIOR           reduce using rule 78 (Exp -> IDENT .)
    MENOR           reduce using rule 78 (Exp -> IDENT .)
    MAIS            reduce using rule 78 (Exp -> IDENT .)
    MENOS           reduce using rule 78 (Exp -> IDENT .)
    MULT            reduce using rule 78 (Exp -> IDENT .)
    DIV             reduce using rule 78 (Exp -> IDENT .)
    MOD             reduce using rule 78 (Exp -> IDENT .)
    PONTEIRO        reduce using rule 78 (Exp -> IDENT .)
    PONTOV          reduce using rule 78 (Exp -> IDENT .)
    FECHAPAR        reduce using rule 78 (Exp -> IDENT .)
    FECHACOL        reduce using rule 78 (Exp -> IDENT .)
    DOISP           reduce using rule 78 (Exp -> IDENT .)
    ABRECOL         shift and go to state 90
    ATRIB           reduce using rule 89 (EsqVal -> IDENT .)
    ATRIBCOMP       reduce using rule 89 (EsqVal -> IDENT .)
    MENOSCOMP       reduce using rule 89 (EsqVal -> IDENT .)
    MULTCOMP        reduce using rule 89 (EsqVal -> IDENT .)
    DIVCOMP         reduce using rule 89 (EsqVal -> IDENT .)
    DECREM          reduce using rule 89 (EsqVal -> IDENT .)
    INCREMEN        reduce using rule 89 (EsqVal -> IDENT .)


state 63

    (38) Comando -> BREAK . PONTOV

    PONTOV          shift and go to state 91


state 64

    (39) Comando -> CONTINUE . PONTOV

    PONTOV          shift and go to state 92


state 65

    (40) Comando -> RETURN . ExpOpc PONTOV
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 93
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 66

    (42) Comando -> Bloco .

    FECHACV         reduce using rule 42 (Comando -> Bloco .)
    IF              reduce using rule 42 (Comando -> Bloco .)
    WHILE           reduce using rule 42 (Comando -> Bloco .)
    DO              reduce using rule 42 (Comando -> Bloco .)
    FOR             reduce using rule 42 (Comando -> Bloco .)
    FOREACH         reduce using rule 42 (Comando -> Bloco .)
    BREAK           reduce using rule 42 (Comando -> Bloco .)
    CONTINUE        reduce using rule 42 (Comando -> Bloco .)
    RETURN          reduce using rule 42 (Comando -> Bloco .)
    ABRECV          reduce using rule 42 (Comando -> Bloco .)
    DECREM          reduce using rule 42 (Comando -> Bloco .)
    INCREMEN        reduce using rule 42 (Comando -> Bloco .)
    NAO             reduce using rule 42 (Comando -> Bloco .)
    COMPLEM         reduce using rule 42 (Comando -> Bloco .)
    NEW             reduce using rule 42 (Comando -> Bloco .)
    IDENT           reduce using rule 42 (Comando -> Bloco .)
    FLOAT           reduce using rule 42 (Comando -> Bloco .)
    INT             reduce using rule 42 (Comando -> Bloco .)
    NUMBER          reduce using rule 42 (Comando -> Bloco .)
    STRING          reduce using rule 42 (Comando -> Bloco .)
    NIL             reduce using rule 42 (Comando -> Bloco .)
    PONTOV          reduce using rule 42 (Comando -> Bloco .)
    ELSE            reduce using rule 42 (Comando -> Bloco .)


state 67

    (43) ExpOpc -> Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    PONTOV          reduce using rule 43 (ExpOpc -> Exp .)
    FECHAPAR        reduce using rule 43 (ExpOpc -> Exp .)
    VIRG            shift and go to state 94
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113


state 68

    (44) ExpOpc -> empty .

    PONTOV          reduce using rule 44 (ExpOpc -> empty .)
    FECHAPAR        reduce using rule 44 (ExpOpc -> empty .)


state 69

    (46) Exp -> EsqVal . ATRIB Exp
    (47) Exp -> EsqVal . ATRIBCOMP Exp
    (48) Exp -> EsqVal . MENOSCOMP Exp
    (49) Exp -> EsqVal . MULTCOMP Exp
    (50) Exp -> EsqVal . DIVCOMP Exp
    (71) Exp -> EsqVal . DECREM
    (72) Exp -> EsqVal . INCREMEN

    ATRIB           shift and go to state 114
    ATRIBCOMP       shift and go to state 115
    MENOSCOMP       shift and go to state 116
    MULTCOMP        shift and go to state 117
    DIVCOMP         shift and go to state 118
    DECREM          shift and go to state 119
    INCREMEN        shift and go to state 120


state 70

    (69) Exp -> DECREM . EsqVal
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IDENT           shift and go to state 122

    EsqVal                         shift and go to state 121

state 71

    (70) Exp -> INCREMEN . EsqVal
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IDENT           shift and go to state 122

    EsqVal                         shift and go to state 123

state 72

    (73) Exp -> NAO . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 124
    EsqVal                         shift and go to state 69

state 73

    (74) Exp -> COMPLEM . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 125
    EsqVal                         shift and go to state 69

state 74

    (75) Exp -> NEW . IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    IDENT           shift and go to state 126


state 75

    (80) Exp -> FLOAT .

    VIRG            reduce using rule 80 (Exp -> FLOAT .)
    COND            reduce using rule 80 (Exp -> FLOAT .)
    OULOG           reduce using rule 80 (Exp -> FLOAT .)
    ELOG            reduce using rule 80 (Exp -> FLOAT .)
    OU              reduce using rule 80 (Exp -> FLOAT .)
    E               reduce using rule 80 (Exp -> FLOAT .)
    DESLESQ         reduce using rule 80 (Exp -> FLOAT .)
    DESLDIR         reduce using rule 80 (Exp -> FLOAT .)
    IGUAL           reduce using rule 80 (Exp -> FLOAT .)
    DIFER           reduce using rule 80 (Exp -> FLOAT .)
    MAIORIGUAL      reduce using rule 80 (Exp -> FLOAT .)
    MENORIGUAL      reduce using rule 80 (Exp -> FLOAT .)
    MAIOR           reduce using rule 80 (Exp -> FLOAT .)
    MENOR           reduce using rule 80 (Exp -> FLOAT .)
    MAIS            reduce using rule 80 (Exp -> FLOAT .)
    MENOS           reduce using rule 80 (Exp -> FLOAT .)
    MULT            reduce using rule 80 (Exp -> FLOAT .)
    DIV             reduce using rule 80 (Exp -> FLOAT .)
    MOD             reduce using rule 80 (Exp -> FLOAT .)
    PONTEIRO        reduce using rule 80 (Exp -> FLOAT .)
    PONTOV          reduce using rule 80 (Exp -> FLOAT .)
    FECHAPAR        reduce using rule 80 (Exp -> FLOAT .)
    FECHACOL        reduce using rule 80 (Exp -> FLOAT .)
    DOISP           reduce using rule 80 (Exp -> FLOAT .)


state 76

    (81) Exp -> INT .

    VIRG            reduce using rule 81 (Exp -> INT .)
    COND            reduce using rule 81 (Exp -> INT .)
    OULOG           reduce using rule 81 (Exp -> INT .)
    ELOG            reduce using rule 81 (Exp -> INT .)
    OU              reduce using rule 81 (Exp -> INT .)
    E               reduce using rule 81 (Exp -> INT .)
    DESLESQ         reduce using rule 81 (Exp -> INT .)
    DESLDIR         reduce using rule 81 (Exp -> INT .)
    IGUAL           reduce using rule 81 (Exp -> INT .)
    DIFER           reduce using rule 81 (Exp -> INT .)
    MAIORIGUAL      reduce using rule 81 (Exp -> INT .)
    MENORIGUAL      reduce using rule 81 (Exp -> INT .)
    MAIOR           reduce using rule 81 (Exp -> INT .)
    MENOR           reduce using rule 81 (Exp -> INT .)
    MAIS            reduce using rule 81 (Exp -> INT .)
    MENOS           reduce using rule 81 (Exp -> INT .)
    MULT            reduce using rule 81 (Exp -> INT .)
    DIV             reduce using rule 81 (Exp -> INT .)
    MOD             reduce using rule 81 (Exp -> INT .)
    PONTEIRO        reduce using rule 81 (Exp -> INT .)
    PONTOV          reduce using rule 81 (Exp -> INT .)
    FECHAPAR        reduce using rule 81 (Exp -> INT .)
    FECHACOL        reduce using rule 81 (Exp -> INT .)
    DOISP           reduce using rule 81 (Exp -> INT .)


state 77

    (82) Exp -> NUMBER .

    VIRG            reduce using rule 82 (Exp -> NUMBER .)
    COND            reduce using rule 82 (Exp -> NUMBER .)
    OULOG           reduce using rule 82 (Exp -> NUMBER .)
    ELOG            reduce using rule 82 (Exp -> NUMBER .)
    OU              reduce using rule 82 (Exp -> NUMBER .)
    E               reduce using rule 82 (Exp -> NUMBER .)
    DESLESQ         reduce using rule 82 (Exp -> NUMBER .)
    DESLDIR         reduce using rule 82 (Exp -> NUMBER .)
    IGUAL           reduce using rule 82 (Exp -> NUMBER .)
    DIFER           reduce using rule 82 (Exp -> NUMBER .)
    MAIORIGUAL      reduce using rule 82 (Exp -> NUMBER .)
    MENORIGUAL      reduce using rule 82 (Exp -> NUMBER .)
    MAIOR           reduce using rule 82 (Exp -> NUMBER .)
    MENOR           reduce using rule 82 (Exp -> NUMBER .)
    MAIS            reduce using rule 82 (Exp -> NUMBER .)
    MENOS           reduce using rule 82 (Exp -> NUMBER .)
    MULT            reduce using rule 82 (Exp -> NUMBER .)
    DIV             reduce using rule 82 (Exp -> NUMBER .)
    MOD             reduce using rule 82 (Exp -> NUMBER .)
    PONTEIRO        reduce using rule 82 (Exp -> NUMBER .)
    PONTOV          reduce using rule 82 (Exp -> NUMBER .)
    FECHAPAR        reduce using rule 82 (Exp -> NUMBER .)
    FECHACOL        reduce using rule 82 (Exp -> NUMBER .)
    DOISP           reduce using rule 82 (Exp -> NUMBER .)


state 78

    (83) Exp -> STRING .

    VIRG            reduce using rule 83 (Exp -> STRING .)
    COND            reduce using rule 83 (Exp -> STRING .)
    OULOG           reduce using rule 83 (Exp -> STRING .)
    ELOG            reduce using rule 83 (Exp -> STRING .)
    OU              reduce using rule 83 (Exp -> STRING .)
    E               reduce using rule 83 (Exp -> STRING .)
    DESLESQ         reduce using rule 83 (Exp -> STRING .)
    DESLDIR         reduce using rule 83 (Exp -> STRING .)
    IGUAL           reduce using rule 83 (Exp -> STRING .)
    DIFER           reduce using rule 83 (Exp -> STRING .)
    MAIORIGUAL      reduce using rule 83 (Exp -> STRING .)
    MENORIGUAL      reduce using rule 83 (Exp -> STRING .)
    MAIOR           reduce using rule 83 (Exp -> STRING .)
    MENOR           reduce using rule 83 (Exp -> STRING .)
    MAIS            reduce using rule 83 (Exp -> STRING .)
    MENOS           reduce using rule 83 (Exp -> STRING .)
    MULT            reduce using rule 83 (Exp -> STRING .)
    DIV             reduce using rule 83 (Exp -> STRING .)
    MOD             reduce using rule 83 (Exp -> STRING .)
    PONTEIRO        reduce using rule 83 (Exp -> STRING .)
    PONTOV          reduce using rule 83 (Exp -> STRING .)
    FECHAPAR        reduce using rule 83 (Exp -> STRING .)
    FECHACOL        reduce using rule 83 (Exp -> STRING .)
    DOISP           reduce using rule 83 (Exp -> STRING .)


state 79

    (84) Exp -> NIL .

    VIRG            reduce using rule 84 (Exp -> NIL .)
    COND            reduce using rule 84 (Exp -> NIL .)
    OULOG           reduce using rule 84 (Exp -> NIL .)
    ELOG            reduce using rule 84 (Exp -> NIL .)
    OU              reduce using rule 84 (Exp -> NIL .)
    E               reduce using rule 84 (Exp -> NIL .)
    DESLESQ         reduce using rule 84 (Exp -> NIL .)
    DESLDIR         reduce using rule 84 (Exp -> NIL .)
    IGUAL           reduce using rule 84 (Exp -> NIL .)
    DIFER           reduce using rule 84 (Exp -> NIL .)
    MAIORIGUAL      reduce using rule 84 (Exp -> NIL .)
    MENORIGUAL      reduce using rule 84 (Exp -> NIL .)
    MAIOR           reduce using rule 84 (Exp -> NIL .)
    MENOR           reduce using rule 84 (Exp -> NIL .)
    MAIS            reduce using rule 84 (Exp -> NIL .)
    MENOS           reduce using rule 84 (Exp -> NIL .)
    MULT            reduce using rule 84 (Exp -> NIL .)
    DIV             reduce using rule 84 (Exp -> NIL .)
    MOD             reduce using rule 84 (Exp -> NIL .)
    PONTEIRO        reduce using rule 84 (Exp -> NIL .)
    PONTOV          reduce using rule 84 (Exp -> NIL .)
    FECHAPAR        reduce using rule 84 (Exp -> NIL .)
    FECHACOL        reduce using rule 84 (Exp -> NIL .)
    DOISP           reduce using rule 84 (Exp -> NIL .)


state 80

    (15) ListaVariaveis -> ListaVariaveis VIRG Variavel .

    PONTOV          reduce using rule 15 (ListaVariaveis -> ListaVariaveis VIRG Variavel .)
    VIRG            reduce using rule 15 (ListaVariaveis -> ListaVariaveis VIRG Variavel .)


state 81

    (18) Variavel -> IDENT ABRECOL NUMBER . FECHACOL

    FECHACOL        shift and go to state 127


state 82

    (12) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional . FECHAPAR PONTOV

    FECHAPAR        shift and go to state 128


state 83

    (32) Comando -> IF ABREPAR . ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> IF ABREPAR . ExpOpc FECHAPAR Comando
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    FECHAPAR        reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 129
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 84

    (41) Comando -> ExpOpc PONTOV .

    FECHACV         reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    IF              reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    WHILE           reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    DO              reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    FOR             reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    FOREACH         reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    BREAK           reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    CONTINUE        reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    RETURN          reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    ABRECV          reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    DECREM          reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    INCREMEN        reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    NAO             reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    COMPLEM         reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    NEW             reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    IDENT           reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    FLOAT           reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    INT             reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    NUMBER          reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    STRING          reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    NIL             reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    PONTOV          reduce using rule 41 (Comando -> ExpOpc PONTOV .)
    ELSE            reduce using rule 41 (Comando -> ExpOpc PONTOV .)


state 85

    (34) Comando -> WHILE ABREPAR . ExpOpc FECHAPAR Comando
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    FECHAPAR        reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 130
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 86

    (35) Comando -> DO Comando . WHILE ABREPAR ExpOpc FECHAPAR PONTOV

    WHILE           shift and go to state 131


state 87

    (36) Comando -> FOR ABREPAR . ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 132
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 88

    (37) Comando -> FOREACH IDENT . IN IDENT Comando

    IN              shift and go to state 133


state 89

    (76) Exp -> IDENT ABREPAR . ArgumentosOpcionais FECHAPAR
    (85) ArgumentosOpcionais -> . Argumentos
    (86) ArgumentosOpcionais -> . empty
    (87) Argumentos -> . Argumentos VIRG Exp
    (88) Argumentos -> . Exp
    (91) empty -> .
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHAPAR        reduce using rule 91 (empty -> .)
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    ArgumentosOpcionais            shift and go to state 134
    Argumentos                     shift and go to state 135
    empty                          shift and go to state 136
    Exp                            shift and go to state 137
    EsqVal                         shift and go to state 69

state 90

    (79) Exp -> IDENT ABRECOL . Exp FECHACOL
    (90) EsqVal -> IDENT ABRECOL . Exp FECHACOL
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 138
    EsqVal                         shift and go to state 69

state 91

    (38) Comando -> BREAK PONTOV .

    FECHACV         reduce using rule 38 (Comando -> BREAK PONTOV .)
    IF              reduce using rule 38 (Comando -> BREAK PONTOV .)
    WHILE           reduce using rule 38 (Comando -> BREAK PONTOV .)
    DO              reduce using rule 38 (Comando -> BREAK PONTOV .)
    FOR             reduce using rule 38 (Comando -> BREAK PONTOV .)
    FOREACH         reduce using rule 38 (Comando -> BREAK PONTOV .)
    BREAK           reduce using rule 38 (Comando -> BREAK PONTOV .)
    CONTINUE        reduce using rule 38 (Comando -> BREAK PONTOV .)
    RETURN          reduce using rule 38 (Comando -> BREAK PONTOV .)
    ABRECV          reduce using rule 38 (Comando -> BREAK PONTOV .)
    DECREM          reduce using rule 38 (Comando -> BREAK PONTOV .)
    INCREMEN        reduce using rule 38 (Comando -> BREAK PONTOV .)
    NAO             reduce using rule 38 (Comando -> BREAK PONTOV .)
    COMPLEM         reduce using rule 38 (Comando -> BREAK PONTOV .)
    NEW             reduce using rule 38 (Comando -> BREAK PONTOV .)
    IDENT           reduce using rule 38 (Comando -> BREAK PONTOV .)
    FLOAT           reduce using rule 38 (Comando -> BREAK PONTOV .)
    INT             reduce using rule 38 (Comando -> BREAK PONTOV .)
    NUMBER          reduce using rule 38 (Comando -> BREAK PONTOV .)
    STRING          reduce using rule 38 (Comando -> BREAK PONTOV .)
    NIL             reduce using rule 38 (Comando -> BREAK PONTOV .)
    PONTOV          reduce using rule 38 (Comando -> BREAK PONTOV .)
    ELSE            reduce using rule 38 (Comando -> BREAK PONTOV .)


state 92

    (39) Comando -> CONTINUE PONTOV .

    FECHACV         reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    IF              reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    WHILE           reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    DO              reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    FOR             reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    FOREACH         reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    BREAK           reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    CONTINUE        reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    RETURN          reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    ABRECV          reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    DECREM          reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    INCREMEN        reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    NAO             reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    COMPLEM         reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    NEW             reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    IDENT           reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    FLOAT           reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    INT             reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    NUMBER          reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    STRING          reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    NIL             reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    PONTOV          reduce using rule 39 (Comando -> CONTINUE PONTOV .)
    ELSE            reduce using rule 39 (Comando -> CONTINUE PONTOV .)


state 93

    (40) Comando -> RETURN ExpOpc . PONTOV

    PONTOV          shift and go to state 139


state 94

    (45) Exp -> Exp VIRG . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 140
    EsqVal                         shift and go to state 69

state 95

    (51) Exp -> Exp COND . Exp DOISP Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 141
    EsqVal                         shift and go to state 69

state 96

    (52) Exp -> Exp OULOG . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 142
    EsqVal                         shift and go to state 69

state 97

    (53) Exp -> Exp ELOG . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 143
    EsqVal                         shift and go to state 69

state 98

    (54) Exp -> Exp OU . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 144
    EsqVal                         shift and go to state 69

state 99

    (55) Exp -> Exp E . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 145
    EsqVal                         shift and go to state 69

state 100

    (56) Exp -> Exp DESLESQ . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 146
    EsqVal                         shift and go to state 69

state 101

    (57) Exp -> Exp DESLDIR . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 147
    EsqVal                         shift and go to state 69

state 102

    (58) Exp -> Exp IGUAL . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 148
    EsqVal                         shift and go to state 69

state 103

    (59) Exp -> Exp DIFER . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 149
    EsqVal                         shift and go to state 69

state 104

    (60) Exp -> Exp MAIORIGUAL . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 150
    EsqVal                         shift and go to state 69

state 105

    (61) Exp -> Exp MENORIGUAL . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 151
    EsqVal                         shift and go to state 69

state 106

    (62) Exp -> Exp MAIOR . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 152
    EsqVal                         shift and go to state 69

state 107

    (63) Exp -> Exp MENOR . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 153
    EsqVal                         shift and go to state 69

state 108

    (64) Exp -> Exp MAIS . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 154
    EsqVal                         shift and go to state 69

state 109

    (65) Exp -> Exp MENOS . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 155
    EsqVal                         shift and go to state 69

state 110

    (66) Exp -> Exp MULT . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 156
    EsqVal                         shift and go to state 69

state 111

    (67) Exp -> Exp DIV . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 157
    EsqVal                         shift and go to state 69

state 112

    (68) Exp -> Exp MOD . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 158
    EsqVal                         shift and go to state 69

state 113

    (77) Exp -> Exp PONTEIRO . IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    IDENT           shift and go to state 159


state 114

    (46) Exp -> EsqVal ATRIB . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    EsqVal                         shift and go to state 69
    Exp                            shift and go to state 160

state 115

    (47) Exp -> EsqVal ATRIBCOMP . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    EsqVal                         shift and go to state 69
    Exp                            shift and go to state 161

state 116

    (48) Exp -> EsqVal MENOSCOMP . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    EsqVal                         shift and go to state 69
    Exp                            shift and go to state 162

state 117

    (49) Exp -> EsqVal MULTCOMP . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    EsqVal                         shift and go to state 69
    Exp                            shift and go to state 163

state 118

    (50) Exp -> EsqVal DIVCOMP . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    EsqVal                         shift and go to state 69
    Exp                            shift and go to state 164

state 119

    (71) Exp -> EsqVal DECREM .

    VIRG            reduce using rule 71 (Exp -> EsqVal DECREM .)
    COND            reduce using rule 71 (Exp -> EsqVal DECREM .)
    OULOG           reduce using rule 71 (Exp -> EsqVal DECREM .)
    ELOG            reduce using rule 71 (Exp -> EsqVal DECREM .)
    OU              reduce using rule 71 (Exp -> EsqVal DECREM .)
    E               reduce using rule 71 (Exp -> EsqVal DECREM .)
    DESLESQ         reduce using rule 71 (Exp -> EsqVal DECREM .)
    DESLDIR         reduce using rule 71 (Exp -> EsqVal DECREM .)
    IGUAL           reduce using rule 71 (Exp -> EsqVal DECREM .)
    DIFER           reduce using rule 71 (Exp -> EsqVal DECREM .)
    MAIORIGUAL      reduce using rule 71 (Exp -> EsqVal DECREM .)
    MENORIGUAL      reduce using rule 71 (Exp -> EsqVal DECREM .)
    MAIOR           reduce using rule 71 (Exp -> EsqVal DECREM .)
    MENOR           reduce using rule 71 (Exp -> EsqVal DECREM .)
    MAIS            reduce using rule 71 (Exp -> EsqVal DECREM .)
    MENOS           reduce using rule 71 (Exp -> EsqVal DECREM .)
    MULT            reduce using rule 71 (Exp -> EsqVal DECREM .)
    DIV             reduce using rule 71 (Exp -> EsqVal DECREM .)
    MOD             reduce using rule 71 (Exp -> EsqVal DECREM .)
    PONTEIRO        reduce using rule 71 (Exp -> EsqVal DECREM .)
    PONTOV          reduce using rule 71 (Exp -> EsqVal DECREM .)
    FECHAPAR        reduce using rule 71 (Exp -> EsqVal DECREM .)
    FECHACOL        reduce using rule 71 (Exp -> EsqVal DECREM .)
    DOISP           reduce using rule 71 (Exp -> EsqVal DECREM .)


state 120

    (72) Exp -> EsqVal INCREMEN .

    VIRG            reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    COND            reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    OULOG           reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    ELOG            reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    OU              reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    E               reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    DESLESQ         reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    DESLDIR         reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    IGUAL           reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    DIFER           reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MAIORIGUAL      reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MENORIGUAL      reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MAIOR           reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MENOR           reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MAIS            reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MENOS           reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MULT            reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    DIV             reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    MOD             reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    PONTEIRO        reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    PONTOV          reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    FECHAPAR        reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    FECHACOL        reduce using rule 72 (Exp -> EsqVal INCREMEN .)
    DOISP           reduce using rule 72 (Exp -> EsqVal INCREMEN .)


state 121

    (69) Exp -> DECREM EsqVal .

    VIRG            reduce using rule 69 (Exp -> DECREM EsqVal .)
    COND            reduce using rule 69 (Exp -> DECREM EsqVal .)
    OULOG           reduce using rule 69 (Exp -> DECREM EsqVal .)
    ELOG            reduce using rule 69 (Exp -> DECREM EsqVal .)
    OU              reduce using rule 69 (Exp -> DECREM EsqVal .)
    E               reduce using rule 69 (Exp -> DECREM EsqVal .)
    DESLESQ         reduce using rule 69 (Exp -> DECREM EsqVal .)
    DESLDIR         reduce using rule 69 (Exp -> DECREM EsqVal .)
    IGUAL           reduce using rule 69 (Exp -> DECREM EsqVal .)
    DIFER           reduce using rule 69 (Exp -> DECREM EsqVal .)
    MAIORIGUAL      reduce using rule 69 (Exp -> DECREM EsqVal .)
    MENORIGUAL      reduce using rule 69 (Exp -> DECREM EsqVal .)
    MAIOR           reduce using rule 69 (Exp -> DECREM EsqVal .)
    MENOR           reduce using rule 69 (Exp -> DECREM EsqVal .)
    MAIS            reduce using rule 69 (Exp -> DECREM EsqVal .)
    MENOS           reduce using rule 69 (Exp -> DECREM EsqVal .)
    MULT            reduce using rule 69 (Exp -> DECREM EsqVal .)
    DIV             reduce using rule 69 (Exp -> DECREM EsqVal .)
    MOD             reduce using rule 69 (Exp -> DECREM EsqVal .)
    PONTEIRO        reduce using rule 69 (Exp -> DECREM EsqVal .)
    PONTOV          reduce using rule 69 (Exp -> DECREM EsqVal .)
    FECHAPAR        reduce using rule 69 (Exp -> DECREM EsqVal .)
    FECHACOL        reduce using rule 69 (Exp -> DECREM EsqVal .)
    DOISP           reduce using rule 69 (Exp -> DECREM EsqVal .)


state 122

    (89) EsqVal -> IDENT .
    (90) EsqVal -> IDENT . ABRECOL Exp FECHACOL

    VIRG            reduce using rule 89 (EsqVal -> IDENT .)
    COND            reduce using rule 89 (EsqVal -> IDENT .)
    OULOG           reduce using rule 89 (EsqVal -> IDENT .)
    ELOG            reduce using rule 89 (EsqVal -> IDENT .)
    OU              reduce using rule 89 (EsqVal -> IDENT .)
    E               reduce using rule 89 (EsqVal -> IDENT .)
    DESLESQ         reduce using rule 89 (EsqVal -> IDENT .)
    DESLDIR         reduce using rule 89 (EsqVal -> IDENT .)
    IGUAL           reduce using rule 89 (EsqVal -> IDENT .)
    DIFER           reduce using rule 89 (EsqVal -> IDENT .)
    MAIORIGUAL      reduce using rule 89 (EsqVal -> IDENT .)
    MENORIGUAL      reduce using rule 89 (EsqVal -> IDENT .)
    MAIOR           reduce using rule 89 (EsqVal -> IDENT .)
    MENOR           reduce using rule 89 (EsqVal -> IDENT .)
    MAIS            reduce using rule 89 (EsqVal -> IDENT .)
    MENOS           reduce using rule 89 (EsqVal -> IDENT .)
    MULT            reduce using rule 89 (EsqVal -> IDENT .)
    DIV             reduce using rule 89 (EsqVal -> IDENT .)
    MOD             reduce using rule 89 (EsqVal -> IDENT .)
    PONTEIRO        reduce using rule 89 (EsqVal -> IDENT .)
    PONTOV          reduce using rule 89 (EsqVal -> IDENT .)
    FECHAPAR        reduce using rule 89 (EsqVal -> IDENT .)
    FECHACOL        reduce using rule 89 (EsqVal -> IDENT .)
    DOISP           reduce using rule 89 (EsqVal -> IDENT .)
    ABRECOL         shift and go to state 165


state 123

    (70) Exp -> INCREMEN EsqVal .

    VIRG            reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    COND            reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    OULOG           reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    ELOG            reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    OU              reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    E               reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    DESLESQ         reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    DESLDIR         reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    IGUAL           reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    DIFER           reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MAIORIGUAL      reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MENORIGUAL      reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MAIOR           reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MENOR           reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MAIS            reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MENOS           reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MULT            reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    DIV             reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    MOD             reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    PONTEIRO        reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    PONTOV          reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    FECHAPAR        reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    FECHACOL        reduce using rule 70 (Exp -> INCREMEN EsqVal .)
    DOISP           reduce using rule 70 (Exp -> INCREMEN EsqVal .)


state 124

    (73) Exp -> NAO Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 73 (Exp -> NAO Exp .)
    COND            reduce using rule 73 (Exp -> NAO Exp .)
    OULOG           reduce using rule 73 (Exp -> NAO Exp .)
    ELOG            reduce using rule 73 (Exp -> NAO Exp .)
    OU              reduce using rule 73 (Exp -> NAO Exp .)
    E               reduce using rule 73 (Exp -> NAO Exp .)
    DESLESQ         reduce using rule 73 (Exp -> NAO Exp .)
    DESLDIR         reduce using rule 73 (Exp -> NAO Exp .)
    IGUAL           reduce using rule 73 (Exp -> NAO Exp .)
    DIFER           reduce using rule 73 (Exp -> NAO Exp .)
    MAIORIGUAL      reduce using rule 73 (Exp -> NAO Exp .)
    MENORIGUAL      reduce using rule 73 (Exp -> NAO Exp .)
    MAIOR           reduce using rule 73 (Exp -> NAO Exp .)
    MENOR           reduce using rule 73 (Exp -> NAO Exp .)
    MAIS            reduce using rule 73 (Exp -> NAO Exp .)
    MENOS           reduce using rule 73 (Exp -> NAO Exp .)
    MULT            reduce using rule 73 (Exp -> NAO Exp .)
    DIV             reduce using rule 73 (Exp -> NAO Exp .)
    MOD             reduce using rule 73 (Exp -> NAO Exp .)
    PONTOV          reduce using rule 73 (Exp -> NAO Exp .)
    FECHAPAR        reduce using rule 73 (Exp -> NAO Exp .)
    FECHACOL        reduce using rule 73 (Exp -> NAO Exp .)
    DOISP           reduce using rule 73 (Exp -> NAO Exp .)
    PONTEIRO        shift and go to state 113

  ! PONTEIRO        [ reduce using rule 73 (Exp -> NAO Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAIS            [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! MULT            [ shift and go to state 110 ]
  ! DIV             [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]


state 125

    (74) Exp -> COMPLEM Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 74 (Exp -> COMPLEM Exp .)
    COND            reduce using rule 74 (Exp -> COMPLEM Exp .)
    OULOG           reduce using rule 74 (Exp -> COMPLEM Exp .)
    ELOG            reduce using rule 74 (Exp -> COMPLEM Exp .)
    OU              reduce using rule 74 (Exp -> COMPLEM Exp .)
    E               reduce using rule 74 (Exp -> COMPLEM Exp .)
    DESLESQ         reduce using rule 74 (Exp -> COMPLEM Exp .)
    DESLDIR         reduce using rule 74 (Exp -> COMPLEM Exp .)
    IGUAL           reduce using rule 74 (Exp -> COMPLEM Exp .)
    DIFER           reduce using rule 74 (Exp -> COMPLEM Exp .)
    MAIORIGUAL      reduce using rule 74 (Exp -> COMPLEM Exp .)
    MENORIGUAL      reduce using rule 74 (Exp -> COMPLEM Exp .)
    MAIOR           reduce using rule 74 (Exp -> COMPLEM Exp .)
    MENOR           reduce using rule 74 (Exp -> COMPLEM Exp .)
    MAIS            reduce using rule 74 (Exp -> COMPLEM Exp .)
    MENOS           reduce using rule 74 (Exp -> COMPLEM Exp .)
    MULT            reduce using rule 74 (Exp -> COMPLEM Exp .)
    DIV             reduce using rule 74 (Exp -> COMPLEM Exp .)
    MOD             reduce using rule 74 (Exp -> COMPLEM Exp .)
    PONTOV          reduce using rule 74 (Exp -> COMPLEM Exp .)
    FECHAPAR        reduce using rule 74 (Exp -> COMPLEM Exp .)
    FECHACOL        reduce using rule 74 (Exp -> COMPLEM Exp .)
    DOISP           reduce using rule 74 (Exp -> COMPLEM Exp .)
    PONTEIRO        shift and go to state 113

  ! PONTEIRO        [ reduce using rule 74 (Exp -> COMPLEM Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAIS            [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! MULT            [ shift and go to state 110 ]
  ! DIV             [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]


state 126

    (75) Exp -> NEW IDENT . ABREPAR ArgumentosOpcionais FECHAPAR

    ABREPAR         shift and go to state 166


state 127

    (18) Variavel -> IDENT ABRECOL NUMBER FECHACOL .

    PONTOV          reduce using rule 18 (Variavel -> IDENT ABRECOL NUMBER FECHACOL .)
    VIRG            reduce using rule 18 (Variavel -> IDENT ABRECOL NUMBER FECHACOL .)


state 128

    (12) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR . PONTOV

    PONTOV          shift and go to state 167


state 129

    (32) Comando -> IF ABREPAR ExpOpc . FECHAPAR Comando ELSE Comando
    (33) Comando -> IF ABREPAR ExpOpc . FECHAPAR Comando

    FECHAPAR        shift and go to state 168


state 130

    (34) Comando -> WHILE ABREPAR ExpOpc . FECHAPAR Comando

    FECHAPAR        shift and go to state 169


state 131

    (35) Comando -> DO Comando WHILE . ABREPAR ExpOpc FECHAPAR PONTOV

    ABREPAR         shift and go to state 170


state 132

    (36) Comando -> FOR ABREPAR ExpOpc . PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando

    PONTOV          shift and go to state 171


state 133

    (37) Comando -> FOREACH IDENT IN . IDENT Comando

    IDENT           shift and go to state 172


state 134

    (76) Exp -> IDENT ABREPAR ArgumentosOpcionais . FECHAPAR

    FECHAPAR        shift and go to state 173


state 135

    (85) ArgumentosOpcionais -> Argumentos .
    (87) Argumentos -> Argumentos . VIRG Exp

    FECHAPAR        reduce using rule 85 (ArgumentosOpcionais -> Argumentos .)
    VIRG            shift and go to state 174


state 136

    (86) ArgumentosOpcionais -> empty .

    FECHAPAR        reduce using rule 86 (ArgumentosOpcionais -> empty .)


state 137

    (88) Argumentos -> Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

  ! shift/reduce conflict for VIRG resolved as shift
    FECHAPAR        reduce using rule 88 (Argumentos -> Exp .)
    VIRG            shift and go to state 94
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! VIRG            [ reduce using rule 88 (Argumentos -> Exp .) ]


state 138

    (79) Exp -> IDENT ABRECOL Exp . FECHACOL
    (90) EsqVal -> IDENT ABRECOL Exp . FECHACOL
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    FECHACOL        shift and go to state 175
    VIRG            shift and go to state 94
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113


state 139

    (40) Comando -> RETURN ExpOpc PONTOV .

    FECHACV         reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    IF              reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    WHILE           reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    DO              reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    FOR             reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    FOREACH         reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    BREAK           reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    CONTINUE        reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    RETURN          reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    ABRECV          reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    DECREM          reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    INCREMEN        reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    NAO             reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    COMPLEM         reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    NEW             reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    IDENT           reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    FLOAT           reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    INT             reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    NUMBER          reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    STRING          reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    NIL             reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    PONTOV          reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)
    ELSE            reduce using rule 40 (Comando -> RETURN ExpOpc PONTOV .)


state 140

    (45) Exp -> Exp VIRG Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 45 (Exp -> Exp VIRG Exp .)
    PONTOV          reduce using rule 45 (Exp -> Exp VIRG Exp .)
    FECHAPAR        reduce using rule 45 (Exp -> Exp VIRG Exp .)
    FECHACOL        reduce using rule 45 (Exp -> Exp VIRG Exp .)
    DOISP           reduce using rule 45 (Exp -> Exp VIRG Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! COND            [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! OULOG           [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! ELOG            [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! OU              [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! E               [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! DESLESQ         [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! DESLDIR         [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! IGUAL           [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! DIFER           [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MENORIGUAL      [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MAIOR           [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MENOR           [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MAIS            [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MENOS           [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MULT            [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! DIV             [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! MOD             [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! PONTEIRO        [ reduce using rule 45 (Exp -> Exp VIRG Exp .) ]
  ! VIRG            [ shift and go to state 94 ]


state 141

    (51) Exp -> Exp COND Exp . DOISP Exp
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    DOISP           shift and go to state 176
    VIRG            shift and go to state 94
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113


state 142

    (52) Exp -> Exp OULOG Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 52 (Exp -> Exp OULOG Exp .)
    COND            reduce using rule 52 (Exp -> Exp OULOG Exp .)
    OULOG           reduce using rule 52 (Exp -> Exp OULOG Exp .)
    PONTOV          reduce using rule 52 (Exp -> Exp OULOG Exp .)
    FECHAPAR        reduce using rule 52 (Exp -> Exp OULOG Exp .)
    FECHACOL        reduce using rule 52 (Exp -> Exp OULOG Exp .)
    DOISP           reduce using rule 52 (Exp -> Exp OULOG Exp .)
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! ELOG            [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! OU              [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! E               [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! DESLESQ         [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! DESLDIR         [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! IGUAL           [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! DIFER           [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MENORIGUAL      [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MAIOR           [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MENOR           [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MAIS            [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MENOS           [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MULT            [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! DIV             [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! MOD             [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! PONTEIRO        [ reduce using rule 52 (Exp -> Exp OULOG Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]


state 143

    (53) Exp -> Exp ELOG Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 53 (Exp -> Exp ELOG Exp .)
    COND            reduce using rule 53 (Exp -> Exp ELOG Exp .)
    OULOG           reduce using rule 53 (Exp -> Exp ELOG Exp .)
    ELOG            reduce using rule 53 (Exp -> Exp ELOG Exp .)
    PONTOV          reduce using rule 53 (Exp -> Exp ELOG Exp .)
    FECHAPAR        reduce using rule 53 (Exp -> Exp ELOG Exp .)
    FECHACOL        reduce using rule 53 (Exp -> Exp ELOG Exp .)
    DOISP           reduce using rule 53 (Exp -> Exp ELOG Exp .)
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! OU              [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! E               [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! DESLESQ         [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! DESLDIR         [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! IGUAL           [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! DIFER           [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MENORIGUAL      [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MAIOR           [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MENOR           [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MAIS            [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MENOS           [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MULT            [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! DIV             [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! MOD             [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! PONTEIRO        [ reduce using rule 53 (Exp -> Exp ELOG Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]


state 144

    (54) Exp -> Exp OU Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 54 (Exp -> Exp OU Exp .)
    COND            reduce using rule 54 (Exp -> Exp OU Exp .)
    OULOG           reduce using rule 54 (Exp -> Exp OU Exp .)
    ELOG            reduce using rule 54 (Exp -> Exp OU Exp .)
    OU              reduce using rule 54 (Exp -> Exp OU Exp .)
    PONTOV          reduce using rule 54 (Exp -> Exp OU Exp .)
    FECHAPAR        reduce using rule 54 (Exp -> Exp OU Exp .)
    FECHACOL        reduce using rule 54 (Exp -> Exp OU Exp .)
    DOISP           reduce using rule 54 (Exp -> Exp OU Exp .)
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! E               [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! DESLESQ         [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! DESLDIR         [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! IGUAL           [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! DIFER           [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MENORIGUAL      [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MAIOR           [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MENOR           [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MAIS            [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MENOS           [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MULT            [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! DIV             [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! MOD             [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! PONTEIRO        [ reduce using rule 54 (Exp -> Exp OU Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]


state 145

    (55) Exp -> Exp E Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 55 (Exp -> Exp E Exp .)
    COND            reduce using rule 55 (Exp -> Exp E Exp .)
    OULOG           reduce using rule 55 (Exp -> Exp E Exp .)
    ELOG            reduce using rule 55 (Exp -> Exp E Exp .)
    OU              reduce using rule 55 (Exp -> Exp E Exp .)
    E               reduce using rule 55 (Exp -> Exp E Exp .)
    PONTOV          reduce using rule 55 (Exp -> Exp E Exp .)
    FECHAPAR        reduce using rule 55 (Exp -> Exp E Exp .)
    FECHACOL        reduce using rule 55 (Exp -> Exp E Exp .)
    DOISP           reduce using rule 55 (Exp -> Exp E Exp .)
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! DESLESQ         [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! DESLDIR         [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! IGUAL           [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! DIFER           [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MENORIGUAL      [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MAIOR           [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MENOR           [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MAIS            [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MENOS           [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MULT            [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! DIV             [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! MOD             [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! PONTEIRO        [ reduce using rule 55 (Exp -> Exp E Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]


state 146

    (56) Exp -> Exp DESLESQ Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    COND            reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    OULOG           reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    ELOG            reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    OU              reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    E               reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    DESLESQ         reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    DESLDIR         reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    IGUAL           reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    DIFER           reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    MAIORIGUAL      reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    MENORIGUAL      reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    MAIOR           reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    MENOR           reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    PONTOV          reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    FECHAPAR        reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    FECHACOL        reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    DOISP           reduce using rule 56 (Exp -> Exp DESLESQ Exp .)
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! MAIS            [ reduce using rule 56 (Exp -> Exp DESLESQ Exp .) ]
  ! MENOS           [ reduce using rule 56 (Exp -> Exp DESLESQ Exp .) ]
  ! MULT            [ reduce using rule 56 (Exp -> Exp DESLESQ Exp .) ]
  ! DIV             [ reduce using rule 56 (Exp -> Exp DESLESQ Exp .) ]
  ! MOD             [ reduce using rule 56 (Exp -> Exp DESLESQ Exp .) ]
  ! PONTEIRO        [ reduce using rule 56 (Exp -> Exp DESLESQ Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]


state 147

    (57) Exp -> Exp DESLDIR Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    COND            reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    OULOG           reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    ELOG            reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    OU              reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    E               reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    DESLESQ         reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    DESLDIR         reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    IGUAL           reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    DIFER           reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    MAIORIGUAL      reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    MENORIGUAL      reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    MAIOR           reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    MENOR           reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    PONTOV          reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    FECHAPAR        reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    FECHACOL        reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    DOISP           reduce using rule 57 (Exp -> Exp DESLDIR Exp .)
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! MAIS            [ reduce using rule 57 (Exp -> Exp DESLDIR Exp .) ]
  ! MENOS           [ reduce using rule 57 (Exp -> Exp DESLDIR Exp .) ]
  ! MULT            [ reduce using rule 57 (Exp -> Exp DESLDIR Exp .) ]
  ! DIV             [ reduce using rule 57 (Exp -> Exp DESLDIR Exp .) ]
  ! MOD             [ reduce using rule 57 (Exp -> Exp DESLDIR Exp .) ]
  ! PONTEIRO        [ reduce using rule 57 (Exp -> Exp DESLDIR Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]


state 148

    (58) Exp -> Exp IGUAL Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    COND            reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    OULOG           reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    ELOG            reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    OU              reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    E               reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    IGUAL           reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    DIFER           reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    PONTOV          reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    FECHAPAR        reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    FECHACOL        reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    DOISP           reduce using rule 58 (Exp -> Exp IGUAL Exp .)
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! DESLESQ         [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! DESLDIR         [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MENORIGUAL      [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MAIOR           [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MENOR           [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MAIS            [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MENOS           [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MULT            [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! DIV             [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! MOD             [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! PONTEIRO        [ reduce using rule 58 (Exp -> Exp IGUAL Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]


state 149

    (59) Exp -> Exp DIFER Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 59 (Exp -> Exp DIFER Exp .)
    COND            reduce using rule 59 (Exp -> Exp DIFER Exp .)
    OULOG           reduce using rule 59 (Exp -> Exp DIFER Exp .)
    ELOG            reduce using rule 59 (Exp -> Exp DIFER Exp .)
    OU              reduce using rule 59 (Exp -> Exp DIFER Exp .)
    E               reduce using rule 59 (Exp -> Exp DIFER Exp .)
    IGUAL           reduce using rule 59 (Exp -> Exp DIFER Exp .)
    DIFER           reduce using rule 59 (Exp -> Exp DIFER Exp .)
    PONTOV          reduce using rule 59 (Exp -> Exp DIFER Exp .)
    FECHAPAR        reduce using rule 59 (Exp -> Exp DIFER Exp .)
    FECHACOL        reduce using rule 59 (Exp -> Exp DIFER Exp .)
    DOISP           reduce using rule 59 (Exp -> Exp DIFER Exp .)
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! DESLESQ         [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! DESLDIR         [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MENORIGUAL      [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MAIOR           [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MENOR           [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MAIS            [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MENOS           [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MULT            [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! DIV             [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! MOD             [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! PONTEIRO        [ reduce using rule 59 (Exp -> Exp DIFER Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]


state 150

    (60) Exp -> Exp MAIORIGUAL Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    COND            reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    OULOG           reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    ELOG            reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    OU              reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    E               reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    IGUAL           reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    DIFER           reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    MAIORIGUAL      reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    MENORIGUAL      reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    MAIOR           reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    MENOR           reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    PONTOV          reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    FECHAPAR        reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    FECHACOL        reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    DOISP           reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .)
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! DESLESQ         [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! DESLDIR         [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MAIS            [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MENOS           [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MULT            [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! DIV             [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! MOD             [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! PONTEIRO        [ reduce using rule 60 (Exp -> Exp MAIORIGUAL Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]


state 151

    (61) Exp -> Exp MENORIGUAL Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    COND            reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    OULOG           reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    ELOG            reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    OU              reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    E               reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    IGUAL           reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    DIFER           reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    MAIORIGUAL      reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    MENORIGUAL      reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    MAIOR           reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    MENOR           reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    PONTOV          reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    FECHAPAR        reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    FECHACOL        reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    DOISP           reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .)
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! DESLESQ         [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! DESLDIR         [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MAIS            [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MENOS           [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MULT            [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! DIV             [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! MOD             [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! PONTEIRO        [ reduce using rule 61 (Exp -> Exp MENORIGUAL Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]


state 152

    (62) Exp -> Exp MAIOR Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    COND            reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    OULOG           reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    ELOG            reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    OU              reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    E               reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    IGUAL           reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    DIFER           reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    MAIORIGUAL      reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    MENORIGUAL      reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    MAIOR           reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    MENOR           reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    PONTOV          reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    FECHAPAR        reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    FECHACOL        reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    DOISP           reduce using rule 62 (Exp -> Exp MAIOR Exp .)
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! DESLESQ         [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! DESLDIR         [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! MAIS            [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! MENOS           [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! MULT            [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! DIV             [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! MOD             [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! PONTEIRO        [ reduce using rule 62 (Exp -> Exp MAIOR Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]


state 153

    (63) Exp -> Exp MENOR Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 63 (Exp -> Exp MENOR Exp .)
    COND            reduce using rule 63 (Exp -> Exp MENOR Exp .)
    OULOG           reduce using rule 63 (Exp -> Exp MENOR Exp .)
    ELOG            reduce using rule 63 (Exp -> Exp MENOR Exp .)
    OU              reduce using rule 63 (Exp -> Exp MENOR Exp .)
    E               reduce using rule 63 (Exp -> Exp MENOR Exp .)
    IGUAL           reduce using rule 63 (Exp -> Exp MENOR Exp .)
    DIFER           reduce using rule 63 (Exp -> Exp MENOR Exp .)
    MAIORIGUAL      reduce using rule 63 (Exp -> Exp MENOR Exp .)
    MENORIGUAL      reduce using rule 63 (Exp -> Exp MENOR Exp .)
    MAIOR           reduce using rule 63 (Exp -> Exp MENOR Exp .)
    MENOR           reduce using rule 63 (Exp -> Exp MENOR Exp .)
    PONTOV          reduce using rule 63 (Exp -> Exp MENOR Exp .)
    FECHAPAR        reduce using rule 63 (Exp -> Exp MENOR Exp .)
    FECHACOL        reduce using rule 63 (Exp -> Exp MENOR Exp .)
    DOISP           reduce using rule 63 (Exp -> Exp MENOR Exp .)
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! DESLESQ         [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! DESLDIR         [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! MAIS            [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! MENOS           [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! MULT            [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! DIV             [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! MOD             [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! PONTEIRO        [ reduce using rule 63 (Exp -> Exp MENOR Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]


state 154

    (64) Exp -> Exp MAIS Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 64 (Exp -> Exp MAIS Exp .)
    COND            reduce using rule 64 (Exp -> Exp MAIS Exp .)
    OULOG           reduce using rule 64 (Exp -> Exp MAIS Exp .)
    ELOG            reduce using rule 64 (Exp -> Exp MAIS Exp .)
    OU              reduce using rule 64 (Exp -> Exp MAIS Exp .)
    E               reduce using rule 64 (Exp -> Exp MAIS Exp .)
    DESLESQ         reduce using rule 64 (Exp -> Exp MAIS Exp .)
    DESLDIR         reduce using rule 64 (Exp -> Exp MAIS Exp .)
    IGUAL           reduce using rule 64 (Exp -> Exp MAIS Exp .)
    DIFER           reduce using rule 64 (Exp -> Exp MAIS Exp .)
    MAIORIGUAL      reduce using rule 64 (Exp -> Exp MAIS Exp .)
    MENORIGUAL      reduce using rule 64 (Exp -> Exp MAIS Exp .)
    MAIOR           reduce using rule 64 (Exp -> Exp MAIS Exp .)
    MENOR           reduce using rule 64 (Exp -> Exp MAIS Exp .)
    MAIS            reduce using rule 64 (Exp -> Exp MAIS Exp .)
    MENOS           reduce using rule 64 (Exp -> Exp MAIS Exp .)
    PONTOV          reduce using rule 64 (Exp -> Exp MAIS Exp .)
    FECHAPAR        reduce using rule 64 (Exp -> Exp MAIS Exp .)
    FECHACOL        reduce using rule 64 (Exp -> Exp MAIS Exp .)
    DOISP           reduce using rule 64 (Exp -> Exp MAIS Exp .)
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! MULT            [ reduce using rule 64 (Exp -> Exp MAIS Exp .) ]
  ! DIV             [ reduce using rule 64 (Exp -> Exp MAIS Exp .) ]
  ! MOD             [ reduce using rule 64 (Exp -> Exp MAIS Exp .) ]
  ! PONTEIRO        [ reduce using rule 64 (Exp -> Exp MAIS Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAIS            [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]


state 155

    (65) Exp -> Exp MENOS Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 65 (Exp -> Exp MENOS Exp .)
    COND            reduce using rule 65 (Exp -> Exp MENOS Exp .)
    OULOG           reduce using rule 65 (Exp -> Exp MENOS Exp .)
    ELOG            reduce using rule 65 (Exp -> Exp MENOS Exp .)
    OU              reduce using rule 65 (Exp -> Exp MENOS Exp .)
    E               reduce using rule 65 (Exp -> Exp MENOS Exp .)
    DESLESQ         reduce using rule 65 (Exp -> Exp MENOS Exp .)
    DESLDIR         reduce using rule 65 (Exp -> Exp MENOS Exp .)
    IGUAL           reduce using rule 65 (Exp -> Exp MENOS Exp .)
    DIFER           reduce using rule 65 (Exp -> Exp MENOS Exp .)
    MAIORIGUAL      reduce using rule 65 (Exp -> Exp MENOS Exp .)
    MENORIGUAL      reduce using rule 65 (Exp -> Exp MENOS Exp .)
    MAIOR           reduce using rule 65 (Exp -> Exp MENOS Exp .)
    MENOR           reduce using rule 65 (Exp -> Exp MENOS Exp .)
    MAIS            reduce using rule 65 (Exp -> Exp MENOS Exp .)
    MENOS           reduce using rule 65 (Exp -> Exp MENOS Exp .)
    PONTOV          reduce using rule 65 (Exp -> Exp MENOS Exp .)
    FECHAPAR        reduce using rule 65 (Exp -> Exp MENOS Exp .)
    FECHACOL        reduce using rule 65 (Exp -> Exp MENOS Exp .)
    DOISP           reduce using rule 65 (Exp -> Exp MENOS Exp .)
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! MULT            [ reduce using rule 65 (Exp -> Exp MENOS Exp .) ]
  ! DIV             [ reduce using rule 65 (Exp -> Exp MENOS Exp .) ]
  ! MOD             [ reduce using rule 65 (Exp -> Exp MENOS Exp .) ]
  ! PONTEIRO        [ reduce using rule 65 (Exp -> Exp MENOS Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAIS            [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]


state 156

    (66) Exp -> Exp MULT Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 66 (Exp -> Exp MULT Exp .)
    COND            reduce using rule 66 (Exp -> Exp MULT Exp .)
    OULOG           reduce using rule 66 (Exp -> Exp MULT Exp .)
    ELOG            reduce using rule 66 (Exp -> Exp MULT Exp .)
    OU              reduce using rule 66 (Exp -> Exp MULT Exp .)
    E               reduce using rule 66 (Exp -> Exp MULT Exp .)
    DESLESQ         reduce using rule 66 (Exp -> Exp MULT Exp .)
    DESLDIR         reduce using rule 66 (Exp -> Exp MULT Exp .)
    IGUAL           reduce using rule 66 (Exp -> Exp MULT Exp .)
    DIFER           reduce using rule 66 (Exp -> Exp MULT Exp .)
    MAIORIGUAL      reduce using rule 66 (Exp -> Exp MULT Exp .)
    MENORIGUAL      reduce using rule 66 (Exp -> Exp MULT Exp .)
    MAIOR           reduce using rule 66 (Exp -> Exp MULT Exp .)
    MENOR           reduce using rule 66 (Exp -> Exp MULT Exp .)
    MAIS            reduce using rule 66 (Exp -> Exp MULT Exp .)
    MENOS           reduce using rule 66 (Exp -> Exp MULT Exp .)
    MULT            reduce using rule 66 (Exp -> Exp MULT Exp .)
    DIV             reduce using rule 66 (Exp -> Exp MULT Exp .)
    MOD             reduce using rule 66 (Exp -> Exp MULT Exp .)
    PONTOV          reduce using rule 66 (Exp -> Exp MULT Exp .)
    FECHAPAR        reduce using rule 66 (Exp -> Exp MULT Exp .)
    FECHACOL        reduce using rule 66 (Exp -> Exp MULT Exp .)
    DOISP           reduce using rule 66 (Exp -> Exp MULT Exp .)
    PONTEIRO        shift and go to state 113

  ! PONTEIRO        [ reduce using rule 66 (Exp -> Exp MULT Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAIS            [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! MULT            [ shift and go to state 110 ]
  ! DIV             [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]


state 157

    (67) Exp -> Exp DIV Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 67 (Exp -> Exp DIV Exp .)
    COND            reduce using rule 67 (Exp -> Exp DIV Exp .)
    OULOG           reduce using rule 67 (Exp -> Exp DIV Exp .)
    ELOG            reduce using rule 67 (Exp -> Exp DIV Exp .)
    OU              reduce using rule 67 (Exp -> Exp DIV Exp .)
    E               reduce using rule 67 (Exp -> Exp DIV Exp .)
    DESLESQ         reduce using rule 67 (Exp -> Exp DIV Exp .)
    DESLDIR         reduce using rule 67 (Exp -> Exp DIV Exp .)
    IGUAL           reduce using rule 67 (Exp -> Exp DIV Exp .)
    DIFER           reduce using rule 67 (Exp -> Exp DIV Exp .)
    MAIORIGUAL      reduce using rule 67 (Exp -> Exp DIV Exp .)
    MENORIGUAL      reduce using rule 67 (Exp -> Exp DIV Exp .)
    MAIOR           reduce using rule 67 (Exp -> Exp DIV Exp .)
    MENOR           reduce using rule 67 (Exp -> Exp DIV Exp .)
    MAIS            reduce using rule 67 (Exp -> Exp DIV Exp .)
    MENOS           reduce using rule 67 (Exp -> Exp DIV Exp .)
    MULT            reduce using rule 67 (Exp -> Exp DIV Exp .)
    DIV             reduce using rule 67 (Exp -> Exp DIV Exp .)
    MOD             reduce using rule 67 (Exp -> Exp DIV Exp .)
    PONTOV          reduce using rule 67 (Exp -> Exp DIV Exp .)
    FECHAPAR        reduce using rule 67 (Exp -> Exp DIV Exp .)
    FECHACOL        reduce using rule 67 (Exp -> Exp DIV Exp .)
    DOISP           reduce using rule 67 (Exp -> Exp DIV Exp .)
    PONTEIRO        shift and go to state 113

  ! PONTEIRO        [ reduce using rule 67 (Exp -> Exp DIV Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAIS            [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! MULT            [ shift and go to state 110 ]
  ! DIV             [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]


state 158

    (68) Exp -> Exp MOD Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 68 (Exp -> Exp MOD Exp .)
    COND            reduce using rule 68 (Exp -> Exp MOD Exp .)
    OULOG           reduce using rule 68 (Exp -> Exp MOD Exp .)
    ELOG            reduce using rule 68 (Exp -> Exp MOD Exp .)
    OU              reduce using rule 68 (Exp -> Exp MOD Exp .)
    E               reduce using rule 68 (Exp -> Exp MOD Exp .)
    DESLESQ         reduce using rule 68 (Exp -> Exp MOD Exp .)
    DESLDIR         reduce using rule 68 (Exp -> Exp MOD Exp .)
    IGUAL           reduce using rule 68 (Exp -> Exp MOD Exp .)
    DIFER           reduce using rule 68 (Exp -> Exp MOD Exp .)
    MAIORIGUAL      reduce using rule 68 (Exp -> Exp MOD Exp .)
    MENORIGUAL      reduce using rule 68 (Exp -> Exp MOD Exp .)
    MAIOR           reduce using rule 68 (Exp -> Exp MOD Exp .)
    MENOR           reduce using rule 68 (Exp -> Exp MOD Exp .)
    MAIS            reduce using rule 68 (Exp -> Exp MOD Exp .)
    MENOS           reduce using rule 68 (Exp -> Exp MOD Exp .)
    MULT            reduce using rule 68 (Exp -> Exp MOD Exp .)
    DIV             reduce using rule 68 (Exp -> Exp MOD Exp .)
    MOD             reduce using rule 68 (Exp -> Exp MOD Exp .)
    PONTOV          reduce using rule 68 (Exp -> Exp MOD Exp .)
    FECHAPAR        reduce using rule 68 (Exp -> Exp MOD Exp .)
    FECHACOL        reduce using rule 68 (Exp -> Exp MOD Exp .)
    DOISP           reduce using rule 68 (Exp -> Exp MOD Exp .)
    PONTEIRO        shift and go to state 113

  ! PONTEIRO        [ reduce using rule 68 (Exp -> Exp MOD Exp .) ]
  ! VIRG            [ shift and go to state 94 ]
  ! COND            [ shift and go to state 95 ]
  ! OULOG           [ shift and go to state 96 ]
  ! ELOG            [ shift and go to state 97 ]
  ! OU              [ shift and go to state 98 ]
  ! E               [ shift and go to state 99 ]
  ! DESLESQ         [ shift and go to state 100 ]
  ! DESLDIR         [ shift and go to state 101 ]
  ! IGUAL           [ shift and go to state 102 ]
  ! DIFER           [ shift and go to state 103 ]
  ! MAIORIGUAL      [ shift and go to state 104 ]
  ! MENORIGUAL      [ shift and go to state 105 ]
  ! MAIOR           [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAIS            [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! MULT            [ shift and go to state 110 ]
  ! DIV             [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]


state 159

    (77) Exp -> Exp PONTEIRO IDENT . ABREPAR ArgumentosOpcionais FECHAPAR

    ABREPAR         shift and go to state 177


state 160

    (46) Exp -> EsqVal ATRIB Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 46 (Exp -> EsqVal ATRIB Exp .)
    PONTOV          reduce using rule 46 (Exp -> EsqVal ATRIB Exp .)
    FECHAPAR        reduce using rule 46 (Exp -> EsqVal ATRIB Exp .)
    FECHACOL        reduce using rule 46 (Exp -> EsqVal ATRIB Exp .)
    DOISP           reduce using rule 46 (Exp -> EsqVal ATRIB Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! COND            [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! OULOG           [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! ELOG            [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! OU              [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! E               [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! DESLESQ         [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! DESLDIR         [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! IGUAL           [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! DIFER           [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MENORIGUAL      [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MAIOR           [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MENOR           [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MAIS            [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MENOS           [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MULT            [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! DIV             [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! MOD             [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! PONTEIRO        [ reduce using rule 46 (Exp -> EsqVal ATRIB Exp .) ]
  ! VIRG            [ shift and go to state 94 ]


state 161

    (47) Exp -> EsqVal ATRIBCOMP Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .)
    PONTOV          reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .)
    FECHAPAR        reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .)
    FECHACOL        reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .)
    DOISP           reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! COND            [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! OULOG           [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! ELOG            [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! OU              [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! E               [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DIFER           [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MENOR           [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MAIS            [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MENOS           [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MULT            [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! DIV             [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! MOD             [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 47 (Exp -> EsqVal ATRIBCOMP Exp .) ]
  ! VIRG            [ shift and go to state 94 ]


state 162

    (48) Exp -> EsqVal MENOSCOMP Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .)
    PONTOV          reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .)
    FECHAPAR        reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .)
    FECHACOL        reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .)
    DOISP           reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! COND            [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! OULOG           [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! ELOG            [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! OU              [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! E               [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DIFER           [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MENOR           [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MAIS            [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MENOS           [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MULT            [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! DIV             [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! MOD             [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 48 (Exp -> EsqVal MENOSCOMP Exp .) ]
  ! VIRG            [ shift and go to state 94 ]


state 163

    (49) Exp -> EsqVal MULTCOMP Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .)
    PONTOV          reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .)
    FECHAPAR        reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .)
    FECHACOL        reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .)
    DOISP           reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! COND            [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! OULOG           [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! ELOG            [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! OU              [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! E               [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DIFER           [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MENOR           [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MAIS            [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MENOS           [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MULT            [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! DIV             [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! MOD             [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 49 (Exp -> EsqVal MULTCOMP Exp .) ]
  ! VIRG            [ shift and go to state 94 ]


state 164

    (50) Exp -> EsqVal DIVCOMP Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .)
    PONTOV          reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .)
    FECHAPAR        reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .)
    FECHACOL        reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .)
    DOISP           reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! COND            [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! OULOG           [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! ELOG            [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! OU              [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! E               [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DESLESQ         [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DESLDIR         [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! IGUAL           [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DIFER           [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MAIOR           [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MENOR           [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MAIS            [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MENOS           [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MULT            [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! DIV             [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! MOD             [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! PONTEIRO        [ reduce using rule 50 (Exp -> EsqVal DIVCOMP Exp .) ]
  ! VIRG            [ shift and go to state 94 ]


state 165

    (90) EsqVal -> IDENT ABRECOL . Exp FECHACOL
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 178
    EsqVal                         shift and go to state 69

state 166

    (75) Exp -> NEW IDENT ABREPAR . ArgumentosOpcionais FECHAPAR
    (85) ArgumentosOpcionais -> . Argumentos
    (86) ArgumentosOpcionais -> . empty
    (87) Argumentos -> . Argumentos VIRG Exp
    (88) Argumentos -> . Exp
    (91) empty -> .
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHAPAR        reduce using rule 91 (empty -> .)
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    ArgumentosOpcionais            shift and go to state 179
    Argumentos                     shift and go to state 135
    empty                          shift and go to state 136
    Exp                            shift and go to state 137
    EsqVal                         shift and go to state 69

state 167

    (12) DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .

    FECHACV         reduce using rule 12 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)
    STATIC          reduce using rule 12 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)
    VAR             reduce using rule 12 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)
    DEF             reduce using rule 12 (DefinicaoMembro -> ModificadorOpcional DEF IDENT ABREPAR ListaArgsFormaisOpcional FECHAPAR PONTOV .)


state 168

    (32) Comando -> IF ABREPAR ExpOpc FECHAPAR . Comando ELSE Comando
    (33) Comando -> IF ABREPAR ExpOpc FECHAPAR . Comando
    (32) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (34) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (35) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (36) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (37) Comando -> . FOREACH IDENT IN IDENT Comando
    (38) Comando -> . BREAK PONTOV
    (39) Comando -> . CONTINUE PONTOV
    (40) Comando -> . RETURN ExpOpc PONTOV
    (41) Comando -> . ExpOpc PONTOV
    (42) Comando -> . Bloco
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (29) Bloco -> . ABRECV ListaComandos FECHACV
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 59
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    BREAK           shift and go to state 63
    CONTINUE        shift and go to state 64
    RETURN          shift and go to state 65
    ABRECV          shift and go to state 41
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 57
    Comando                        shift and go to state 180
    Bloco                          shift and go to state 66
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 169

    (34) Comando -> WHILE ABREPAR ExpOpc FECHAPAR . Comando
    (32) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (34) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (35) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (36) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (37) Comando -> . FOREACH IDENT IN IDENT Comando
    (38) Comando -> . BREAK PONTOV
    (39) Comando -> . CONTINUE PONTOV
    (40) Comando -> . RETURN ExpOpc PONTOV
    (41) Comando -> . ExpOpc PONTOV
    (42) Comando -> . Bloco
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (29) Bloco -> . ABRECV ListaComandos FECHACV
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 59
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    BREAK           shift and go to state 63
    CONTINUE        shift and go to state 64
    RETURN          shift and go to state 65
    ABRECV          shift and go to state 41
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 57
    Comando                        shift and go to state 181
    Bloco                          shift and go to state 66
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 170

    (35) Comando -> DO Comando WHILE ABREPAR . ExpOpc FECHAPAR PONTOV
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    FECHAPAR        reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 182
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 171

    (36) Comando -> FOR ABREPAR ExpOpc PONTOV . ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 183
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 172

    (37) Comando -> FOREACH IDENT IN IDENT . Comando
    (32) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (34) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (35) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (36) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (37) Comando -> . FOREACH IDENT IN IDENT Comando
    (38) Comando -> . BREAK PONTOV
    (39) Comando -> . CONTINUE PONTOV
    (40) Comando -> . RETURN ExpOpc PONTOV
    (41) Comando -> . ExpOpc PONTOV
    (42) Comando -> . Bloco
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (29) Bloco -> . ABRECV ListaComandos FECHACV
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 59
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    BREAK           shift and go to state 63
    CONTINUE        shift and go to state 64
    RETURN          shift and go to state 65
    ABRECV          shift and go to state 41
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    Comando                        shift and go to state 184
    ExpOpc                         shift and go to state 57
    Bloco                          shift and go to state 66
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 173

    (76) Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .

    VIRG            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    COND            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OULOG           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    ELOG            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OU              reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    E               reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLESQ         reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLDIR         reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    IGUAL           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIFER           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIORIGUAL      reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENORIGUAL      reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIOR           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOR           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIS            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOS           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MULT            reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIV             reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MOD             reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTEIRO        reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTOV          reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHAPAR        reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHACOL        reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DOISP           reduce using rule 76 (Exp -> IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)


state 174

    (87) Argumentos -> Argumentos VIRG . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 185
    EsqVal                         shift and go to state 69

state 175

    (79) Exp -> IDENT ABRECOL Exp FECHACOL .
    (90) EsqVal -> IDENT ABRECOL Exp FECHACOL .

    VIRG            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    COND            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    OULOG           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    ELOG            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    OU              reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    E               reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DESLESQ         reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DESLDIR         reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    IGUAL           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DIFER           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MAIORIGUAL      reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MENORIGUAL      reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MAIOR           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MENOR           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MAIS            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MENOS           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MULT            reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DIV             reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    MOD             reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    PONTEIRO        reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    PONTOV          reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    FECHAPAR        reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    FECHACOL        reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    DOISP           reduce using rule 79 (Exp -> IDENT ABRECOL Exp FECHACOL .)
    ATRIB           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    ATRIBCOMP       reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENOSCOMP       reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MULTCOMP        reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DIVCOMP         reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DECREM          reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    INCREMEN        reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)


state 176

    (51) Exp -> Exp COND Exp DOISP . Exp
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 186
    EsqVal                         shift and go to state 69

state 177

    (77) Exp -> Exp PONTEIRO IDENT ABREPAR . ArgumentosOpcionais FECHAPAR
    (85) ArgumentosOpcionais -> . Argumentos
    (86) ArgumentosOpcionais -> . empty
    (87) Argumentos -> . Argumentos VIRG Exp
    (88) Argumentos -> . Exp
    (91) empty -> .
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    FECHAPAR        reduce using rule 91 (empty -> .)
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79

    Exp                            shift and go to state 137
    ArgumentosOpcionais            shift and go to state 187
    Argumentos                     shift and go to state 135
    empty                          shift and go to state 136
    EsqVal                         shift and go to state 69

state 178

    (90) EsqVal -> IDENT ABRECOL Exp . FECHACOL
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    FECHACOL        shift and go to state 188
    VIRG            shift and go to state 94
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113


state 179

    (75) Exp -> NEW IDENT ABREPAR ArgumentosOpcionais . FECHAPAR

    FECHAPAR        shift and go to state 189


state 180

    (32) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando . ELSE Comando
    (33) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .

    FECHACV         reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    IF              reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    WHILE           reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    DO              reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    FOR             reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    FOREACH         reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    BREAK           reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    CONTINUE        reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    RETURN          reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    ABRECV          reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    DECREM          reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    INCREMEN        reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    NAO             reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    COMPLEM         reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    NEW             reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    IDENT           reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    FLOAT           reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    INT             reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    NUMBER          reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    STRING          reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    NIL             reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    PONTOV          reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)
    ELSE            reduce using rule 33 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando .)

  ! ELSE            [ shift and go to state 190 ]


state 181

    (34) Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .

    FECHACV         reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    IF              reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    WHILE           reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    DO              reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    FOR             reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    FOREACH         reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    BREAK           reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    CONTINUE        reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    RETURN          reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    ABRECV          reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    DECREM          reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    INCREMEN        reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    NAO             reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    COMPLEM         reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    NEW             reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    IDENT           reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    FLOAT           reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    INT             reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    NUMBER          reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    STRING          reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    NIL             reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    PONTOV          reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)
    ELSE            reduce using rule 34 (Comando -> WHILE ABREPAR ExpOpc FECHAPAR Comando .)


state 182

    (35) Comando -> DO Comando WHILE ABREPAR ExpOpc . FECHAPAR PONTOV

    FECHAPAR        shift and go to state 191


state 183

    (36) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc . PONTOV ExpOpc FECHAPAR Comando

    PONTOV          shift and go to state 192


state 184

    (37) Comando -> FOREACH IDENT IN IDENT Comando .

    FECHACV         reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    IF              reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    WHILE           reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    DO              reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    FOR             reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    FOREACH         reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    BREAK           reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    CONTINUE        reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    RETURN          reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    ABRECV          reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    DECREM          reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    INCREMEN        reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    NAO             reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    COMPLEM         reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    NEW             reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    IDENT           reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    FLOAT           reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    INT             reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    NUMBER          reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    STRING          reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    NIL             reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    PONTOV          reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)
    ELSE            reduce using rule 37 (Comando -> FOREACH IDENT IN IDENT Comando .)


state 185

    (87) Argumentos -> Argumentos VIRG Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 87 (Argumentos -> Argumentos VIRG Exp .)
    FECHAPAR        reduce using rule 87 (Argumentos -> Argumentos VIRG Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! VIRG            [ shift and go to state 94 ]


state 186

    (51) Exp -> Exp COND Exp DOISP Exp .
    (45) Exp -> Exp . VIRG Exp
    (51) Exp -> Exp . COND Exp DOISP Exp
    (52) Exp -> Exp . OULOG Exp
    (53) Exp -> Exp . ELOG Exp
    (54) Exp -> Exp . OU Exp
    (55) Exp -> Exp . E Exp
    (56) Exp -> Exp . DESLESQ Exp
    (57) Exp -> Exp . DESLDIR Exp
    (58) Exp -> Exp . IGUAL Exp
    (59) Exp -> Exp . DIFER Exp
    (60) Exp -> Exp . MAIORIGUAL Exp
    (61) Exp -> Exp . MENORIGUAL Exp
    (62) Exp -> Exp . MAIOR Exp
    (63) Exp -> Exp . MENOR Exp
    (64) Exp -> Exp . MAIS Exp
    (65) Exp -> Exp . MENOS Exp
    (66) Exp -> Exp . MULT Exp
    (67) Exp -> Exp . DIV Exp
    (68) Exp -> Exp . MOD Exp
    (77) Exp -> Exp . PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR

    VIRG            reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .)
    PONTOV          reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .)
    FECHAPAR        reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .)
    FECHACOL        reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .)
    DOISP           reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .)
    COND            shift and go to state 95
    OULOG           shift and go to state 96
    ELOG            shift and go to state 97
    OU              shift and go to state 98
    E               shift and go to state 99
    DESLESQ         shift and go to state 100
    DESLDIR         shift and go to state 101
    IGUAL           shift and go to state 102
    DIFER           shift and go to state 103
    MAIORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    MAIOR           shift and go to state 106
    MENOR           shift and go to state 107
    MAIS            shift and go to state 108
    MENOS           shift and go to state 109
    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PONTEIRO        shift and go to state 113

  ! COND            [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! OULOG           [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! ELOG            [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! OU              [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! E               [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DESLESQ         [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DESLDIR         [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! IGUAL           [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DIFER           [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MAIORIGUAL      [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MENORIGUAL      [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MAIOR           [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MENOR           [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MAIS            [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MENOS           [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MULT            [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! DIV             [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! MOD             [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! PONTEIRO        [ reduce using rule 51 (Exp -> Exp COND Exp DOISP Exp .) ]
  ! VIRG            [ shift and go to state 94 ]


state 187

    (77) Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais . FECHAPAR

    FECHAPAR        shift and go to state 193


state 188

    (90) EsqVal -> IDENT ABRECOL Exp FECHACOL .

    VIRG            reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    COND            reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    OULOG           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    ELOG            reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    OU              reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    E               reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DESLESQ         reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DESLDIR         reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    IGUAL           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DIFER           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MAIORIGUAL      reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENORIGUAL      reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MAIOR           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENOR           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MAIS            reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MENOS           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MULT            reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DIV             reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    MOD             reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    PONTEIRO        reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    PONTOV          reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    FECHAPAR        reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    FECHACOL        reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)
    DOISP           reduce using rule 90 (EsqVal -> IDENT ABRECOL Exp FECHACOL .)


state 189

    (75) Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .

    VIRG            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    COND            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OULOG           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    ELOG            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OU              reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    E               reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLESQ         reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLDIR         reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    IGUAL           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIFER           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIORIGUAL      reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENORIGUAL      reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIOR           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOR           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIS            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOS           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MULT            reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIV             reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MOD             reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTEIRO        reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTOV          reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHAPAR        reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHACOL        reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DOISP           reduce using rule 75 (Exp -> NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)


state 190

    (32) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE . Comando
    (32) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (34) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (35) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (36) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (37) Comando -> . FOREACH IDENT IN IDENT Comando
    (38) Comando -> . BREAK PONTOV
    (39) Comando -> . CONTINUE PONTOV
    (40) Comando -> . RETURN ExpOpc PONTOV
    (41) Comando -> . ExpOpc PONTOV
    (42) Comando -> . Bloco
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (29) Bloco -> . ABRECV ListaComandos FECHACV
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 59
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    BREAK           shift and go to state 63
    CONTINUE        shift and go to state 64
    RETURN          shift and go to state 65
    ABRECV          shift and go to state 41
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 57
    Comando                        shift and go to state 194
    Bloco                          shift and go to state 66
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 191

    (35) Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR . PONTOV

    PONTOV          shift and go to state 195


state 192

    (36) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV . ExpOpc FECHAPAR Comando
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    FECHAPAR        reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 196
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 193

    (77) Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .

    VIRG            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    COND            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OULOG           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    ELOG            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    OU              reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    E               reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLESQ         reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DESLDIR         reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    IGUAL           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIFER           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIORIGUAL      reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENORIGUAL      reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIOR           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOR           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MAIS            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MENOS           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MULT            reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DIV             reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    MOD             reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTEIRO        reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    PONTOV          reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHAPAR        reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    FECHACOL        reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)
    DOISP           reduce using rule 77 (Exp -> Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR .)


state 194

    (32) Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .

    FECHACV         reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    IF              reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    WHILE           reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    DO              reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    FOR             reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    FOREACH         reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    BREAK           reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    CONTINUE        reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    RETURN          reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    ABRECV          reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    DECREM          reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    INCREMEN        reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    NAO             reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    COMPLEM         reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    NEW             reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    IDENT           reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    FLOAT           reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    INT             reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    NUMBER          reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    STRING          reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    NIL             reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    PONTOV          reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)
    ELSE            reduce using rule 32 (Comando -> IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando .)


state 195

    (35) Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .

    FECHACV         reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    IF              reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    WHILE           reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    DO              reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    FOR             reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    FOREACH         reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    BREAK           reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    CONTINUE        reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    RETURN          reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    ABRECV          reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    DECREM          reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    INCREMEN        reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    NAO             reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    COMPLEM         reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    NEW             reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    IDENT           reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    FLOAT           reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    INT             reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    NUMBER          reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    STRING          reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    NIL             reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    PONTOV          reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)
    ELSE            reduce using rule 35 (Comando -> DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV .)


state 196

    (36) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc . FECHAPAR Comando

    FECHAPAR        shift and go to state 197


state 197

    (36) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR . Comando
    (32) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando ELSE Comando
    (33) Comando -> . IF ABREPAR ExpOpc FECHAPAR Comando
    (34) Comando -> . WHILE ABREPAR ExpOpc FECHAPAR Comando
    (35) Comando -> . DO Comando WHILE ABREPAR ExpOpc FECHAPAR PONTOV
    (36) Comando -> . FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando
    (37) Comando -> . FOREACH IDENT IN IDENT Comando
    (38) Comando -> . BREAK PONTOV
    (39) Comando -> . CONTINUE PONTOV
    (40) Comando -> . RETURN ExpOpc PONTOV
    (41) Comando -> . ExpOpc PONTOV
    (42) Comando -> . Bloco
    (43) ExpOpc -> . Exp
    (44) ExpOpc -> . empty
    (29) Bloco -> . ABRECV ListaComandos FECHACV
    (45) Exp -> . Exp VIRG Exp
    (46) Exp -> . EsqVal ATRIB Exp
    (47) Exp -> . EsqVal ATRIBCOMP Exp
    (48) Exp -> . EsqVal MENOSCOMP Exp
    (49) Exp -> . EsqVal MULTCOMP Exp
    (50) Exp -> . EsqVal DIVCOMP Exp
    (51) Exp -> . Exp COND Exp DOISP Exp
    (52) Exp -> . Exp OULOG Exp
    (53) Exp -> . Exp ELOG Exp
    (54) Exp -> . Exp OU Exp
    (55) Exp -> . Exp E Exp
    (56) Exp -> . Exp DESLESQ Exp
    (57) Exp -> . Exp DESLDIR Exp
    (58) Exp -> . Exp IGUAL Exp
    (59) Exp -> . Exp DIFER Exp
    (60) Exp -> . Exp MAIORIGUAL Exp
    (61) Exp -> . Exp MENORIGUAL Exp
    (62) Exp -> . Exp MAIOR Exp
    (63) Exp -> . Exp MENOR Exp
    (64) Exp -> . Exp MAIS Exp
    (65) Exp -> . Exp MENOS Exp
    (66) Exp -> . Exp MULT Exp
    (67) Exp -> . Exp DIV Exp
    (68) Exp -> . Exp MOD Exp
    (69) Exp -> . DECREM EsqVal
    (70) Exp -> . INCREMEN EsqVal
    (71) Exp -> . EsqVal DECREM
    (72) Exp -> . EsqVal INCREMEN
    (73) Exp -> . NAO Exp
    (74) Exp -> . COMPLEM Exp
    (75) Exp -> . NEW IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (76) Exp -> . IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (77) Exp -> . Exp PONTEIRO IDENT ABREPAR ArgumentosOpcionais FECHAPAR
    (78) Exp -> . IDENT
    (79) Exp -> . IDENT ABRECOL Exp FECHACOL
    (80) Exp -> . FLOAT
    (81) Exp -> . INT
    (82) Exp -> . NUMBER
    (83) Exp -> . STRING
    (84) Exp -> . NIL
    (91) empty -> .
    (89) EsqVal -> . IDENT
    (90) EsqVal -> . IDENT ABRECOL Exp FECHACOL

    IF              shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 59
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    BREAK           shift and go to state 63
    CONTINUE        shift and go to state 64
    RETURN          shift and go to state 65
    ABRECV          shift and go to state 41
    DECREM          shift and go to state 70
    INCREMEN        shift and go to state 71
    NAO             shift and go to state 72
    COMPLEM         shift and go to state 73
    NEW             shift and go to state 74
    IDENT           shift and go to state 62
    FLOAT           shift and go to state 75
    INT             shift and go to state 76
    NUMBER          shift and go to state 77
    STRING          shift and go to state 78
    NIL             shift and go to state 79
    PONTOV          reduce using rule 91 (empty -> .)

    ExpOpc                         shift and go to state 57
    Comando                        shift and go to state 198
    Bloco                          shift and go to state 66
    Exp                            shift and go to state 67
    empty                          shift and go to state 68
    EsqVal                         shift and go to state 69

state 198

    (36) Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .

    FECHACV         reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    IF              reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    WHILE           reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    DO              reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    FOR             reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    FOREACH         reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    BREAK           reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    CONTINUE        reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    RETURN          reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    ABRECV          reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    DECREM          reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    INCREMEN        reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    NAO             reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    COMPLEM         reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    NEW             reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    IDENT           reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    FLOAT           reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    INT             reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    NUMBER          reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    STRING          reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    NIL             reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    PONTOV          reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)
    ELSE            reduce using rule 36 (Comando -> FOR ABREPAR ExpOpc PONTOV ExpOpc PONTOV ExpOpc FECHAPAR Comando .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENT in state 8 resolved as shift
WARNING: shift/reduce conflict for VIRG in state 137 resolved as shift
